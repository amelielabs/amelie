#

open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3485 }]
connect E0 S0 localhost:3485

# test: as (expr) aggregated parsing
create table test (id int primary key, data int as (1) aggregated

# test: insert on conflict do aggregate (without aggregated columns)
create table test (id int primary key, data int)
insert into test values (0, 0) on conflict do aggregate
insert into test values (0, 0) on conflict do aggregate
select * from test
drop table test

# test: insert on conflict do aggregate (key column)
create table test (id int primary key as (42) aggregated)

# test: insert on conflict do aggregate (count)
create table test (id int primary key, data agg(count))
insert into test values (0, 1) on conflict do aggregate
insert into test values (0, 2) on conflict do aggregate
insert into test values (0, 3) on conflict do aggregate
select * from test
drop table test

# test: insert on conflict do aggregate (min)
create table test (id int primary key, data agg(min))
insert into test values (0, 1) on conflict do aggregate
insert into test values (0, 2) on conflict do aggregate
insert into test values (0, 3) on conflict do aggregate
select * from test
drop table test

# test: insert on conflict do aggregate (max)
create table test (id int primary key, data agg(max))
insert into test values (0, 1) on conflict do aggregate
insert into test values (0, 2) on conflict do aggregate
insert into test values (0, 3) on conflict do aggregate
select * from test
drop table test

# test: insert on conflict do aggregate (sum)
create table test (id int primary key, data agg(sum))
insert into test values (0, 1) on conflict do aggregate
insert into test values (0, 2) on conflict do aggregate
insert into test values (0, 3) on conflict do aggregate
select * from test
drop table test

# test: insert on conflict do aggregate (avg)
create table test (id int primary key, data agg(avg))
insert into test values (0, 1) on conflict do aggregate
insert into test values (0, 2) on conflict do aggregate
insert into test values (0, 3) on conflict do aggregate
select * from test
drop table test

create table test (id int primary key, data agg(avg))
insert into test values (0, 1.5) on conflict do aggregate
insert into test values (0, 2.5) on conflict do aggregate
insert into test values (0, 3.5) on conflict do aggregate
select * from test
drop table test

# test: insert on conflict do aggregate (expr)
create table test (id int primary key, data int as (data + 1) aggregated)
insert into test values (0, 0) on conflict do aggregate
insert into test values (0, 0) on conflict do aggregate
insert into test values (0, 0) on conflict do aggregate
insert into test values (0, 0) on conflict do aggregate
select * from test
drop table test

# test: insert on conflict do aggregate (agg, not aggregated)
create table test (id int primary key, data agg(sum) not aggregated)
insert into test values (0, 4) on conflict do aggregate
insert into test values (0, 4) on conflict do aggregate
insert into test values (0, 4) on conflict do aggregate
select * from test
drop table test

# test: insert on conflict do aggregate (agg, not aggregated mix)
create table test (id int primary key, data agg(sum) not aggregated, data2 agg(sum))
insert into test values (0, 4, 2) on conflict do aggregate
insert into test values (0, 4, 2) on conflict do aggregate
insert into test values (0, 4, 2) on conflict do aggregate
select * from test
drop table test

# test: insert on conflict do aggregate (expr, not aggregated)
create table test (id int primary key, data int as (data + 1) aggregated not aggregated)
insert into test values (0, 0) on conflict do aggregate
insert into test values (0, 0) on conflict do aggregate
insert into test values (0, 0) on conflict do aggregate
insert into test values (0, 0) on conflict do aggregate
select * from test
drop table test

# test: insert on conflict do aggregate (stored + auto aggregated)
create table test (id int primary key, data agg(sum) as ( agg_sum(id + 0.5) ) stored)
insert into test values (0, 0)
insert into test values (0, 1) on conflict do aggregate
insert into test values (0, 1) on conflict do aggregate
select * from test
drop table test

# test: insert on conflict do aggregate (stored + aggregated)
create table test (id int primary key, data agg(sum) as ( agg_sum(id + 0.5) ) stored as ( data::agg_sum(@[1]) ) aggregated )
insert into test values (0, 0)
insert into test values (0, 1) on conflict do aggregate
insert into test values (0, 1) on conflict do aggregate
select * from test
drop table test

disconnect S0
close E0
