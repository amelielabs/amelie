open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3485 }]
connect E0 S0 localhost:3485
# test: length/size()
select ""::length
[0]
select ""::size
[0]
select "hello"::length
[5]
select "hello"::size
[5]
select null::size
[null]
select []::size
[0]
select [1,2,3]::size
[3]
select {}::size
[0]
select {"a": null}::size
[1]
select {"a": null, "b": null}::size
[2]
# test: concat()
select concat()
[""]
select concat(null)
[""]
select concat(null, null)
[""]
select concat("a", null)
["a"]
select concat("a", null, "b")
["ab"]
select concat("a", null, "b")
["ab"]
select concat("a", null, "b", 3)
{"msg": "concat(): string argument expected"}
select concat("a", null, "b", 3::string)
["ab3"]
# test: lower()
select null::lower
[null]
select ""::lower
[""]
select "Hello World"::lower
["hello world"]
select null::lower
[null]
# test: upper()
select null::upper
[null]
select ""::upper
[""]
select "Hello World"::upper
["HELLO WORLD"]
# test: substr()
select substr(null, 0)
[null]
select substr("")
{"msg": "substr(): unexpected number of arguments"}
select substr("hi", 0)
{"msg": "substr(): position is out of bounds"}
select substr("hi", 1)
["hi"]
select substr("hi", 2)
["i"]
select substr("hi", 3)
{"msg": "substr(): position is out of bounds"}
select substr("hi", 1, 0)
[""]
select substr("hi", 1, 1)
["h"]
select substr("hi", 1, 2)
["hi"]
select substr("hi", 1, 3)
{"msg": "substr(): position is out of bounds"}
select "hello"::substr(2)
["ello"]
select "hello"::substr(2, 1)
["e"]
select "hello"::substr(2, 2)
["el"]
select "hello"::substr(2, 3)
["ell"]
select "hello"::substr(2, 4)
["ello"]
select "hello"::substr(2, 5)
{"msg": "substr(): position is out of bounds"}
# test: strpos()
select null::strpos("")
[null]
select "hello"::strpos("")
[0]
select "hello"::strpos("h")
[1]
select "hello"::strpos("e")
[2]
select "hello"::strpos("l")
[3]
select "hello"::strpos("ll")
[3]
select "hello"::strpos("llo")
[3]
select "hello"::strpos("lloo")
[0]
select "hello"::strpos("lo")
[4]
select "hello"::strpos("o")
[5]
select substr("hello", "hello"::strpos("lo"), 2)
["lo"]
# test: replace()
select replace('The cat sat on the mat, mat, mat in the corner of the room.','mat','rug')
["The cat sat on the rug, rug, rug in the corner of the room."]
select null::replace("hi", "hello ")
[null]
select "hihi"::replace("hi", "hello ")
["hello hello "]
select "hihellohi"::replace("hi", "")
["hello"]
select "hihellohi"::replace("hello", "")
["hihi"]
select "hihi"::replace("hi", "")
[""]
select "hihello"::replace("hello", "X")
["hiX"]
select "hihell"::replace("hello", "X")
["hihell"]
select "hihel"::replace("hello", "X")
["hihel"]
select "hihe"::replace("hello", "X")
["hihe"]
select "hih"::replace("hello", "X")
["hih"]
select "hi"::replace("hello", "X")
["hi"]
select "hellohi"::replace("hello", "X")
["Xhi"]
select "hellhi"::replace("hello", "X")
["hellhi"]
select "helhi"::replace("hello", "X")
["helhi"]
select "hehi"::replace("hello", "X")
["hehi"]
select "hhi"::replace("hello", "X")
["hhi"]
select "hhi"::replace("", "X")
{"msg": "replace(): invalid from argument"}
# test: ltrim()
select null::ltrim()
[null]
select ""::ltrim()
[""]
select ""::ltrim("")
[""]
select ""::ltrim(null)
{"msg": "ltrim(): expected string for argument 1, but got null"}
select "  	 123"::ltrim()
["123"]
select "  123"::ltrim(" ")
["123"]
select "  123  "::ltrim(" 1")
["23  "]
select "$$123"::ltrim("$")
["123"]
select "$$"::ltrim("$")
[""]
# test: rtrim()
select null::rtrim()
[null]
select ""::rtrim()
[""]
select ""::rtrim("")
[""]
select ""::rtrim(null)
{"msg": "rtrim(): expected string for argument 1, but got null"}
select "  	 123"::rtrim()
["  \t 123"]
select "  123  "::rtrim(" ")
["  123"]
select "  123  "::rtrim(" 13")
["  12"]
select "$$123 $$"::rtrim("$")
["$$123 "]
select "$$"::rtrim("$")
[""]
select "123$"::rtrim("$")
["123"]
select "$"::rtrim("$")
[""]
select ""::rtrim("$")
[""]
# test: trim()
select null::trim()
[null]
select ""::trim()
[""]
select ""::trim("")
[""]
select ""::trim(null)
{"msg": "trim(): expected string for argument 1, but got null"}
select "  	 123"::trim()
["123"]
select "  123  "::trim(" ")
["123"]
select "  123  "::trim(" 13")
["2"]
select "$$123 $$"::trim("$")
["123 "]
select "$$"::trim("$")
[""]
select "123$"::trim("$")
["123"]
select "$"::trim("$")
[""]
select ""::trim("$")
[""]
# test: like()
select null::like('hello%world')
[null]
select 'hello, world'::like('hello%world')
[true]
select 'hello, world' like 'hello%world'
[true]
select public.like('hello, world', 'hello%world')
[true]
select like('hello, world', 'hello%world')
{"msg": "bad expression"}
disconnect S0
close E0
