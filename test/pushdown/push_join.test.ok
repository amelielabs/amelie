open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3485 }], "backends": 3
connect E0 S0 localhost:3485
create shared table ref (id int primary key, data int default 0)
insert into ref (id) values (1), (2), (3)
create table test (id int primary key, data int default 0)
insert into test (id) values (1), (2), (3)
# test: select from table, shared
explain select test.*, ref.* from test, ref
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "union_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "content             0      -      -     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      4      0     ",
      "01": "table_open          0      0      15    # public.test (primary)",
      "02": "table_open          1      20     13    # public.ref (primary)",
      "03": "table_readi32       1      0      0     ",
      "04": "push                1      0      0     ",
      "05": "table_readi32       1      0      1     ",
      "06": "push                1      0      0     ",
      "07": "table_readi32       1      1      0     ",
      "08": "push                1      0      0     ",
      "09": "table_readi32       1      1      1     ",
      "10": "push                1      0      0     ",
      "11": "set_add             0      0      0     ",
      "12": "table_next          1      3      0     ",
      "13": "table_close         1      0      0     ",
      "14": "table_next          0      2      0     ",
      "15": "table_close         0      0      0     ",
      "16": "result              0      0      0     ",
      "17": "ret                 0      0      0     "
    }
  }
}]
select test.*, ref.* from test, ref
[[1, 0, 1, 0], [1, 0, 2, 0], [1, 0, 3, 0], [2, 0, 1, 0], [2, 0, 2, 0], [2, 0, 3, 0], [3, 0, 1, 0], [3, 0, 2, 0], [3, 0, 3, 0]]
# test: select from shared, table
explain select test.*, ref.* from ref, test
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "union_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "content             0      -      -     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      4      0     ",
      "01": "table_open          0      0      15    # public.ref (primary)",
      "02": "table_open          1      19     13    # public.test (primary)",
      "03": "table_readi32       1      1      0     ",
      "04": "push                1      0      0     ",
      "05": "table_readi32       1      1      1     ",
      "06": "push                1      0      0     ",
      "07": "table_readi32       1      0      0     ",
      "08": "push                1      0      0     ",
      "09": "table_readi32       1      0      1     ",
      "10": "push                1      0      0     ",
      "11": "set_add             0      0      0     ",
      "12": "table_next          1      3      0     ",
      "13": "table_close         1      0      0     ",
      "14": "table_next          0      2      0     ",
      "15": "table_close         0      0      0     ",
      "16": "result              0      0      0     ",
      "17": "ret                 0      0      0     "
    }
  }
}]
select test.*, ref.* from ref, test
[[1, 0, 1, 0], [1, 0, 2, 0], [1, 0, 3, 0], [2, 0, 1, 0], [2, 0, 2, 0], [2, 0, 3, 0], [3, 0, 1, 0], [3, 0, 2, 0], [3, 0, 3, 0]]
# test: select from table, table
explain select t.* from test, test t
{"msg": "explain select t.* from test, test t ⟵ only one distributed table can be part of JOIN"}
select t.* from test, test t
{"msg": "select t.* from test, test t ⟵ only one distributed table can be part of JOIN"}
# test: select from table join shared
explain select test.id, ref.id from test join ref on true
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "union_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "content             0      -      -     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      2      0     ",
      "01": "table_open          0      0      13    # public.test (primary)",
      "02": "table_open          1      20     11    # public.ref (primary)",
      "03": "bool                1      1      0     ",
      "04": "jntr                10     1      0     ",
      "05": "table_readi32       1      0      0     ",
      "06": "push                1      0      0     ",
      "07": "table_readi32       1      1      0     ",
      "08": "push                1      0      0     ",
      "09": "set_add             0      0      0     ",
      "10": "table_next          1      3      0     ",
      "11": "table_close         1      0      0     ",
      "12": "table_next          0      2      0     ",
      "13": "table_close         0      0      0     ",
      "14": "result              0      0      0     ",
      "15": "ret                 0      0      0     "
    }
  }
}]
select test.id, ref.id from test join ref on true
[[1, 1], [1, 2], [1, 3], [2, 1], [2, 2], [2, 3], [3, 1], [3, 2], [3, 3]]
# test: select from table join shared on
explain select test.id, ref.id from test join ref on test.id = ref.id
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "union_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "content             0      -      -     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      2      0     ",
      "01": "table_open          0      0      16    # public.test (primary)",
      "02": "table_readi32       1      0      0     ",
      "03": "push                1      0      0     ",
      "04": "table_open_lookup   1      20     14    # public.ref (primary)",
      "05": "table_readi32       1      0      0     ",
      "06": "table_readi32       2      1      0     ",
      "07": "equii               3      1      2     ",
      "08": "jntr                14     3      0     ",
      "09": "table_readi32       1      0      0     ",
      "10": "push                1      0      0     ",
      "11": "table_readi32       1      1      0     ",
      "12": "push                1      0      0     ",
      "13": "set_add             0      0      0     ",
      "14": "table_close         1      0      0     ",
      "15": "table_next          0      2      0     ",
      "16": "table_close         0      0      0     ",
      "17": "result              0      0      0     ",
      "18": "ret                 0      0      0     "
    }
  }
}]
select test.id, ref.id from test join ref on test.id = ref.id
[[1, 1], [2, 2], [3, 3]]
# test: select from table join shared on #2
explain select test.id, ref.id from test join ref on test.id = ref.id join ref ref2 on test.id = ref2.id
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "union_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "content             0      -      -     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      2      0     ",
      "01": "table_open          0      0      24    # public.test (primary)",
      "02": "table_readi32       1      0      0     ",
      "03": "push                1      0      0     ",
      "04": "table_open_lookup   1      20     22    # public.ref (primary)",
      "05": "table_readi32       1      0      0     ",
      "06": "push                1      0      0     ",
      "07": "table_open_lookup   2      39     21    # public.ref (primary)",
      "08": "table_readi32       1      0      0     ",
      "09": "table_readi32       2      1      0     ",
      "10": "equii               3      1      2     ",
      "11": "table_readi32       1      0      0     ",
      "12": "table_readi32       2      2      0     ",
      "13": "equii               4      1      2     ",
      "14": "and                 1      3      4     ",
      "15": "jntr                21     1      0     ",
      "16": "table_readi32       1      0      0     ",
      "17": "push                1      0      0     ",
      "18": "table_readi32       1      1      0     ",
      "19": "push                1      0      0     ",
      "20": "set_add             0      0      0     ",
      "21": "table_close         2      0      0     ",
      "22": "table_close         1      0      0     ",
      "23": "table_next          0      2      0     ",
      "24": "table_close         0      0      0     ",
      "25": "result              0      0      0     ",
      "26": "ret                 0      0      0     "
    }
  }
}]
select test.id, ref.id from test join ref on test.id = ref.id join ref ref2 on test.id = ref2.id
[[1, 1], [2, 2], [3, 3]]
# test: select from table join shared on #3
explain select test.id, ref.id from test join ref on test.id = ref.id join ref ref2 on test.id = ref2.id where test.id > 0
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "union_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "content             0      -      -     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      2      0     ",
      "01": "int                 1      -      0     # 0",
      "02": "push                1      0      0     ",
      "03": "table_open          0      0      30    # public.test (primary)",
      "04": "table_readi32       1      0      0     ",
      "05": "push                1      0      0     ",
      "06": "table_open_lookup   1      20     28    # public.ref (primary)",
      "07": "table_readi32       1      0      0     ",
      "08": "push                1      0      0     ",
      "09": "table_open_lookup   2      39     27    # public.ref (primary)",
      "10": "table_readi32       1      0      0     ",
      "11": "int                 2      -      0     # 0",
      "12": "gtii                3      1      2     ",
      "13": "table_readi32       1      0      0     ",
      "14": "table_readi32       2      1      0     ",
      "15": "equii               4      1      2     ",
      "16": "and                 1      3      4     ",
      "17": "table_readi32       2      0      0     ",
      "18": "table_readi32       3      2      0     ",
      "19": "equii               4      2      3     ",
      "20": "and                 2      1      4     ",
      "21": "jntr                27     2      0     ",
      "22": "table_readi32       1      0      0     ",
      "23": "push                1      0      0     ",
      "24": "table_readi32       1      1      0     ",
      "25": "push                1      0      0     ",
      "26": "set_add             0      0      0     ",
      "27": "table_close         2      0      0     ",
      "28": "table_close         1      0      0     ",
      "29": "table_next          0      4      0     ",
      "30": "table_close         0      0      0     ",
      "31": "result              0      0      0     ",
      "32": "ret                 0      0      0     "
    }
  }
}]
select test.id, ref.id from test join ref on test.id = ref.id join ref ref2 on test.id = ref2.id where test.id > 0
[[1, 1], [2, 2], [3, 3]]
# test: select from table join shared on #4
explain select test.id, ref.id from test, ref where test.id = ref.id
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "union_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "content             0      -      -     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      2      0     ",
      "01": "table_open          0      0      16    # public.test (primary)",
      "02": "table_readi32       1      0      0     ",
      "03": "push                1      0      0     ",
      "04": "table_open_lookup   1      20     14    # public.ref (primary)",
      "05": "table_readi32       1      0      0     ",
      "06": "table_readi32       2      1      0     ",
      "07": "equii               3      1      2     ",
      "08": "jntr                14     3      0     ",
      "09": "table_readi32       1      0      0     ",
      "10": "push                1      0      0     ",
      "11": "table_readi32       1      1      0     ",
      "12": "push                1      0      0     ",
      "13": "set_add             0      0      0     ",
      "14": "table_close         1      0      0     ",
      "15": "table_next          0      2      0     ",
      "16": "table_close         0      0      0     ",
      "17": "result              0      0      0     ",
      "18": "ret                 0      0      0     "
    }
  }
}]
select test.id, ref.id from test, ref where test.id = ref.id
[[1, 1], [2, 2], [3, 3]]
explain select test.id, ref.id from test, ref where ref.id = test.id
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "union_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "content             0      -      -     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      2      0     ",
      "01": "table_open          0      0      16    # public.test (primary)",
      "02": "table_readi32       1      0      0     ",
      "03": "push                1      0      0     ",
      "04": "table_open_lookup   1      20     14    # public.ref (primary)",
      "05": "table_readi32       1      1      0     ",
      "06": "table_readi32       2      0      0     ",
      "07": "equii               3      1      2     ",
      "08": "jntr                14     3      0     ",
      "09": "table_readi32       1      0      0     ",
      "10": "push                1      0      0     ",
      "11": "table_readi32       1      1      0     ",
      "12": "push                1      0      0     ",
      "13": "set_add             0      0      0     ",
      "14": "table_close         1      0      0     ",
      "15": "table_next          0      2      0     ",
      "16": "table_close         0      0      0     ",
      "17": "result              0      0      0     ",
      "18": "ret                 0      0      0     "
    }
  }
}]
select test.id, ref.id from test, ref where ref.id = test.id
[[1, 1], [2, 2], [3, 3]]
explain select test.id, ref.id from test, ref where ref.id = 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "union_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "content             0      -      -     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      2      0     ",
      "01": "table_open          0      0      16    # public.test (primary)",
      "02": "int                 1      -      0     # 1",
      "03": "push                1      0      0     ",
      "04": "table_open_lookup   1      20     14    # public.ref (primary)",
      "05": "table_readi32       1      1      0     ",
      "06": "int                 2      -      0     # 1",
      "07": "equii               3      1      2     ",
      "08": "jntr                14     3      0     ",
      "09": "table_readi32       1      0      0     ",
      "10": "push                1      0      0     ",
      "11": "table_readi32       1      1      0     ",
      "12": "push                1      0      0     ",
      "13": "set_add             0      0      0     ",
      "14": "table_close         1      0      0     ",
      "15": "table_next          0      2      0     ",
      "16": "table_close         0      0      0     ",
      "17": "result              0      0      0     ",
      "18": "ret                 0      0      0     "
    }
  }
}]
select test.id, ref.id from test, ref where ref.id = 1
[[1, 1], [2, 1], [3, 1]]
explain select test.id, ref.id from test, ref where ref.id = 1 and test.id = 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_lookup         0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "union_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "content             0      -      -     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      2      0     ",
      "01": "int                 1      -      0     # 1",
      "02": "push                1      0      0     ",
      "03": "table_open_lookup   0      0      21    # public.test (primary)",
      "04": "int                 1      -      0     # 1",
      "05": "push                1      0      0     ",
      "06": "table_open_lookup   1      20     20    # public.ref (primary)",
      "07": "table_readi32       1      1      0     ",
      "08": "int                 2      -      0     # 1",
      "09": "equii               3      1      2     ",
      "10": "table_readi32       1      0      0     ",
      "11": "int                 2      -      0     # 1",
      "12": "equii               4      1      2     ",
      "13": "and                 1      3      4     ",
      "14": "jntr                20     1      0     ",
      "15": "table_readi32       1      0      0     ",
      "16": "push                1      0      0     ",
      "17": "table_readi32       1      1      0     ",
      "18": "push                1      0      0     ",
      "19": "set_add             0      0      0     ",
      "20": "table_close         1      0      0     ",
      "21": "table_close         0      0      0     ",
      "22": "result              0      0      0     ",
      "23": "ret                 0      0      0     "
    }
  }
}]
select test.id, ref.id from test, ref where ref.id = 1 and test.id = 1
[[1, 1]]
explain select test.id, ref.id from test, ref where ref.id >= test.id
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "union_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "content             0      -      -     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      2      0     ",
      "01": "table_open          0      0      17    # public.test (primary)",
      "02": "table_readi32       1      0      0     ",
      "03": "push                1      0      0     ",
      "04": "table_open          1      20     15    # public.ref (primary)",
      "05": "table_readi32       1      1      0     ",
      "06": "table_readi32       2      0      0     ",
      "07": "gteii               3      1      2     ",
      "08": "jntr                14     3      0     ",
      "09": "table_readi32       1      0      0     ",
      "10": "push                1      0      0     ",
      "11": "table_readi32       1      1      0     ",
      "12": "push                1      0      0     ",
      "13": "set_add             0      0      0     ",
      "14": "table_next          1      5      0     ",
      "15": "table_close         1      0      0     ",
      "16": "table_next          0      2      0     ",
      "17": "table_close         0      0      0     ",
      "18": "result              0      0      0     ",
      "19": "ret                 0      0      0     "
    }
  }
}]
select test.id, ref.id from test, ref where ref.id >= test.id
[[1, 1], [1, 2], [1, 3], [2, 2], [2, 3], [3, 3]]
# test: select from table join using
explain select test.id, ref.id from test join ref using
{"msg": "explain select test.id, ref.id from test join ref using ⟵ ( expected"}
explain select test.id, ref.id from test join ref using(
{"msg": "explain select test.id, ref.id from test join ref using( ⟵ name expected"}
explain select test.id, ref.id from test join ref using(1
{"msg": "explain select test.id, ref.id from test join ref using(❰1❱ ⟵ name expected"}
explain select test.id, ref.id from test join ref using(id
{"msg": "explain select test.id, ref.id from test join ref using(id ⟵ ) expected"}
explain select test.id, ref.id from test join ref using(id)
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "union_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "content             0      -      -     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      2      0     ",
      "01": "table_open          0      0      16    # public.test (primary)",
      "02": "table_readi32       1      0      0     ",
      "03": "push                1      0      0     ",
      "04": "table_open_lookup   1      20     14    # public.ref (primary)",
      "05": "table_readi32       1      0      0     ",
      "06": "table_readi32       2      1      0     ",
      "07": "equii               3      1      2     ",
      "08": "jntr                14     3      0     ",
      "09": "table_readi32       1      0      0     ",
      "10": "push                1      0      0     ",
      "11": "table_readi32       1      1      0     ",
      "12": "push                1      0      0     ",
      "13": "set_add             0      0      0     ",
      "14": "table_close         1      0      0     ",
      "15": "table_next          0      2      0     ",
      "16": "table_close         0      0      0     ",
      "17": "result              0      0      0     ",
      "18": "ret                 0      0      0     "
    }
  }
}]
select test.id, ref.id from test join ref using(id)
[[1, 1], [2, 2], [3, 3]]
# test: select from table join using (not found)
select test.id, ref.id from test join ref using(unknown)
{"msg": "<test.unknown> column not found"}
# test: select from table join using #2
explain select test.id, ref.id from test join ref using (id) join ref ref2 using (id) where test.id > 0
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "union_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "content             0      -      -     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      2      0     ",
      "01": "int                 1      -      0     # 0",
      "02": "push                1      0      0     ",
      "03": "table_open          0      0      30    # public.test (primary)",
      "04": "table_readi32       1      0      0     ",
      "05": "push                1      0      0     ",
      "06": "table_open_lookup   1      20     28    # public.ref (primary)",
      "07": "table_readi32       1      1      0     ",
      "08": "push                1      0      0     ",
      "09": "table_open_lookup   2      39     27    # public.ref (primary)",
      "10": "table_readi32       1      0      0     ",
      "11": "int                 2      -      0     # 0",
      "12": "gtii                3      1      2     ",
      "13": "table_readi32       1      0      0     ",
      "14": "table_readi32       2      1      0     ",
      "15": "equii               4      1      2     ",
      "16": "and                 1      3      4     ",
      "17": "table_readi32       2      1      0     ",
      "18": "table_readi32       3      2      0     ",
      "19": "equii               4      2      3     ",
      "20": "and                 2      1      4     ",
      "21": "jntr                27     2      0     ",
      "22": "table_readi32       1      0      0     ",
      "23": "push                1      0      0     ",
      "24": "table_readi32       1      1      0     ",
      "25": "push                1      0      0     ",
      "26": "set_add             0      0      0     ",
      "27": "table_close         2      0      0     ",
      "28": "table_close         1      0      0     ",
      "29": "table_next          0      4      0     ",
      "30": "table_close         0      0      0     ",
      "31": "result              0      0      0     ",
      "32": "ret                 0      0      0     "
    }
  }
}]
select test.id, ref.id from test join ref using (id) join ref ref2 using (id) where test.id > 0
[[1, 1], [2, 2], [3, 3]]
select test.id, ref.id from test join ref using (id) join ref ref2 using (id2) where test.id > 0
{"msg": "<ref.id2> column not found"}
# test: with (select from table) select from table, cte
explain with a as (select * from test) select * from test, a where test.id = a.id
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "union_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "send_all            1      11     -     # public.test",
      "07": "recv                1      0      0     ",
      "08": "bool                0      0      0     ",
      "09": "push                0      0      0     ",
      "10": "union_recv          0      -1     -1    ",
      "11": "cte_set             1      0      0     ",
      "12": "content             1      -      -     ",
      "13": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      2      0     ",
      "01": "table_open          0      0      8     # public.test (primary)",
      "02": "table_readi32       1      0      0     ",
      "03": "push                1      0      0     ",
      "04": "table_readi32       1      0      1     ",
      "05": "push                1      0      0     ",
      "06": "set_add             0      0      0     ",
      "07": "table_next          0      2      0     ",
      "08": "table_close         0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     ",
      "11": "set                 0      4      0     ",
      "12": "table_open          0      20     31    # public.test (primary)",
      "13": "cte_get             1      0      0     ",
      "14": "store_open          1      1      29    ",
      "15": "table_readi32       2      0      0     ",
      "16": "store_read          3      1      0     ",
      "17": "equii               4      2      3     ",
      "18": "jntr                28     4      0     ",
      "19": "table_readi32       2      0      0     ",
      "20": "push                2      0      0     ",
      "21": "table_readi32       2      0      1     ",
      "22": "push                2      0      0     ",
      "23": "store_read          2      1      0     ",
      "24": "push                2      0      0     ",
      "25": "store_read          2      1      1     ",
      "26": "push                2      0      0     ",
      "27": "set_add             0      0      0     ",
      "28": "store_next          1      15     0     ",
      "29": "store_close         1      1      0     ",
      "30": "table_next          0      13     0     ",
      "31": "table_close         0      0      0     ",
      "32": "result              0      0      0     ",
      "33": "ret                 0      0      0     "
    }
  }
}]
with a as (select * from test) select * from test, a where test.id = a.id
[[1, 0, 1, 0], [2, 0, 2, 0], [3, 0, 3, 0]]
# test: with (select from table) select from table, cte (point lookup)
explain with a as (select * from test) select * from test, a where test.id = 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "union_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "send_lookup         1      11     -     # public.test",
      "07": "recv                1      0      0     ",
      "08": "bool                0      0      0     ",
      "09": "push                0      0      0     ",
      "10": "union_recv          0      -1     -1    ",
      "11": "cte_set             1      0      0     ",
      "12": "content             1      -      -     ",
      "13": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      2      0     ",
      "01": "table_open          0      0      8     # public.test (primary)",
      "02": "table_readi32       1      0      0     ",
      "03": "push                1      0      0     ",
      "04": "table_readi32       1      0      1     ",
      "05": "push                1      0      0     ",
      "06": "set_add             0      0      0     ",
      "07": "table_next          0      2      0     ",
      "08": "table_close         0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     ",
      "11": "set                 0      4      0     ",
      "12": "int                 1      -      0     # 1",
      "13": "push                1      0      0     ",
      "14": "table_open_lookup   0      20     32    # public.test (primary)",
      "15": "cte_get             1      0      0     ",
      "16": "store_open          1      1      31    ",
      "17": "table_readi32       2      0      0     ",
      "18": "int                 3      -      0     # 1",
      "19": "equii               4      2      3     ",
      "20": "jntr                30     4      0     ",
      "21": "table_readi32       2      0      0     ",
      "22": "push                2      0      0     ",
      "23": "table_readi32       2      0      1     ",
      "24": "push                2      0      0     ",
      "25": "store_read          2      1      0     ",
      "26": "push                2      0      0     ",
      "27": "store_read          2      1      1     ",
      "28": "push                2      0      0     ",
      "29": "set_add             0      0      0     ",
      "30": "store_next          1      17     0     ",
      "31": "store_close         1      1      0     ",
      "32": "table_close         0      0      0     ",
      "33": "result              0      0      0     ",
      "34": "ret                 0      0      0     "
    }
  }
}]
with a as (select * from test) select * from test, a where test.id = 1
[[1, 0, 1, 0], [1, 0, 2, 0], [1, 0, 3, 0]]
# test: with (select from table) select from cte, table
explain with a as (select * from test) select * from a, test where test.id = a.id
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "union_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "send_all            1      11     -     # public.test",
      "07": "recv                1      0      0     ",
      "08": "bool                0      0      0     ",
      "09": "push                0      0      0     ",
      "10": "union_recv          0      -1     -1    ",
      "11": "cte_set             1      0      0     ",
      "12": "content             1      -      -     ",
      "13": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      2      0     ",
      "01": "table_open          0      0      8     # public.test (primary)",
      "02": "table_readi32       1      0      0     ",
      "03": "push                1      0      0     ",
      "04": "table_readi32       1      0      1     ",
      "05": "push                1      0      0     ",
      "06": "set_add             0      0      0     ",
      "07": "table_next          0      2      0     ",
      "08": "table_close         0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     ",
      "11": "set                 0      4      0     ",
      "12": "cte_get             1      0      0     ",
      "13": "store_open          0      1      32    ",
      "14": "store_read          2      0      0     ",
      "15": "push                2      0      0     ",
      "16": "table_open_lookup   1      20     30    # public.test (primary)",
      "17": "table_readi32       2      1      0     ",
      "18": "store_read          3      0      0     ",
      "19": "equii               4      2      3     ",
      "20": "jntr                30     4      0     ",
      "21": "store_read          2      0      0     ",
      "22": "push                2      0      0     ",
      "23": "store_read          2      0      1     ",
      "24": "push                2      0      0     ",
      "25": "table_readi32       2      1      0     ",
      "26": "push                2      0      0     ",
      "27": "table_readi32       2      1      1     ",
      "28": "push                2      0      0     ",
      "29": "set_add             0      0      0     ",
      "30": "table_close         1      0      0     ",
      "31": "store_next          0      14     0     ",
      "32": "store_close         0      1      0     ",
      "33": "result              0      0      0     ",
      "34": "ret                 0      0      0     "
    }
  }
}]
with a as (select * from test) select * from a, test where test.id = a.id
[[1, 0, 1, 0], [2, 0, 2, 0], [3, 0, 3, 0]]
# test: with (select from table) select from cte, table (point lookup)
explain with a as (select * from test) select * from a, test where test.id = 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "union_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "send_lookup         1      11     -     # public.test",
      "07": "recv                1      0      0     ",
      "08": "bool                0      0      0     ",
      "09": "push                0      0      0     ",
      "10": "union_recv          0      -1     -1    ",
      "11": "cte_set             1      0      0     ",
      "12": "content             1      -      -     ",
      "13": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      2      0     ",
      "01": "table_open          0      0      8     # public.test (primary)",
      "02": "table_readi32       1      0      0     ",
      "03": "push                1      0      0     ",
      "04": "table_readi32       1      0      1     ",
      "05": "push                1      0      0     ",
      "06": "set_add             0      0      0     ",
      "07": "table_next          0      2      0     ",
      "08": "table_close         0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     ",
      "11": "set                 0      4      0     ",
      "12": "cte_get             1      0      0     ",
      "13": "store_open          0      1      32    ",
      "14": "int                 2      -      0     # 1",
      "15": "push                2      0      0     ",
      "16": "table_open_lookup   1      20     30    # public.test (primary)",
      "17": "table_readi32       2      1      0     ",
      "18": "int                 3      -      0     # 1",
      "19": "equii               4      2      3     ",
      "20": "jntr                30     4      0     ",
      "21": "store_read          2      0      0     ",
      "22": "push                2      0      0     ",
      "23": "store_read          2      0      1     ",
      "24": "push                2      0      0     ",
      "25": "table_readi32       2      1      0     ",
      "26": "push                2      0      0     ",
      "27": "table_readi32       2      1      1     ",
      "28": "push                2      0      0     ",
      "29": "set_add             0      0      0     ",
      "30": "table_close         1      0      0     ",
      "31": "store_next          0      14     0     ",
      "32": "store_close         0      1      0     ",
      "33": "result              0      0      0     ",
      "34": "ret                 0      0      0     "
    }
  }
}]
with a as (select * from test) select * from a, test where test.id = 1
[[1, 0, 1, 0], [2, 0, 1, 0], [3, 0, 1, 0]]
# test: select from table join group by
select test.id from test, ref group by test.id
[1, 2, 3]
select test.id from test join ref on (test.id = ref.id) group by test.id
[1, 2, 3]
select test.id from test join ref on (test.id = ref.id) group by ref.id
{"msg": "<test.id> column must appear in the GROUP BY clause or be used in an aggregate function"}
select id from test join ref on (test.id = ref.id) group by ref.id
{"msg": "<id> column must appear in the GROUP BY clause or be used in an aggregate function"}
select ref.id from test join ref on (test.id = ref.id) group by id
{"msg": "<id> column requires explicit target name"}
explain select ref.id from test join ref on (test.id = ref.id) group by ref.id
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      1      0     ",
      "03": "push                0      0      0     ",
      "04": "union_recv          0      -1     -1    ",
      "05": "union_set_aggs      0      40     0     ",
      "06": "set                 1      1      0     ",
      "07": "store_open          2      0      12    ",
      "08": "store_read          2      2      0     ",
      "09": "push                2      0      0     ",
      "10": "set_add             1      0      0     ",
      "11": "store_next          2      8      0     ",
      "12": "store_close         2      1      0     ",
      "13": "cte_set             0      1      0     ",
      "14": "content             0      -      -     ",
      "15": "ret                 0      0      0     "
    },
    "node": {
      "00": "set_ordered         0      0      1     ",
      "01": "table_open          0      1      14    # public.test (primary)",
      "02": "table_readi32       1      0      0     ",
      "03": "push                1      0      0     ",
      "04": "table_open_lookup   1      21     12    # public.ref (primary)",
      "05": "table_readi32       1      0      0     ",
      "06": "table_readi32       2      1      0     ",
      "07": "equii               3      1      2     ",
      "08": "jntr                12     3      0     ",
      "09": "table_readi32       1      1      0     ",
      "10": "push                1      0      0     ",
      "11": "set_get             1      0      0     ",
      "12": "table_close         1      0      0     ",
      "13": "table_next          0      2      0     ",
      "14": "table_close         0      0      0     ",
      "15": "set_sort            0      0      0     ",
      "16": "result              0      0      0     ",
      "17": "ret                 0      0      0     "
    }
  }
}]
select ref.id from test join ref on (test.id = ref.id) group by ref.id
[1, 2, 3]
select ref.id, count(*) from test join ref on (test.id = ref.id) group by ref.id
[[1, 1], [2, 1], [3, 1]]
select ref.id, count(test.id) + count(ref.id) from test join ref on (test.id = ref.id) group by ref.id
[[1, 2], [2, 2], [3, 2]]
# test: select from table join group by path
create shared table ref2 (id int primary key, data json)
insert into ref2 values (1, {"id": 1}), (2, {"id": 2}), (3, {"id": 3})
select ref2.data from test join ref2 on (test.id = ref2.id) group by ref2.id
{"msg": "<ref2.data> column must appear in the GROUP BY clause or be used in an aggregate function"}
select ref2.data.id, ref2.data.id::type from test join ref2 on (test.id = ref2.id) group by ref2.data.id
[[1, "json"], [2, "json"], [3, "json"]]
select ref2.data.id, ref2.data.id::type from test join ref2 on (test.id = ref2.id) group by 1
[[1, "json"], [2, "json"], [3, "json"]]
select ref2.data, ref2.data.id from test join ref2 on (test.id = ref2.id) group by ref2.data
[[{
  "id": 1
}, 1], [{
  "id": 2
}, 2], [{
  "id": 3
}, 3]]
drop table ref
drop table ref2
drop table test
disconnect S0
close E0
