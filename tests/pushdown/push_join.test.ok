open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3485 }], "backends": 3
connect E0 S0 127.0.0.1:3485
create table ref (id int primary key, data int default 0)
insert into ref (id) values (1), (2), (3)
create table test (id int primary key, data int default 0)
insert into test (id) values (1), (2), (3)
# test: select from table, ref
explain select test.*, ref.* from test, ref
[{
  "bytecode": {
    "frontend": {
      "00": "union               0      0      0     ",
      "01": "send_all            0      -      0     # public.test",
      "02": "union_recv          0      0      0     ",
      "03": "union_set           0      0      -1    ",
      "04": "content             0      -      -     ",
      "05": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 0      4      0     ",
      "01": "table_open_part     1      0      15    # public.test (primary)",
      "02": "table_open          2      20     13    # public.ref (primary)",
      "03": "table_readi32       3      1      0     ",
      "04": "push                3      0      0     ",
      "05": "table_readi32       3      1      1     ",
      "06": "push                3      0      0     ",
      "07": "table_readi32       3      2      0     ",
      "08": "push                3      0      0     ",
      "09": "table_readi32       3      2      1     ",
      "10": "push                3      0      0     ",
      "11": "set_add             0      0      0     ",
      "12": "table_next          2      3      0     ",
      "13": "free                2      0      0     ",
      "14": "table_next          1      2      0     ",
      "15": "free                1      0      0     ",
      "16": "result              0      0      0     ",
      "17": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"], ["public.ref", "ro_exclusive"]]
}]
select test.*, ref.* from test, ref
[[1, 0, 1, 0], [1, 0, 2, 0], [1, 0, 3, 0], [3, 0, 1, 0], [3, 0, 2, 0], [3, 0, 3, 0], [2, 0, 1, 0], [2, 0, 2, 0], [2, 0, 3, 0]]
# test: select from ref, table
explain select test.*, ref.* from ref, test
[{
  "bytecode": {
    "frontend": {
      "00": "union               0      0      0     ",
      "01": "send_all            0      -      0     # public.ref",
      "02": "union_recv          0      0      0     ",
      "03": "union_set           0      0      -1    ",
      "04": "content             0      -      -     ",
      "05": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 0      4      0     ",
      "01": "table_open_part     1      0      15    # public.ref (primary)",
      "02": "table_open          2      19     13    # public.test (primary)",
      "03": "table_readi32       3      2      0     ",
      "04": "push                3      0      0     ",
      "05": "table_readi32       3      2      1     ",
      "06": "push                3      0      0     ",
      "07": "table_readi32       3      1      0     ",
      "08": "push                3      0      0     ",
      "09": "table_readi32       3      1      1     ",
      "10": "push                3      0      0     ",
      "11": "set_add             0      0      0     ",
      "12": "table_next          2      3      0     ",
      "13": "free                2      0      0     ",
      "14": "table_next          1      2      0     ",
      "15": "free                1      0      0     ",
      "16": "result              0      0      0     ",
      "17": "ret                 0      0      0     "
    }
  },
  "access": [["public.ref", "ro"], ["public.test", "ro_exclusive"]]
}]
select test.*, ref.* from ref, test
[[1, 0, 1, 0], [2, 0, 1, 0], [3, 0, 1, 0], [1, 0, 3, 0], [2, 0, 3, 0], [3, 0, 3, 0], [1, 0, 2, 0], [2, 0, 2, 0], [3, 0, 2, 0]]
# test: select from table, table
explain select t.* from test, test t
[{
  "bytecode": {
    "frontend": {
      "00": "union               0      0      0     ",
      "01": "send_all            0      -      0     # public.test",
      "02": "union_recv          0      0      0     ",
      "03": "union_set           0      0      -1    ",
      "04": "content             0      -      -     ",
      "05": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 0      2      0     ",
      "01": "table_open_part     1      0      11    # public.test (primary)",
      "02": "table_open          2      20     9     # public.test (primary)",
      "03": "table_readi32       3      2      0     ",
      "04": "push                3      0      0     ",
      "05": "table_readi32       3      2      1     ",
      "06": "push                3      0      0     ",
      "07": "set_add             0      0      0     ",
      "08": "table_next          2      3      0     ",
      "09": "free                2      0      0     ",
      "10": "table_next          1      2      0     ",
      "11": "free                1      0      0     ",
      "12": "result              0      0      0     ",
      "13": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro_exclusive"]]
}]
select t.* from test, test t
[[1, 0], [2, 0], [3, 0], [1, 0], [2, 0], [3, 0], [1, 0], [2, 0], [3, 0]]
# test: select from table join table
explain select test.id, ref.id from test join ref on true
[{
  "bytecode": {
    "frontend": {
      "00": "union               0      0      0     ",
      "01": "send_all            0      -      0     # public.test",
      "02": "union_recv          0      0      0     ",
      "03": "union_set           0      0      -1    ",
      "04": "content             0      -      -     ",
      "05": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 0      2      0     ",
      "01": "table_open_part     1      0      13    # public.test (primary)",
      "02": "table_open          2      20     11    # public.ref (primary)",
      "03": "bool                3      1      0     ",
      "04": "jntr                10     3      0     ",
      "05": "table_readi32       3      1      0     ",
      "06": "push                3      0      0     ",
      "07": "table_readi32       3      2      0     ",
      "08": "push                3      0      0     ",
      "09": "set_add             0      0      0     ",
      "10": "table_next          2      3      0     ",
      "11": "free                2      0      0     ",
      "12": "table_next          1      2      0     ",
      "13": "free                1      0      0     ",
      "14": "result              0      0      0     ",
      "15": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"], ["public.ref", "ro_exclusive"]]
}]
select test.id, ref.id from test join ref on true
[[1, 1], [1, 2], [1, 3], [3, 1], [3, 2], [3, 3], [2, 1], [2, 2], [2, 3]]
# test: select from table join table on
explain select test.id, ref.id from test join ref on test.id = ref.id
[{
  "bytecode": {
    "frontend": {
      "00": "union               0      0      0     ",
      "01": "send_all            0      -      0     # public.test",
      "02": "union_recv          0      0      0     ",
      "03": "union_set           0      0      -1    ",
      "04": "content             0      -      -     ",
      "05": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 0      2      0     ",
      "01": "table_open_part     1      0      16    # public.test (primary)",
      "02": "table_readi32       2      1      0     ",
      "03": "push                2      0      0     ",
      "04": "table_openl         2      20     14    # public.ref (primary)",
      "05": "table_readi32       3      1      0     ",
      "06": "table_readi32       4      2      0     ",
      "07": "equii               5      3      4     ",
      "08": "jntr                14     5      0     ",
      "09": "table_readi32       3      1      0     ",
      "10": "push                3      0      0     ",
      "11": "table_readi32       3      2      0     ",
      "12": "push                3      0      0     ",
      "13": "set_add             0      0      0     ",
      "14": "free                2      0      0     ",
      "15": "table_next          1      2      0     ",
      "16": "free                1      0      0     ",
      "17": "result              0      0      0     ",
      "18": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"], ["public.ref", "ro_exclusive"]]
}]
select test.id, ref.id from test join ref on test.id = ref.id
[[1, 1], [3, 3], [2, 2]]
# test: select from table join table on #2
explain select test.id, ref.id from test join ref on test.id = ref.id join ref ref2 on test.id = ref2.id
[{
  "bytecode": {
    "frontend": {
      "00": "union               0      0      0     ",
      "01": "send_all            0      -      0     # public.test",
      "02": "union_recv          0      0      0     ",
      "03": "union_set           0      0      -1    ",
      "04": "content             0      -      -     ",
      "05": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 0      2      0     ",
      "01": "table_open_part     1      0      24    # public.test (primary)",
      "02": "table_readi32       2      1      0     ",
      "03": "push                2      0      0     ",
      "04": "table_openl         2      20     22    # public.ref (primary)",
      "05": "table_readi32       3      1      0     ",
      "06": "push                3      0      0     ",
      "07": "table_openl         3      39     21    # public.ref (primary)",
      "08": "table_readi32       4      1      0     ",
      "09": "table_readi32       5      2      0     ",
      "10": "equii               6      4      5     ",
      "11": "table_readi32       4      1      0     ",
      "12": "table_readi32       5      3      0     ",
      "13": "equii               7      4      5     ",
      "14": "and                 4      6      7     ",
      "15": "jntr                21     4      0     ",
      "16": "table_readi32       4      1      0     ",
      "17": "push                4      0      0     ",
      "18": "table_readi32       4      2      0     ",
      "19": "push                4      0      0     ",
      "20": "set_add             0      0      0     ",
      "21": "free                3      0      0     ",
      "22": "free                2      0      0     ",
      "23": "table_next          1      2      0     ",
      "24": "free                1      0      0     ",
      "25": "result              0      0      0     ",
      "26": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"], ["public.ref", "ro_exclusive"]]
}]
select test.id, ref.id from test join ref on test.id = ref.id join ref ref2 on test.id = ref2.id
[[1, 1], [3, 3], [2, 2]]
# test: select from table join table on #3
explain select test.id, ref.id from test join ref on test.id = ref.id join ref ref2 on test.id = ref2.id where test.id > 0
[{
  "bytecode": {
    "frontend": {
      "00": "union               0      0      0     ",
      "01": "send_all            0      -      0     # public.test",
      "02": "union_recv          0      0      0     ",
      "03": "union_set           0      0      -1    ",
      "04": "content             0      -      -     ",
      "05": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 0      2      0     ",
      "01": "int                 1      -      0     # 0",
      "02": "push                1      0      0     ",
      "03": "table_open_part     1      0      30    # public.test (primary)",
      "04": "table_readi32       2      1      0     ",
      "05": "push                2      0      0     ",
      "06": "table_openl         2      20     28    # public.ref (primary)",
      "07": "table_readi32       3      1      0     ",
      "08": "push                3      0      0     ",
      "09": "table_openl         3      39     27    # public.ref (primary)",
      "10": "table_readi32       4      1      0     ",
      "11": "int                 5      -      0     # 0",
      "12": "gtii                6      4      5     ",
      "13": "table_readi32       4      1      0     ",
      "14": "table_readi32       5      2      0     ",
      "15": "equii               7      4      5     ",
      "16": "and                 4      6      7     ",
      "17": "table_readi32       5      1      0     ",
      "18": "table_readi32       6      3      0     ",
      "19": "equii               7      5      6     ",
      "20": "and                 5      4      7     ",
      "21": "jntr                27     5      0     ",
      "22": "table_readi32       4      1      0     ",
      "23": "push                4      0      0     ",
      "24": "table_readi32       4      2      0     ",
      "25": "push                4      0      0     ",
      "26": "set_add             0      0      0     ",
      "27": "free                3      0      0     ",
      "28": "free                2      0      0     ",
      "29": "table_next          1      4      0     ",
      "30": "free                1      0      0     ",
      "31": "result              0      0      0     ",
      "32": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"], ["public.ref", "ro_exclusive"]]
}]
select test.id, ref.id from test join ref on test.id = ref.id join ref ref2 on test.id = ref2.id where test.id > 0
[[1, 1], [3, 3], [2, 2]]
# test: select from table join table on #4
explain select test.id, ref.id from test, ref where test.id = ref.id
[{
  "bytecode": {
    "frontend": {
      "00": "union               0      0      0     ",
      "01": "send_all            0      -      0     # public.test",
      "02": "union_recv          0      0      0     ",
      "03": "union_set           0      0      -1    ",
      "04": "content             0      -      -     ",
      "05": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 0      2      0     ",
      "01": "table_open_part     1      0      16    # public.test (primary)",
      "02": "table_readi32       2      1      0     ",
      "03": "push                2      0      0     ",
      "04": "table_openl         2      20     14    # public.ref (primary)",
      "05": "table_readi32       3      1      0     ",
      "06": "table_readi32       4      2      0     ",
      "07": "equii               5      3      4     ",
      "08": "jntr                14     5      0     ",
      "09": "table_readi32       3      1      0     ",
      "10": "push                3      0      0     ",
      "11": "table_readi32       3      2      0     ",
      "12": "push                3      0      0     ",
      "13": "set_add             0      0      0     ",
      "14": "free                2      0      0     ",
      "15": "table_next          1      2      0     ",
      "16": "free                1      0      0     ",
      "17": "result              0      0      0     ",
      "18": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"], ["public.ref", "ro_exclusive"]]
}]
select test.id, ref.id from test, ref where test.id = ref.id
[[1, 1], [3, 3], [2, 2]]
explain select test.id, ref.id from test, ref where ref.id = test.id
[{
  "bytecode": {
    "frontend": {
      "00": "union               0      0      0     ",
      "01": "send_all            0      -      0     # public.test",
      "02": "union_recv          0      0      0     ",
      "03": "union_set           0      0      -1    ",
      "04": "content             0      -      -     ",
      "05": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 0      2      0     ",
      "01": "table_open_part     1      0      16    # public.test (primary)",
      "02": "table_readi32       2      1      0     ",
      "03": "push                2      0      0     ",
      "04": "table_openl         2      20     14    # public.ref (primary)",
      "05": "table_readi32       3      2      0     ",
      "06": "table_readi32       4      1      0     ",
      "07": "equii               5      3      4     ",
      "08": "jntr                14     5      0     ",
      "09": "table_readi32       3      1      0     ",
      "10": "push                3      0      0     ",
      "11": "table_readi32       3      2      0     ",
      "12": "push                3      0      0     ",
      "13": "set_add             0      0      0     ",
      "14": "free                2      0      0     ",
      "15": "table_next          1      2      0     ",
      "16": "free                1      0      0     ",
      "17": "result              0      0      0     ",
      "18": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"], ["public.ref", "ro_exclusive"]]
}]
select test.id, ref.id from test, ref where ref.id = test.id
[[1, 1], [3, 3], [2, 2]]
explain select test.id, ref.id from test, ref where ref.id = 1
[{
  "bytecode": {
    "frontend": {
      "00": "union               0      0      0     ",
      "01": "send_all            0      -      0     # public.test",
      "02": "union_recv          0      0      0     ",
      "03": "union_set           0      0      -1    ",
      "04": "content             0      -      -     ",
      "05": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 0      2      0     ",
      "01": "table_open_part     1      0      16    # public.test (primary)",
      "02": "int                 2      -      0     # 1",
      "03": "push                2      0      0     ",
      "04": "table_openl         2      20     14    # public.ref (primary)",
      "05": "table_readi32       3      2      0     ",
      "06": "int                 4      -      0     # 1",
      "07": "equii               5      3      4     ",
      "08": "jntr                14     5      0     ",
      "09": "table_readi32       3      1      0     ",
      "10": "push                3      0      0     ",
      "11": "table_readi32       3      2      0     ",
      "12": "push                3      0      0     ",
      "13": "set_add             0      0      0     ",
      "14": "free                2      0      0     ",
      "15": "table_next          1      2      0     ",
      "16": "free                1      0      0     ",
      "17": "result              0      0      0     ",
      "18": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"], ["public.ref", "ro_exclusive"]]
}]
select test.id, ref.id from test, ref where ref.id = 1
[[1, 1], [3, 1], [2, 1]]
explain select test.id, ref.id from test, ref where ref.id = 1 and test.id = 1
[{
  "bytecode": {
    "frontend": {
      "00": "union               0      0      0     ",
      "01": "send_lookup         0      -      -     # public.test",
      "02": "union_recv          0      0      0     ",
      "03": "union_set           0      0      -1    ",
      "04": "content             0      -      -     ",
      "05": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 0      2      0     ",
      "01": "int                 1      -      0     # 1",
      "02": "push                1      0      0     ",
      "03": "table_open_partl    1      0      21    # public.test (primary)",
      "04": "int                 2      -      0     # 1",
      "05": "push                2      0      0     ",
      "06": "table_openl         2      20     20    # public.ref (primary)",
      "07": "table_readi32       3      2      0     ",
      "08": "int                 4      -      0     # 1",
      "09": "equii               5      3      4     ",
      "10": "table_readi32       3      1      0     ",
      "11": "int                 4      -      0     # 1",
      "12": "equii               6      3      4     ",
      "13": "and                 3      5      6     ",
      "14": "jntr                20     3      0     ",
      "15": "table_readi32       3      1      0     ",
      "16": "push                3      0      0     ",
      "17": "table_readi32       3      2      0     ",
      "18": "push                3      0      0     ",
      "19": "set_add             0      0      0     ",
      "20": "free                2      0      0     ",
      "21": "free                1      0      0     ",
      "22": "result              0      0      0     ",
      "23": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"], ["public.ref", "ro_exclusive"]]
}]
select test.id, ref.id from test, ref where ref.id = 1 and test.id = 1
[[1, 1]]
explain select test.id, ref.id from test, ref where ref.id >= test.id
[{
  "bytecode": {
    "frontend": {
      "00": "union               0      0      0     ",
      "01": "send_all            0      -      0     # public.test",
      "02": "union_recv          0      0      0     ",
      "03": "union_set           0      0      -1    ",
      "04": "content             0      -      -     ",
      "05": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 0      2      0     ",
      "01": "table_open_part     1      0      17    # public.test (primary)",
      "02": "table_readi32       2      1      0     ",
      "03": "push                2      0      0     ",
      "04": "table_open          2      20     15    # public.ref (primary)",
      "05": "table_readi32       3      2      0     ",
      "06": "table_readi32       4      1      0     ",
      "07": "gteii               5      3      4     ",
      "08": "jntr                14     5      0     ",
      "09": "table_readi32       3      1      0     ",
      "10": "push                3      0      0     ",
      "11": "table_readi32       3      2      0     ",
      "12": "push                3      0      0     ",
      "13": "set_add             0      0      0     ",
      "14": "table_next          2      5      0     ",
      "15": "free                2      0      0     ",
      "16": "table_next          1      2      0     ",
      "17": "free                1      0      0     ",
      "18": "result              0      0      0     ",
      "19": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"], ["public.ref", "ro_exclusive"]]
}]
select test.id, ref.id from test, ref where ref.id >= test.id
[[1, 1], [1, 2], [1, 3], [3, 3], [2, 2], [2, 3]]
# test: select from table join using
explain select test.id, ref.id from test join ref using
{"msg": "explain select test.id, ref.id from test join ref using ⟵ ( expected"}
explain select test.id, ref.id from test join ref using(
{"msg": "explain select test.id, ref.id from test join ref using( ⟵ name expected"}
explain select test.id, ref.id from test join ref using(1
{"msg": "explain select test.id, ref.id from test join ref using(❰1❱ ⟵ name expected"}
explain select test.id, ref.id from test join ref using(id
{"msg": "explain select test.id, ref.id from test join ref using(id ⟵ ) expected"}
explain select test.id, ref.id from test join ref using(id)
[{
  "bytecode": {
    "frontend": {
      "00": "union               0      0      0     ",
      "01": "send_all            0      -      0     # public.test",
      "02": "union_recv          0      0      0     ",
      "03": "union_set           0      0      -1    ",
      "04": "content             0      -      -     ",
      "05": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 0      2      0     ",
      "01": "table_open_part     1      0      16    # public.test (primary)",
      "02": "table_readi32       2      1      0     ",
      "03": "push                2      0      0     ",
      "04": "table_openl         2      20     14    # public.ref (primary)",
      "05": "table_readi32       3      1      0     ",
      "06": "table_readi32       4      2      0     ",
      "07": "equii               5      3      4     ",
      "08": "jntr                14     5      0     ",
      "09": "table_readi32       3      1      0     ",
      "10": "push                3      0      0     ",
      "11": "table_readi32       3      2      0     ",
      "12": "push                3      0      0     ",
      "13": "set_add             0      0      0     ",
      "14": "free                2      0      0     ",
      "15": "table_next          1      2      0     ",
      "16": "free                1      0      0     ",
      "17": "result              0      0      0     ",
      "18": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"], ["public.ref", "ro_exclusive"]]
}]
select test.id, ref.id from test join ref using(id)
[[1, 1], [3, 3], [2, 2]]
# test: select from table join using (not found)
select test.id, ref.id from test join ref using(unknown)
{"msg": "select test.id, ref.id from test join ref using(❰unknown❱ ⟵ column test.unknown not found"}
# test: select from table join using #2
explain select test.id, ref.id from test join ref using (id) join ref ref2 using (id) where test.id > 0
[{
  "bytecode": {
    "frontend": {
      "00": "union               0      0      0     ",
      "01": "send_all            0      -      0     # public.test",
      "02": "union_recv          0      0      0     ",
      "03": "union_set           0      0      -1    ",
      "04": "content             0      -      -     ",
      "05": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 0      2      0     ",
      "01": "int                 1      -      0     # 0",
      "02": "push                1      0      0     ",
      "03": "table_open_part     1      0      30    # public.test (primary)",
      "04": "table_readi32       2      1      0     ",
      "05": "push                2      0      0     ",
      "06": "table_openl         2      20     28    # public.ref (primary)",
      "07": "table_readi32       3      2      0     ",
      "08": "push                3      0      0     ",
      "09": "table_openl         3      39     27    # public.ref (primary)",
      "10": "table_readi32       4      1      0     ",
      "11": "int                 5      -      0     # 0",
      "12": "gtii                6      4      5     ",
      "13": "table_readi32       4      1      0     ",
      "14": "table_readi32       5      2      0     ",
      "15": "equii               7      4      5     ",
      "16": "and                 4      6      7     ",
      "17": "table_readi32       5      2      0     ",
      "18": "table_readi32       6      3      0     ",
      "19": "equii               7      5      6     ",
      "20": "and                 5      4      7     ",
      "21": "jntr                27     5      0     ",
      "22": "table_readi32       4      1      0     ",
      "23": "push                4      0      0     ",
      "24": "table_readi32       4      2      0     ",
      "25": "push                4      0      0     ",
      "26": "set_add             0      0      0     ",
      "27": "free                3      0      0     ",
      "28": "free                2      0      0     ",
      "29": "table_next          1      4      0     ",
      "30": "free                1      0      0     ",
      "31": "result              0      0      0     ",
      "32": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"], ["public.ref", "ro_exclusive"]]
}]
select test.id, ref.id from test join ref using (id) join ref ref2 using (id) where test.id > 0
[[1, 1], [3, 3], [2, 2]]
select test.id, ref.id from test join ref using (id) join ref ref2 using (id2) where test.id > 0
{"msg": "select test.id, ref.id from test join ref using (id) join ref ref2 using (❰id2❱ ⟵ column ref.id2 not found"}
# test: with (select from table) select from table, cte
explain with a as (select * from test) select * from test, a where test.id = a.id
[{
  "bytecode": {
    "frontend": {
      "00": "union               0      0      0     ",
      "01": "send_all            0      -      0     # public.test",
      "02": "union_recv          0      0      0     ",
      "03": "union_set           0      0      -1    ",
      "04": "union               1      0      0     ",
      "05": "send_all            11     -      1     # public.test",
      "06": "union_recv          1      0      0     ",
      "07": "union_set           1      0      -1    ",
      "08": "content             1      -      -     ",
      "09": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 0      2      0     ",
      "01": "table_open_part     1      0      8     # public.test (primary)",
      "02": "table_readi32       2      1      0     ",
      "03": "push                2      0      0     ",
      "04": "table_readi32       2      1      1     ",
      "05": "push                2      0      0     ",
      "06": "set_add             0      0      0     ",
      "07": "table_next          1      2      0     ",
      "08": "free                1      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     ",
      "11": "set                 1      4      0     ",
      "12": "table_open_part     2      20     32    # public.test (primary)",
      "13": "ref                 3      0      0     ",
      "14": "store_open          4      3      29    ",
      "15": "table_readi32       5      2      0     ",
      "16": "store_read          6      4      0     ",
      "17": "equii               7      5      6     ",
      "18": "jntr                28     7      0     ",
      "19": "table_readi32       5      2      0     ",
      "20": "push                5      0      0     ",
      "21": "table_readi32       5      2      1     ",
      "22": "push                5      0      0     ",
      "23": "store_read          5      4      0     ",
      "24": "push                5      0      0     ",
      "25": "store_read          5      4      1     ",
      "26": "push                5      0      0     ",
      "27": "set_add             1      0      0     ",
      "28": "store_next          4      15     0     ",
      "29": "free                4      0      0     ",
      "30": "free                3      0      0     ",
      "31": "table_next          2      13     0     ",
      "32": "free                2      0      0     ",
      "33": "result              1      0      0     ",
      "34": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
with a as (select * from test) select * from test, a where test.id = a.id
[[1, 0, 1, 0], [3, 0, 3, 0], [2, 0, 2, 0]]
# test: with (select from table) select from table, cte (point lookup)
explain with a as (select * from test) select * from test, a where test.id = 1
[{
  "bytecode": {
    "frontend": {
      "00": "union               0      0      0     ",
      "01": "send_all            0      -      0     # public.test",
      "02": "union_recv          0      0      0     ",
      "03": "union_set           0      0      -1    ",
      "04": "union               1      0      0     ",
      "05": "send_lookup         11     -      -     # public.test",
      "06": "union_recv          1      0      0     ",
      "07": "union_set           1      0      -1    ",
      "08": "content             1      -      -     ",
      "09": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 0      2      0     ",
      "01": "table_open_part     1      0      8     # public.test (primary)",
      "02": "table_readi32       2      1      0     ",
      "03": "push                2      0      0     ",
      "04": "table_readi32       2      1      1     ",
      "05": "push                2      0      0     ",
      "06": "set_add             0      0      0     ",
      "07": "table_next          1      2      0     ",
      "08": "free                1      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     ",
      "11": "set                 1      4      0     ",
      "12": "int                 2      -      0     # 1",
      "13": "push                2      0      0     ",
      "14": "table_open_partl    2      20     33    # public.test (primary)",
      "15": "ref                 3      0      0     ",
      "16": "store_open          4      3      31    ",
      "17": "table_readi32       5      2      0     ",
      "18": "int                 6      -      0     # 1",
      "19": "equii               7      5      6     ",
      "20": "jntr                30     7      0     ",
      "21": "table_readi32       5      2      0     ",
      "22": "push                5      0      0     ",
      "23": "table_readi32       5      2      1     ",
      "24": "push                5      0      0     ",
      "25": "store_read          5      4      0     ",
      "26": "push                5      0      0     ",
      "27": "store_read          5      4      1     ",
      "28": "push                5      0      0     ",
      "29": "set_add             1      0      0     ",
      "30": "store_next          4      17     0     ",
      "31": "free                4      0      0     ",
      "32": "free                3      0      0     ",
      "33": "free                2      0      0     ",
      "34": "result              1      0      0     ",
      "35": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
with a as (select * from test) select * from test, a where test.id = 1
[[1, 0, 1, 0], [1, 0, 3, 0], [1, 0, 2, 0]]
# test: with (select from table) select from cte, table
explain with a as (select * from test) select * from a, test where test.id = a.id
[{
  "bytecode": {
    "frontend": {
      "00": "union               0      0      0     ",
      "01": "send_all            0      -      0     # public.test",
      "02": "union_recv          0      0      0     ",
      "03": "union_set           0      0      -1    ",
      "04": "set                 1      4      0     ",
      "05": "ref                 2      0      0     ",
      "06": "store_open          3      2      25    ",
      "07": "store_read          4      3      0     ",
      "08": "push                4      0      0     ",
      "09": "table_openl         4      20     23    # public.test (primary)",
      "10": "table_readi32       5      4      0     ",
      "11": "store_read          6      3      0     ",
      "12": "equii               7      5      6     ",
      "13": "jntr                23     7      0     ",
      "14": "store_read          5      3      0     ",
      "15": "push                5      0      0     ",
      "16": "store_read          5      3      1     ",
      "17": "push                5      0      0     ",
      "18": "table_readi32       5      4      0     ",
      "19": "push                5      0      0     ",
      "20": "table_readi32       5      4      1     ",
      "21": "push                5      0      0     ",
      "22": "set_add             1      0      0     ",
      "23": "free                4      0      0     ",
      "24": "store_next          3      7      0     ",
      "25": "free                3      0      0     ",
      "26": "free                2      0      0     ",
      "27": "content             1      -      -     ",
      "28": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 0      2      0     ",
      "01": "table_open_part     1      0      8     # public.test (primary)",
      "02": "table_readi32       2      1      0     ",
      "03": "push                2      0      0     ",
      "04": "table_readi32       2      1      1     ",
      "05": "push                2      0      0     ",
      "06": "set_add             0      0      0     ",
      "07": "table_next          1      2      0     ",
      "08": "free                1      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro_exclusive"]]
}]
with a as (select * from test) select * from a, test where test.id = a.id
[[1, 0, 1, 0], [3, 0, 3, 0], [2, 0, 2, 0]]
# test: with (select from table) select from cte, table (point lookup)
explain with a as (select * from test) select * from a, test where test.id = 1
[{
  "bytecode": {
    "frontend": {
      "00": "union               0      0      0     ",
      "01": "send_all            0      -      0     # public.test",
      "02": "union_recv          0      0      0     ",
      "03": "union_set           0      0      -1    ",
      "04": "set                 1      4      0     ",
      "05": "ref                 2      0      0     ",
      "06": "store_open          3      2      25    ",
      "07": "int                 4      -      0     # 1",
      "08": "push                4      0      0     ",
      "09": "table_openl         4      20     23    # public.test (primary)",
      "10": "table_readi32       5      4      0     ",
      "11": "int                 6      -      0     # 1",
      "12": "equii               7      5      6     ",
      "13": "jntr                23     7      0     ",
      "14": "store_read          5      3      0     ",
      "15": "push                5      0      0     ",
      "16": "store_read          5      3      1     ",
      "17": "push                5      0      0     ",
      "18": "table_readi32       5      4      0     ",
      "19": "push                5      0      0     ",
      "20": "table_readi32       5      4      1     ",
      "21": "push                5      0      0     ",
      "22": "set_add             1      0      0     ",
      "23": "free                4      0      0     ",
      "24": "store_next          3      7      0     ",
      "25": "free                3      0      0     ",
      "26": "free                2      0      0     ",
      "27": "content             1      -      -     ",
      "28": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 0      2      0     ",
      "01": "table_open_part     1      0      8     # public.test (primary)",
      "02": "table_readi32       2      1      0     ",
      "03": "push                2      0      0     ",
      "04": "table_readi32       2      1      1     ",
      "05": "push                2      0      0     ",
      "06": "set_add             0      0      0     ",
      "07": "table_next          1      2      0     ",
      "08": "free                1      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro_exclusive"]]
}]
with a as (select * from test) select * from a, test where test.id = 1
[[1, 0, 1, 0], [3, 0, 1, 0], [2, 0, 1, 0]]
# test: select from table join group by
select test.id from test, ref group by test.id
[1, 2, 3]
select test.id from test join ref on (test.id = ref.id) group by test.id
[1, 2, 3]
select test.id from test join ref on (test.id = ref.id) group by ref.id
{"msg": "select ❰test.id❱ ⟵ column test.id must appear in the GROUP BY clause or be used by an aggregate function"}
select id from test join ref on (test.id = ref.id) group by ref.id
{"msg": "select ❰id❱ ⟵ column id must appear in the GROUP BY clause or be used by an aggregate function"}
select ref.id from test join ref on (test.id = ref.id) group by id
{"msg": "select ref.id from test join ref on (test.id = ref.id) group by ❰id❱ ⟵ column requires explicit target name"}
explain select ref.id from test join ref on (test.id = ref.id) group by ref.id
[{
  "bytecode": {
    "frontend": {
      "00": "union               0      0      0     ",
      "01": "send_all            0      -      0     # public.test",
      "02": "union_recv          0      0      0     ",
      "03": "union_set           0      1      -1    ",
      "04": "union_set_aggs      0      40     0     ",
      "05": "set                 1      1      0     ",
      "06": "store_open          2      0      11    ",
      "07": "store_read          3      2      0     ",
      "08": "push                3      0      0     ",
      "09": "set_add             1      0      0     ",
      "10": "store_next          2      7      0     ",
      "11": "free                2      0      0     ",
      "12": "free                0      0      0     ",
      "13": "content             1      -      -     ",
      "14": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set_ordered         0      0      1     ",
      "01": "table_open_part     1      1      14    # public.test (primary)",
      "02": "table_readi32       2      1      0     ",
      "03": "push                2      0      0     ",
      "04": "table_openl         2      21     12    # public.ref (primary)",
      "05": "table_readi32       3      1      0     ",
      "06": "table_readi32       4      2      0     ",
      "07": "equii               5      3      4     ",
      "08": "jntr                12     5      0     ",
      "09": "table_readi32       3      2      0     ",
      "10": "push                3      0      0     ",
      "11": "set_get             3      0      0     ",
      "12": "free                2      0      0     ",
      "13": "table_next          1      2      0     ",
      "14": "free                1      0      0     ",
      "15": "set_sort            0      0      0     ",
      "16": "result              0      0      0     ",
      "17": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"], ["public.ref", "ro_exclusive"]]
}]
select ref.id from test join ref on (test.id = ref.id) group by ref.id
[1, 2, 3]
select ref.id, count(*) from test join ref on (test.id = ref.id) group by ref.id
[[1, 1], [2, 1], [3, 1]]
select ref.id, count(test.id) + count(ref.id) from test join ref on (test.id = ref.id) group by ref.id
[[1, 2], [2, 2], [3, 2]]
# test: select from table join group by path
create table ref2 (id int primary key, data json)
insert into ref2 values (1, {"id": 1}), (2, {"id": 2}), (3, {"id": 3})
select ref2.data from test join ref2 on (test.id = ref2.id) group by ref2.id
{"msg": "select ❰ref2.data❱ ⟵ column ref2.data must appear in the GROUP BY clause or be used by an aggregate function"}
select ref2.data.id, ref2.data.id::type from test join ref2 on (test.id = ref2.id) group by ref2.data.id
[[1, "json"], [2, "json"], [3, "json"]]
select ref2.data.id, ref2.data.id::type from test join ref2 on (test.id = ref2.id) group by 1
[[1, "json"], [2, "json"], [3, "json"]]
select ref2.data, ref2.data.id from test join ref2 on (test.id = ref2.id) group by ref2.data
[[{
  "id": 1
}, 1], [{
  "id": 2
}, 2], [{
  "id": 3
}, 3]]
drop table ref
drop table ref2
drop table test
disconnect S0
close E0
