open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3485 }], "backends": 3
connect E0 S0 localhost:3485
# test: with(table), expr
create table test (id int primary key)
[]
insert into test 1,2,3
[]
with a as (select * from test) select * from a
[[1], [2], [3]]
explain with a as (select * from test) select * from a
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "set                 0      0      0     ",
      "07": "cursor_open_cte     0      0      9     ",
      "08": "jmp                 12     0      0     ",
      "09": "cursor_read         1      0      0     ",
      "10": "set_add             0      1      0     ",
      "11": "cursor_next         0      9      0     ",
      "12": "cursor_close        0      0      0     ",
      "13": "cte_set             1      0      0     ",
      "14": "body                1      0      0     ",
      "15": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     "
    }
  }
}]
drop table test
[]
# test: with(shared), expr
create shared table test (id int primary key)
[]
insert into test 1,2,3
[]
with a as (select * from test) select * from a
[[1], [2], [3]]
explain with a as (select * from test) select * from a
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "set                 0      0      0     ",
      "07": "cursor_open_cte     0      0      9     ",
      "08": "jmp                 12     0      0     ",
      "09": "cursor_read         1      0      0     ",
      "10": "set_add             0      1      0     ",
      "11": "cursor_next         0      9      0     ",
      "12": "cursor_close        0      0      0     ",
      "13": "cte_set             1      0      0     ",
      "14": "body                1      0      0     ",
      "15": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     "
    }
  }
}]
drop table test
[]
# test: with(table), table
create table test (id int primary key)
[]
insert into test 1,2,3
[]
with a as (select * from test) select * from test
[[1], [2], [3]]
explain with a as (select * from test) select * from test
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      0     ",
      "01": "send_all            1      11     0     ",
      "02": "recv                0      0      0     ",
      "03": "bool                0      0      0     ",
      "04": "push                0      0      0     ",
      "05": "merge_recv          0      -1     -1    ",
      "06": "cte_set             0      0      0     ",
      "07": "recv                1      0      0     ",
      "08": "bool                0      0      0     ",
      "09": "push                0      0      0     ",
      "10": "merge_recv          0      -1     -1    ",
      "11": "cte_set             1      0      0     ",
      "12": "body                1      0      0     ",
      "13": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     ",
      "11": "set                 0      0      0     ",
      "12": "int_min             1      0      0     ",
      "13": "push                1      0      0     ",
      "14": "cursor_open         0      20     16    # public.test (primary)",
      "15": "jmp                 19     0      0     ",
      "16": "cursor_read         1      0      0     ",
      "17": "set_add             0      1      0     ",
      "18": "cursor_next         0      16     0     ",
      "19": "cursor_close        0      0      0     ",
      "20": "result              0      0      0     ",
      "21": "ret                 0      0      0     "
    }
  }
}]
drop table test
[]
# test: with(shared), shared (pushdown)
create table test (id int primary key)
[]
insert into test 1,2,3
[]
with a as (select * from test) select * from test
[[1], [2], [3]]
explain with a as (select * from test) select * from test
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      0     ",
      "01": "send_all            1      11     0     ",
      "02": "recv                0      0      0     ",
      "03": "bool                0      0      0     ",
      "04": "push                0      0      0     ",
      "05": "merge_recv          0      -1     -1    ",
      "06": "cte_set             0      0      0     ",
      "07": "recv                1      0      0     ",
      "08": "bool                0      0      0     ",
      "09": "push                0      0      0     ",
      "10": "merge_recv          0      -1     -1    ",
      "11": "cte_set             1      0      0     ",
      "12": "body                1      0      0     ",
      "13": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     ",
      "11": "set                 0      0      0     ",
      "12": "int_min             1      0      0     ",
      "13": "push                1      0      0     ",
      "14": "cursor_open         0      20     16    # public.test (primary)",
      "15": "jmp                 19     0      0     ",
      "16": "cursor_read         1      0      0     ",
      "17": "set_add             0      1      0     ",
      "18": "cursor_next         0      16     0     ",
      "19": "cursor_close        0      0      0     ",
      "20": "result              0      0      0     ",
      "21": "ret                 0      0      0     "
    }
  }
}]
drop table test
[]
# test: with(expr), table (pushdown)
create table test (id int primary key)
[]
insert into test 1,2,3
[]
explain with a as (select * from [5,6,7]) select test.*, a.* from test, a
[{
  "bytecode": {
    "coordinator": {
      "00": "set                 0      0      0     ",
      "01": "int                 1      -      0     # 5",
      "02": "push                1      0      0     ",
      "03": "int                 1      -      0     # 6",
      "04": "push                1      0      0     ",
      "05": "int                 1      -      0     # 7",
      "06": "push                1      0      0     ",
      "07": "array               1      3      0     ",
      "08": "cursor_open_expr    0      1      10    ",
      "09": "jmp                 13     0      0     ",
      "10": "cursor_read         2      0      0     ",
      "11": "set_add             0      2      0     ",
      "12": "cursor_next         0      10     0     ",
      "13": "cursor_close        0      0      0     ",
      "14": "cte_set             0      0      0     ",
      "15": "send_all            1      0      0     ",
      "16": "recv                1      0      0     ",
      "17": "bool                0      0      0     ",
      "18": "push                0      0      0     ",
      "19": "merge_recv          0      -1     -1    ",
      "20": "cte_set             1      0      0     ",
      "21": "body                1      0      0     ",
      "22": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 16     0      0     ",
      "05": "cursor_open_cte     1      0      7     ",
      "06": "jmp                 14     0      0     ",
      "07": "cursor_read         1      0      0     ",
      "08": "push                1      0      0     ",
      "09": "cursor_read         1      1      0     ",
      "10": "push                1      0      0     ",
      "11": "array               1      2      0     ",
      "12": "set_add             0      1      0     ",
      "13": "cursor_next         1      7      0     ",
      "14": "cursor_close        1      0      0     ",
      "15": "cursor_next         0      5      0     ",
      "16": "cursor_close        0      0      0     ",
      "17": "result              0      0      0     ",
      "18": "ret                 0      0      0     "
    }
  }
}]
with a as (select * from [5,6,7]) select test.*, a.* from test, a
[[[1], 5], [[1], 6], [[1], 7], [[2], 5], [[2], 6], [[2], 7], [[3], 5], [[3], 6], [[3], 7]]
drop table test
[]
# test: with(expr), table (pushdown)
create table test (id int primary key)
[]
insert into test 1,2,3
[]
explain with a as (select * from [5,6,7]) select test.*, a.* from test, a
[{
  "bytecode": {
    "coordinator": {
      "00": "set                 0      0      0     ",
      "01": "int                 1      -      0     # 5",
      "02": "push                1      0      0     ",
      "03": "int                 1      -      0     # 6",
      "04": "push                1      0      0     ",
      "05": "int                 1      -      0     # 7",
      "06": "push                1      0      0     ",
      "07": "array               1      3      0     ",
      "08": "cursor_open_expr    0      1      10    ",
      "09": "jmp                 13     0      0     ",
      "10": "cursor_read         2      0      0     ",
      "11": "set_add             0      2      0     ",
      "12": "cursor_next         0      10     0     ",
      "13": "cursor_close        0      0      0     ",
      "14": "cte_set             0      0      0     ",
      "15": "send_all            1      0      0     ",
      "16": "recv                1      0      0     ",
      "17": "bool                0      0      0     ",
      "18": "push                0      0      0     ",
      "19": "merge_recv          0      -1     -1    ",
      "20": "cte_set             1      0      0     ",
      "21": "body                1      0      0     ",
      "22": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 16     0      0     ",
      "05": "cursor_open_cte     1      0      7     ",
      "06": "jmp                 14     0      0     ",
      "07": "cursor_read         1      0      0     ",
      "08": "push                1      0      0     ",
      "09": "cursor_read         1      1      0     ",
      "10": "push                1      0      0     ",
      "11": "array               1      2      0     ",
      "12": "set_add             0      1      0     ",
      "13": "cursor_next         1      7      0     ",
      "14": "cursor_close        1      0      0     ",
      "15": "cursor_next         0      5      0     ",
      "16": "cursor_close        0      0      0     ",
      "17": "result              0      0      0     ",
      "18": "ret                 0      0      0     "
    }
  }
}]
with a as (select * from [5,6,7]) select test.*, a.* from test, a
[[[1], 5], [[1], 6], [[1], 7], [[2], 5], [[2], 6], [[2], 7], [[3], 5], [[3], 6], [[3], 7]]
drop table test
[]
# test: with(table), table (pushdown join)
create table test (id int primary key)
[]
insert into test 1,2,3
[]
with a (id) as (select * from test) select test.* from test join a on test.id = a.id
[[1], [2], [3]]
explain with a (id) as (select * from test) select test.* from test join a on test.id = a.id
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "send_all            1      11     0     ",
      "07": "recv                1      0      0     ",
      "08": "bool                0      0      0     ",
      "09": "push                0      0      0     ",
      "10": "merge_recv          0      -1     -1    ",
      "11": "cte_set             1      0      0     ",
      "12": "body                1      0      0     ",
      "13": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     ",
      "11": "set                 0      0      0     ",
      "12": "int_min             1      0      0     ",
      "13": "push                1      0      0     ",
      "14": "cursor_open         0      20     16    # public.test (primary)",
      "15": "jmp                 27     0      0     ",
      "16": "cursor_open_cte     1      0      18    ",
      "17": "jmp                 25     0      0     ",
      "18": "cursor_idx          1      0      0     ",
      "19": "cursor_idx          2      1      0     ",
      "20": "equ                 3      1      2     ",
      "21": "jntr                24     3      0     ",
      "22": "cursor_read         1      0      0     ",
      "23": "set_add             0      1      0     ",
      "24": "cursor_next         1      18     0     ",
      "25": "cursor_close        1      0      0     ",
      "26": "cursor_next         0      16     0     ",
      "27": "cursor_close        0      0      0     ",
      "28": "result              0      0      0     ",
      "29": "ret                 0      0      0     "
    }
  }
}]
with a (id) as (select * from test) select test.* from test join a on test.id = a.id order by test.id
[[1], [2], [3]]
explain with a (id) as (select * from test) select test.* from test join a on test.id = a.id order by test.id
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "send_all            1      11     0     ",
      "07": "recv                1      0      0     ",
      "08": "bool                0      0      0     ",
      "09": "push                0      0      0     ",
      "10": "merge_recv          0      -1     -1    ",
      "11": "cte_set             1      0      0     ",
      "12": "body                1      0      0     ",
      "13": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     ",
      "11": "set_ordered         0      20     0     ",
      "12": "int_min             1      0      0     ",
      "13": "push                1      0      0     ",
      "14": "cursor_open         0      23     16    # public.test (primary)",
      "15": "jmp                 29     0      0     ",
      "16": "cursor_open_cte     1      0      18    ",
      "17": "jmp                 27     0      0     ",
      "18": "cursor_idx          1      0      0     ",
      "19": "cursor_idx          2      1      0     ",
      "20": "equ                 3      1      2     ",
      "21": "jntr                26     3      0     ",
      "22": "cursor_read         1      0      0     ",
      "23": "cursor_idx          2      0      0     ",
      "24": "push                2      0      0     ",
      "25": "set_add             0      1      0     ",
      "26": "cursor_next         1      18     0     ",
      "27": "cursor_close        1      0      0     ",
      "28": "cursor_next         0      16     0     ",
      "29": "cursor_close        0      0      0     ",
      "30": "set_sort            0      0      0     ",
      "31": "result              0      0      0     ",
      "32": "ret                 0      0      0     "
    }
  }
}]
drop table test
[]
# test: with (expr), with(table), table (pushdown join)
create table test (id int primary key)
[]
insert into test 1,2,3
[]
with z (id) as (select [*] from [1,2,3]), a (id) as (select * from test) select test.* from test join a on test.id = a.id join z on test.id = z.id
[[1], [2], [3]]
explain with z (id) as (select [*] from [1,2,3]), a (id) as (select * from test) select test.* from test join a on test.id = a.id join z on test.id = z.id
[{
  "bytecode": {
    "coordinator": {
      "00": "set                 0      0      0     ",
      "01": "int                 1      -      0     # 1",
      "02": "push                1      0      0     ",
      "03": "int                 1      -      0     # 2",
      "04": "push                1      0      0     ",
      "05": "int                 1      -      0     # 3",
      "06": "push                1      0      0     ",
      "07": "array               1      3      0     ",
      "08": "cursor_open_expr    0      1      10    ",
      "09": "jmp                 15     0      0     ",
      "10": "cursor_read         2      0      0     ",
      "11": "push                2      0      0     ",
      "12": "array               2      1      0     ",
      "13": "set_add             0      2      0     ",
      "14": "cursor_next         0      10     0     ",
      "15": "cursor_close        0      0      0     ",
      "16": "cte_set             0      0      0     ",
      "17": "send_all            1      0      0     ",
      "18": "recv                1      0      0     ",
      "19": "bool                0      0      0     ",
      "20": "push                0      0      0     ",
      "21": "merge_recv          0      -1     -1    ",
      "22": "cte_set             1      0      0     ",
      "23": "send_all            2      11     0     ",
      "24": "recv                2      0      0     ",
      "25": "bool                0      0      0     ",
      "26": "push                0      0      0     ",
      "27": "merge_recv          0      -1     -1    ",
      "28": "cte_set             2      0      0     ",
      "29": "body                2      0      0     ",
      "30": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     ",
      "11": "set                 0      0      0     ",
      "12": "int_min             1      0      0     ",
      "13": "push                1      0      0     ",
      "14": "cursor_open         0      20     16    # public.test (primary)",
      "15": "jmp                 40     0      0     ",
      "16": "cursor_open_cte     1      1      18    ",
      "17": "jmp                 38     0      0     ",
      "18": "cursor_open_cte     2      0      20    ",
      "19": "jmp                 36     0      0     ",
      "20": "cursor_idx          2      0      0     ",
      "21": "cursor_idx          3      1      0     ",
      "22": "equ                 4      2      3     ",
      "23": "jntr                28     4      0     ",
      "24": "cursor_idx          2      0      0     ",
      "25": "cursor_idx          3      2      0     ",
      "26": "equ                 5      2      3     ",
      "27": "jtr                 30     5      0     ",
      "28": "bool                1      0      0     ",
      "29": "jmp                 31     0      0     ",
      "30": "bool                1      1      0     ",
      "31": "nop                 0      0      0     ",
      "32": "jntr                35     1      0     ",
      "33": "cursor_read         1      0      0     ",
      "34": "set_add             0      1      0     ",
      "35": "cursor_next         2      20     0     ",
      "36": "cursor_close        2      0      0     ",
      "37": "cursor_next         1      18     0     ",
      "38": "cursor_close        1      0      0     ",
      "39": "cursor_next         0      16     0     ",
      "40": "cursor_close        0      0      0     ",
      "41": "result              0      0      0     ",
      "42": "ret                 0      0      0     "
    }
  }
}]
drop table test
[]
# test: a(table), b(a)
create table test (id int primary key)
[]
insert into test 1,2,3
[]
with a as (select * from test), b as (select * from a) select * from b
[[1], [2], [3]]
explain with a as (select * from test), b as (select * from a) select * from b
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "set                 0      0      0     ",
      "07": "cursor_open_cte     0      0      9     ",
      "08": "jmp                 12     0      0     ",
      "09": "cursor_read         1      0      0     ",
      "10": "set_add             0      1      0     ",
      "11": "cursor_next         0      9      0     ",
      "12": "cursor_close        0      0      0     ",
      "13": "cte_set             1      0      0     ",
      "14": "set                 0      0      0     ",
      "15": "cursor_open_cte     0      1      17    ",
      "16": "jmp                 20     0      0     ",
      "17": "cursor_read         1      0      0     ",
      "18": "set_add             0      1      0     ",
      "19": "cursor_next         0      17     0     ",
      "20": "cursor_close        0      0      0     ",
      "21": "cte_set             2      0      0     ",
      "22": "body                2      0      0     ",
      "23": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     "
    }
  }
}]
drop table test
[]
# test: a(table), b(expr), c(a)
create table test (id int primary key)
[]
insert into test 1,2,3
[]
with a as (select * from test), b as (select [1,2,3]), c as (select * from a) select * from c
[[1], [2], [3]]
explain with a as (select * from test), b as (select [1,2,3]), c as (select * from a) select * from c
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "int                 0      -      0     # 1",
      "07": "push                0      0      0     ",
      "08": "int                 0      -      0     # 2",
      "09": "push                0      0      0     ",
      "10": "int                 0      -      0     # 3",
      "11": "push                0      0      0     ",
      "12": "array               0      3      0     ",
      "13": "cte_set             1      0      0     ",
      "14": "set                 0      0      0     ",
      "15": "cursor_open_cte     0      0      17    ",
      "16": "jmp                 20     0      0     ",
      "17": "cursor_read         1      0      0     ",
      "18": "set_add             0      1      0     ",
      "19": "cursor_next         0      17     0     ",
      "20": "cursor_close        0      0      0     ",
      "21": "cte_set             2      0      0     ",
      "22": "set                 0      0      0     ",
      "23": "cursor_open_cte     0      2      25    ",
      "24": "jmp                 28     0      0     ",
      "25": "cursor_read         1      0      0     ",
      "26": "set_add             0      1      0     ",
      "27": "cursor_next         0      25     0     ",
      "28": "cursor_close        0      0      0     ",
      "29": "cte_set             3      0      0     ",
      "30": "body                3      0      0     ",
      "31": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     "
    }
  }
}]
drop table test
[]
# test: a(table), b(expr), c(table)
create table test (id int primary key)
[]
insert into test 1,2,3
[]
with a as (select * from test), b as (select [1,2,3]), c as (select * from test) select * from c
[[1], [2], [3]]
explain with a as (select * from test), b as (select [1,2,3]), c as (select * from test) select * from c
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "int                 0      -      0     # 1",
      "07": "push                0      0      0     ",
      "08": "int                 0      -      0     # 2",
      "09": "push                0      0      0     ",
      "10": "int                 0      -      0     # 3",
      "11": "push                0      0      0     ",
      "12": "array               0      3      0     ",
      "13": "cte_set             1      0      0     ",
      "14": "send_all            2      11     0     ",
      "15": "recv                2      0      0     ",
      "16": "bool                0      0      0     ",
      "17": "push                0      0      0     ",
      "18": "merge_recv          0      -1     -1    ",
      "19": "cte_set             2      0      0     ",
      "20": "set                 0      0      0     ",
      "21": "cursor_open_cte     0      2      23    ",
      "22": "jmp                 26     0      0     ",
      "23": "cursor_read         1      0      0     ",
      "24": "set_add             0      1      0     ",
      "25": "cursor_next         0      23     0     ",
      "26": "cursor_close        0      0      0     ",
      "27": "cte_set             3      0      0     ",
      "28": "body                3      0      0     ",
      "29": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     ",
      "11": "set                 0      0      0     ",
      "12": "int_min             1      0      0     ",
      "13": "push                1      0      0     ",
      "14": "cursor_open         0      20     16    # public.test (primary)",
      "15": "jmp                 19     0      0     ",
      "16": "cursor_read         1      0      0     ",
      "17": "set_add             0      1      0     ",
      "18": "cursor_next         0      16     0     ",
      "19": "cursor_close        0      0      0     ",
      "20": "result              0      0      0     ",
      "21": "ret                 0      0      0     "
    }
  }
}]
drop table test
[]
# test: a(table), b(table), c(expr)
create table test (id int primary key)
[]
insert into test 1,2,3
[]
with a as (select * from test), b as (select * from test), c as (select [1,2,3]) select * from c
[1, 2, 3]
explain with a as (select * from test), b as (select * from test), c as (select [1,2,3]) select * from c
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      0     ",
      "01": "send_all            1      11     0     ",
      "02": "recv                0      0      0     ",
      "03": "bool                0      0      0     ",
      "04": "push                0      0      0     ",
      "05": "merge_recv          0      -1     -1    ",
      "06": "cte_set             0      0      0     ",
      "07": "recv                1      0      0     ",
      "08": "bool                0      0      0     ",
      "09": "push                0      0      0     ",
      "10": "merge_recv          0      -1     -1    ",
      "11": "cte_set             1      0      0     ",
      "12": "int                 0      -      0     # 1",
      "13": "push                0      0      0     ",
      "14": "int                 0      -      0     # 2",
      "15": "push                0      0      0     ",
      "16": "int                 0      -      0     # 3",
      "17": "push                0      0      0     ",
      "18": "array               0      3      0     ",
      "19": "cte_set             2      0      0     ",
      "20": "set                 0      0      0     ",
      "21": "cursor_open_cte     0      2      23    ",
      "22": "jmp                 26     0      0     ",
      "23": "cursor_read         1      0      0     ",
      "24": "set_add             0      1      0     ",
      "25": "cursor_next         0      23     0     ",
      "26": "cursor_close        0      0      0     ",
      "27": "cte_set             3      0      0     ",
      "28": "body                3      0      0     ",
      "29": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     ",
      "11": "set                 0      0      0     ",
      "12": "int_min             1      0      0     ",
      "13": "push                1      0      0     ",
      "14": "cursor_open         0      20     16    # public.test (primary)",
      "15": "jmp                 19     0      0     ",
      "16": "cursor_read         1      0      0     ",
      "17": "set_add             0      1      0     ",
      "18": "cursor_next         0      16     0     ",
      "19": "cursor_close        0      0      0     ",
      "20": "result              0      0      0     ",
      "21": "ret                 0      0      0     "
    }
  }
}]
drop table test
[]
# test: a(table), b(table), c(expr), d(table)
create table test (id int primary key)
[]
insert into test 1,2,3
[]
with a as (select * from test), b as (select * from test), c as (select [1,2,3]), d as (select * from test) select * from d
[[1], [2], [3]]
explain with a as (select * from test), b as (select * from test), c as (select [1,2,3]), d as (select * from test) select * from d
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      0     ",
      "01": "send_all            1      11     0     ",
      "02": "recv                0      0      0     ",
      "03": "bool                0      0      0     ",
      "04": "push                0      0      0     ",
      "05": "merge_recv          0      -1     -1    ",
      "06": "cte_set             0      0      0     ",
      "07": "recv                1      0      0     ",
      "08": "bool                0      0      0     ",
      "09": "push                0      0      0     ",
      "10": "merge_recv          0      -1     -1    ",
      "11": "cte_set             1      0      0     ",
      "12": "int                 0      -      0     # 1",
      "13": "push                0      0      0     ",
      "14": "int                 0      -      0     # 2",
      "15": "push                0      0      0     ",
      "16": "int                 0      -      0     # 3",
      "17": "push                0      0      0     ",
      "18": "array               0      3      0     ",
      "19": "cte_set             2      0      0     ",
      "20": "send_all            3      22     0     ",
      "21": "recv                3      0      0     ",
      "22": "bool                0      0      0     ",
      "23": "push                0      0      0     ",
      "24": "merge_recv          0      -1     -1    ",
      "25": "cte_set             3      0      0     ",
      "26": "set                 0      0      0     ",
      "27": "cursor_open_cte     0      3      29    ",
      "28": "jmp                 32     0      0     ",
      "29": "cursor_read         1      0      0     ",
      "30": "set_add             0      1      0     ",
      "31": "cursor_next         0      29     0     ",
      "32": "cursor_close        0      0      0     ",
      "33": "cte_set             4      0      0     ",
      "34": "body                4      0      0     ",
      "35": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     ",
      "11": "set                 0      0      0     ",
      "12": "int_min             1      0      0     ",
      "13": "push                1      0      0     ",
      "14": "cursor_open         0      20     16    # public.test (primary)",
      "15": "jmp                 19     0      0     ",
      "16": "cursor_read         1      0      0     ",
      "17": "set_add             0      1      0     ",
      "18": "cursor_next         0      16     0     ",
      "19": "cursor_close        0      0      0     ",
      "20": "result              0      0      0     ",
      "21": "ret                 0      0      0     ",
      "22": "set                 0      0      0     ",
      "23": "int_min             1      0      0     ",
      "24": "push                1      0      0     ",
      "25": "cursor_open         0      40     27    # public.test (primary)",
      "26": "jmp                 30     0      0     ",
      "27": "cursor_read         1      0      0     ",
      "28": "set_add             0      1      0     ",
      "29": "cursor_next         0      27     0     ",
      "30": "cursor_close        0      0      0     ",
      "31": "result              0      0      0     ",
      "32": "ret                 0      0      0     "
    }
  }
}]
drop table test
[]
# test: a(expr), b(table), c(expr)
create table test (id int primary key)
[]
insert into test 1,2,3
[]
with a as (select [1,2,3]), b as (select * from test), c as (select [1,2,3]) select b.*, c.* from b,c
[[[1], 1], [[1], 2], [[1], 3], [[2], 1], [[2], 2], [[2], 3], [[3], 1], [[3], 2], [[3], 3]]
explain with a as (select [1,2,3]), b as (select * from test), c as (select [1,2,3]) select b.*, c.* from b,c
[{
  "bytecode": {
    "coordinator": {
      "00": "int                 0      -      0     # 1",
      "01": "push                0      0      0     ",
      "02": "int                 0      -      0     # 2",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 3",
      "05": "push                0      0      0     ",
      "06": "array               0      3      0     ",
      "07": "cte_set             0      0      0     ",
      "08": "send_all            1      0      0     ",
      "09": "recv                1      0      0     ",
      "10": "bool                0      0      0     ",
      "11": "push                0      0      0     ",
      "12": "merge_recv          0      -1     -1    ",
      "13": "cte_set             1      0      0     ",
      "14": "int                 0      -      0     # 1",
      "15": "push                0      0      0     ",
      "16": "int                 0      -      0     # 2",
      "17": "push                0      0      0     ",
      "18": "int                 0      -      0     # 3",
      "19": "push                0      0      0     ",
      "20": "array               0      3      0     ",
      "21": "cte_set             2      0      0     ",
      "22": "set                 0      0      0     ",
      "23": "cursor_open_cte     0      1      25    ",
      "24": "jmp                 36     0      0     ",
      "25": "cursor_open_cte     1      2      27    ",
      "26": "jmp                 34     0      0     ",
      "27": "cursor_read         1      0      0     ",
      "28": "push                1      0      0     ",
      "29": "cursor_read         1      1      0     ",
      "30": "push                1      0      0     ",
      "31": "array               1      2      0     ",
      "32": "set_add             0      1      0     ",
      "33": "cursor_next         1      27     0     ",
      "34": "cursor_close        1      0      0     ",
      "35": "cursor_next         0      25     0     ",
      "36": "cursor_close        0      0      0     ",
      "37": "cte_set             3      0      0     ",
      "38": "body                3      0      0     ",
      "39": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     "
    }
  }
}]
drop table test
[]
# test: a(expr), b(table), c(table)
create table test (id int primary key)
[]
insert into test 1,2,3
[]
with a as (select [1,2,3]), b as (select * from test), c as (select * from test) select * from c
[[1], [2], [3]]
explain with a as (select [1,2,3]), b as (select * from test), c as (select * from test) select * from c
[{
  "bytecode": {
    "coordinator": {
      "00": "int                 0      -      0     # 1",
      "01": "push                0      0      0     ",
      "02": "int                 0      -      0     # 2",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 3",
      "05": "push                0      0      0     ",
      "06": "array               0      3      0     ",
      "07": "cte_set             0      0      0     ",
      "08": "send_all            1      0      0     ",
      "09": "send_all            2      11     0     ",
      "10": "recv                1      0      0     ",
      "11": "bool                0      0      0     ",
      "12": "push                0      0      0     ",
      "13": "merge_recv          0      -1     -1    ",
      "14": "cte_set             1      0      0     ",
      "15": "recv                2      0      0     ",
      "16": "bool                0      0      0     ",
      "17": "push                0      0      0     ",
      "18": "merge_recv          0      -1     -1    ",
      "19": "cte_set             2      0      0     ",
      "20": "set                 0      0      0     ",
      "21": "cursor_open_cte     0      2      23    ",
      "22": "jmp                 26     0      0     ",
      "23": "cursor_read         1      0      0     ",
      "24": "set_add             0      1      0     ",
      "25": "cursor_next         0      23     0     ",
      "26": "cursor_close        0      0      0     ",
      "27": "cte_set             3      0      0     ",
      "28": "body                3      0      0     ",
      "29": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     ",
      "11": "set                 0      0      0     ",
      "12": "int_min             1      0      0     ",
      "13": "push                1      0      0     ",
      "14": "cursor_open         0      20     16    # public.test (primary)",
      "15": "jmp                 19     0      0     ",
      "16": "cursor_read         1      0      0     ",
      "17": "set_add             0      1      0     ",
      "18": "cursor_next         0      16     0     ",
      "19": "cursor_close        0      0      0     ",
      "20": "result              0      0      0     ",
      "21": "ret                 0      0      0     "
    }
  }
}]
drop table test
[]
# test: a(table), b(a), c(table)
create table test (id int primary key)
[]
insert into test 1,2,3
[]
with a as (select * from test), b as (select * from a), c as (select * from test) select * from c
[[1], [2], [3]]
explain with a as (select * from test), b as (select * from a), c as (select * from test) select * from c
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "set                 0      0      0     ",
      "07": "cursor_open_cte     0      0      9     ",
      "08": "jmp                 12     0      0     ",
      "09": "cursor_read         1      0      0     ",
      "10": "set_add             0      1      0     ",
      "11": "cursor_next         0      9      0     ",
      "12": "cursor_close        0      0      0     ",
      "13": "cte_set             1      0      0     ",
      "14": "send_all            2      11     0     ",
      "15": "recv                2      0      0     ",
      "16": "bool                0      0      0     ",
      "17": "push                0      0      0     ",
      "18": "merge_recv          0      -1     -1    ",
      "19": "cte_set             2      0      0     ",
      "20": "set                 0      0      0     ",
      "21": "cursor_open_cte     0      2      23    ",
      "22": "jmp                 26     0      0     ",
      "23": "cursor_read         1      0      0     ",
      "24": "set_add             0      1      0     ",
      "25": "cursor_next         0      23     0     ",
      "26": "cursor_close        0      0      0     ",
      "27": "cte_set             3      0      0     ",
      "28": "body                3      0      0     ",
      "29": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     ",
      "11": "set                 0      0      0     ",
      "12": "int_min             1      0      0     ",
      "13": "push                1      0      0     ",
      "14": "cursor_open         0      20     16    # public.test (primary)",
      "15": "jmp                 19     0      0     ",
      "16": "cursor_read         1      0      0     ",
      "17": "set_add             0      1      0     ",
      "18": "cursor_next         0      16     0     ",
      "19": "cursor_close        0      0      0     ",
      "20": "result              0      0      0     ",
      "21": "ret                 0      0      0     "
    }
  }
}]
drop table test
[]
create shared table test (id int primary key)
[]
insert into test 1,2,3
[]
with a as (select * from test), b as (select * from a), c as (select * from test) select * from c
[[1], [2], [3]]
explain with a as (select * from test), b as (select * from a), c as (select * from test) select * from c
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "set                 0      0      0     ",
      "07": "cursor_open_cte     0      0      9     ",
      "08": "jmp                 12     0      0     ",
      "09": "cursor_read         1      0      0     ",
      "10": "set_add             0      1      0     ",
      "11": "cursor_next         0      9      0     ",
      "12": "cursor_close        0      0      0     ",
      "13": "cte_set             1      0      0     ",
      "14": "send_first          2      11     0     ",
      "15": "recv                2      0      0     ",
      "16": "bool                0      0      0     ",
      "17": "push                0      0      0     ",
      "18": "merge_recv          0      -1     -1    ",
      "19": "cte_set             2      0      0     ",
      "20": "set                 0      0      0     ",
      "21": "cursor_open_cte     0      2      23    ",
      "22": "jmp                 26     0      0     ",
      "23": "cursor_read         1      0      0     ",
      "24": "set_add             0      1      0     ",
      "25": "cursor_next         0      23     0     ",
      "26": "cursor_close        0      0      0     ",
      "27": "cte_set             3      0      0     ",
      "28": "body                3      0      0     ",
      "29": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     ",
      "11": "set                 0      0      0     ",
      "12": "int_min             1      0      0     ",
      "13": "push                1      0      0     ",
      "14": "cursor_open         0      20     16    # public.test (primary)",
      "15": "jmp                 19     0      0     ",
      "16": "cursor_read         1      0      0     ",
      "17": "set_add             0      1      0     ",
      "18": "cursor_next         0      16     0     ",
      "19": "cursor_close        0      0      0     ",
      "20": "result              0      0      0     ",
      "21": "ret                 0      0      0     "
    }
  }
}]
drop table test
[]
# test: with(insert returning), expr
create shared table test (id int primary key, data int)
[]
with a as (insert into test values (2, 0) returning *); select * from a
[[2, 0]]
explain with a as (insert into test values (2, 0) returning *); select * from a
[{
  "bytecode": {
    "coordinator": {
      "00": "send                0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "set                 0      0      0     ",
      "07": "cursor_open_cte     0      0      9     ",
      "08": "jmp                 12     0      0     ",
      "09": "cursor_read         1      0      0     ",
      "10": "set_add             0      1      0     ",
      "11": "cursor_next         0      9      0     ",
      "12": "cursor_close        0      0      0     ",
      "13": "cte_set             1      0      0     ",
      "14": "body                1      0      0     ",
      "15": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "cursor_prepare      0      -      0     # public.test",
      "02": "jmp                 8      0      0     ",
      "03": "string              1      6      0     # unique key constraint violation",
      "04": "push                1      0      0     ",
      "05": "call                1      -      1     # public.error()",
      "06": "cursor_read         1      0      0     ",
      "07": "set_add             0      1      0     ",
      "08": "upsert              0      3      6     ",
      "09": "cursor_close        0      0      0     ",
      "10": "result              0      0      0     ",
      "11": "ret                 0      0      0     "
    }
  }
}]
with a as (insert into test values (2, 0) returning * into b); select * from a
{"code": 1, "msg": "INTO CTE redefined"}
drop table test
[]
# test: insert returning into, expr
create shared table test (id int primary key, data int)
[]
insert into test values (2, 0) returning * into a; select * from a
[[2, 0]]
explain insert into test values (2, 0) returning * into a; select * from a
[{
  "bytecode": {
    "coordinator": {
      "00": "send                0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "set                 0      0      0     ",
      "07": "cursor_open_cte     0      0      9     ",
      "08": "jmp                 12     0      0     ",
      "09": "cursor_read         1      0      0     ",
      "10": "set_add             0      1      0     ",
      "11": "cursor_next         0      9      0     ",
      "12": "cursor_close        0      0      0     ",
      "13": "cte_set             1      0      0     ",
      "14": "body                1      0      0     ",
      "15": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "cursor_prepare      0      -      0     # public.test",
      "02": "jmp                 8      0      0     ",
      "03": "string              1      6      0     # unique key constraint violation",
      "04": "push                1      0      0     ",
      "05": "call                1      -      1     # public.error()",
      "06": "cursor_read         1      0      0     ",
      "07": "set_add             0      1      0     ",
      "08": "upsert              0      3      6     ",
      "09": "cursor_close        0      0      0     ",
      "10": "result              0      0      0     ",
      "11": "ret                 0      0      0     "
    }
  }
}]
drop table test
[]
# test: with(update returning), expr
create shared table test (id int primary key, data int)
[]
insert into test values (0, 0)
[]
insert into test values (1, 0)
[]
insert into test values (2, 0)
[]
with a as (update test set data = data + 1 returning *) select * from a
[[0, 1], [1, 1], [2, 1]]
explain with a as (update test set data = data + 1 returning *) select * from a
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "set                 0      0      0     ",
      "07": "cursor_open_cte     0      0      9     ",
      "08": "jmp                 12     0      0     ",
      "09": "cursor_read         1      0      0     ",
      "10": "set_add             0      1      0     ",
      "11": "cursor_next         0      9      0     ",
      "12": "cursor_close        0      0      0     ",
      "13": "cte_set             1      0      0     ",
      "14": "body                1      0      0     ",
      "15": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 19     0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "push                1      0      0     ",
      "07": "null                1      0      0     ",
      "08": "push                1      0      0     ",
      "09": "cursor_idx          1      0      1     ",
      "10": "int                 2      -      0     # 1",
      "11": "add                 3      1      2     ",
      "12": "push                3      0      0     ",
      "13": "assign              1      3      1     ",
      "14": "push                1      0      0     ",
      "15": "update              0      0      0     ",
      "16": "cursor_read         1      0      0     ",
      "17": "set_add             0      1      0     ",
      "18": "cursor_next         0      5      0     ",
      "19": "cursor_close        0      0      0     ",
      "20": "result              0      0      0     ",
      "21": "ret                 0      0      0     "
    }
  }
}]
drop table test
[]
# test: update returning into, expr
create shared table test (id int primary key, data int)
[]
insert into test values (0, 0)
[]
insert into test values (1, 0)
[]
insert into test values (2, 0)
[]
update test set data = data + 1 returning * into a; select * from a
[[0, 1], [1, 1], [2, 1]]
explain update test set data = data + 1 returning * into a; select * from a
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "set                 0      0      0     ",
      "07": "cursor_open_cte     0      0      9     ",
      "08": "jmp                 12     0      0     ",
      "09": "cursor_read         1      0      0     ",
      "10": "set_add             0      1      0     ",
      "11": "cursor_next         0      9      0     ",
      "12": "cursor_close        0      0      0     ",
      "13": "cte_set             1      0      0     ",
      "14": "body                1      0      0     ",
      "15": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 19     0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "push                1      0      0     ",
      "07": "null                1      0      0     ",
      "08": "push                1      0      0     ",
      "09": "cursor_idx          1      0      1     ",
      "10": "int                 2      -      0     # 1",
      "11": "add                 3      1      2     ",
      "12": "push                3      0      0     ",
      "13": "assign              1      3      1     ",
      "14": "push                1      0      0     ",
      "15": "update              0      0      0     ",
      "16": "cursor_read         1      0      0     ",
      "17": "set_add             0      1      0     ",
      "18": "cursor_next         0      5      0     ",
      "19": "cursor_close        0      0      0     ",
      "20": "result              0      0      0     ",
      "21": "ret                 0      0      0     "
    }
  }
}]
drop table test
[]
# test: with(delete returning), expr
create shared table test (id int primary key, data int)
[]
insert into test values (0, 0)
[]
insert into test values (1, 0)
[]
insert into test values (2, 0)
[]
with a as (delete from test returning *) select * from a
[[0, 0], [1, 0], [2, 0]]
explain with a as (delete from test returning *) select * from a
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "set                 0      0      0     ",
      "07": "cursor_open_cte     0      0      9     ",
      "08": "jmp                 12     0      0     ",
      "09": "cursor_read         1      0      0     ",
      "10": "set_add             0      1      0     ",
      "11": "cursor_next         0      9      0     ",
      "12": "cursor_close        0      0      0     ",
      "13": "cte_set             1      0      0     ",
      "14": "body                1      0      0     ",
      "15": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 9      0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "set_add             0      1      0     ",
      "07": "delete              0      0      0     ",
      "08": "cursor_next         0      5      0     ",
      "09": "cursor_close        0      0      0     ",
      "10": "result              0      0      0     ",
      "11": "ret                 0      0      0     "
    }
  }
}]
drop table test
[]
# test: delete returning into, expr
create shared table test (id int primary key, data int)
[]
insert into test values (0, 0)
[]
insert into test values (1, 0)
[]
insert into test values (2, 0)
[]
delete from test returning * into a; select * from a
[[0, 0], [1, 0], [2, 0]]
explain delete from test returning * into a; select * from a
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "set                 0      0      0     ",
      "07": "cursor_open_cte     0      0      9     ",
      "08": "jmp                 12     0      0     ",
      "09": "cursor_read         1      0      0     ",
      "10": "set_add             0      1      0     ",
      "11": "cursor_next         0      9      0     ",
      "12": "cursor_close        0      0      0     ",
      "13": "cte_set             1      0      0     ",
      "14": "body                1      0      0     ",
      "15": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 9      0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "set_add             0      1      0     ",
      "07": "delete              0      0      0     ",
      "08": "cursor_next         0      5      0     ",
      "09": "cursor_close        0      0      0     ",
      "10": "result              0      0      0     ",
      "11": "ret                 0      0      0     "
    }
  }
}]
drop table test
[]
# test: a(expr), stmt, b(expr), stmt
create table test (id int primary key)
[]
insert into test 1,2,3
[]
with a as (select [1,2,3]); select * from a; with b as (select * from test); select b.*, a.* from b,a
[[[1], 1], [[1], 2], [[1], 3], [[2], 1], [[2], 2], [[2], 3], [[3], 1], [[3], 2], [[3], 3]]
drop table test
[]
# test: into a(expr), stmt, into b(expr), stmt
create table test (id int primary key)
[]
insert into test 1,2,3
[]
select [1,2,3] into a; select * from a; select * into b from test; select b.*, a.* from b,a
[[[1], 1], [[1], 2], [[1], 3], [[2], 1], [[2], 2], [[2], 3], [[3], 1], [[3], 2], [[3], 3]]
select [1,2,3] into a; select * from a; select * into b from test; select b
[[1], [2], [3]]
drop table test
[]
# test: a(expr), a(expr)
create table test (id int primary key)
[]
insert into test 1,2,3
[]
with a as (select [4,5,6]); with a as (select * from test); select * from a
[[1], [2], [3]]
explain with a as (select [4,5,6]); with a as (select * from test); select * from a
[{
  "bytecode": {
    "coordinator": {
      "00": "int                 0      -      0     # 4",
      "01": "push                0      0      0     ",
      "02": "int                 0      -      0     # 5",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 6",
      "05": "push                0      0      0     ",
      "06": "array               0      3      0     ",
      "07": "cte_set             0      0      0     ",
      "08": "send_all            1      0      0     ",
      "09": "recv                1      0      0     ",
      "10": "bool                0      0      0     ",
      "11": "push                0      0      0     ",
      "12": "merge_recv          0      -1     -1    ",
      "13": "cte_set             0      0      0     ",
      "14": "set                 0      0      0     ",
      "15": "cursor_open_cte     0      0      17    ",
      "16": "jmp                 20     0      0     ",
      "17": "cursor_read         1      0      0     ",
      "18": "set_add             0      1      0     ",
      "19": "cursor_next         0      17     0     ",
      "20": "cursor_close        0      0      0     ",
      "21": "cte_set             1      0      0     ",
      "22": "body                1      0      0     ",
      "23": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     "
    }
  }
}]
with a as (select [4,5,6]); with a as (select [1,2,3]); select * from a
[1, 2, 3]
drop table test
[]
# test: into a(expr), into a(expr)
create table test (id int primary key)
[]
insert into test 1,2,3
[]
select [4,5,6] into a; select * into a from test; select * from a
[[1], [2], [3]]
explain select [4,5,6] into a; select * into a from test; select * from a
[{
  "bytecode": {
    "coordinator": {
      "00": "int                 0      -      0     # 4",
      "01": "push                0      0      0     ",
      "02": "int                 0      -      0     # 5",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 6",
      "05": "push                0      0      0     ",
      "06": "array               0      3      0     ",
      "07": "cte_set             0      0      0     ",
      "08": "send_all            1      0      0     ",
      "09": "recv                1      0      0     ",
      "10": "bool                0      0      0     ",
      "11": "push                0      0      0     ",
      "12": "merge_recv          0      -1     -1    ",
      "13": "cte_set             0      0      0     ",
      "14": "set                 0      0      0     ",
      "15": "cursor_open_cte     0      0      17    ",
      "16": "jmp                 20     0      0     ",
      "17": "cursor_read         1      0      0     ",
      "18": "set_add             0      1      0     ",
      "19": "cursor_next         0      17     0     ",
      "20": "cursor_close        0      0      0     ",
      "21": "cte_set             1      0      0     ",
      "22": "body                1      0      0     ",
      "23": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     "
    }
  }
}]
select [4,5,6] into a; select [1,2,3] into a; select * from a
[1, 2, 3]
drop table test
[]
# test: := a(expr), := a(expr)
create table test (id int primary key)
[]
insert into test 1,2,3
[]
a := select [4,5,6]; a := select * from test; select * from a
[[1], [2], [3]]
explain a := select [4,5,6]; a := select * from test; select * from a
[{
  "bytecode": {
    "coordinator": {
      "00": "int                 0      -      0     # 4",
      "01": "push                0      0      0     ",
      "02": "int                 0      -      0     # 5",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 6",
      "05": "push                0      0      0     ",
      "06": "array               0      3      0     ",
      "07": "cte_set             0      0      0     ",
      "08": "send_all            1      0      0     ",
      "09": "recv                1      0      0     ",
      "10": "bool                0      0      0     ",
      "11": "push                0      0      0     ",
      "12": "merge_recv          0      -1     -1    ",
      "13": "cte_set             0      0      0     ",
      "14": "set                 0      0      0     ",
      "15": "cursor_open_cte     0      0      17    ",
      "16": "jmp                 20     0      0     ",
      "17": "cursor_read         1      0      0     ",
      "18": "set_add             0      1      0     ",
      "19": "cursor_next         0      17     0     ",
      "20": "cursor_close        0      0      0     ",
      "21": "cte_set             1      0      0     ",
      "22": "body                1      0      0     ",
      "23": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     "
    }
  }
}]
a := select [4,5,6]; a := select [1,2,3]; select * from a
[1, 2, 3]
drop table test
[]
create table test (id int primary key)
[]
insert into test 1,2,3
[]
# test: return (expr)
1;
[1]
explain 1;
[{
  "bytecode": {
    "coordinator": {
      "00": "int                 0      -      0     # 1",
      "01": "cte_set             0      0      0     ",
      "02": "body                0      0      0     ",
      "03": "ret                 0      0      0     "
    }
  }
}]
explain select 1;
[{
  "bytecode": {
    "coordinator": {
      "00": "int                 0      -      0     # 1",
      "01": "cte_set             0      0      0     ",
      "02": "body                0      0      0     ",
      "03": "ret                 0      0      0     "
    }
  }
}]
select 1;
[1]
explain return select 1;
[{
  "bytecode": {
    "coordinator": {
      "00": "int                 0      -      0     # 1",
      "01": "cte_set             0      0      0     ",
      "02": "body                0      0      0     ",
      "03": "ret                 0      0      0     "
    }
  }
}]
return select 1;
[1]
explain return 1;
[{
  "bytecode": {
    "coordinator": {
      "00": "int                 0      -      0     # 1",
      "01": "cte_set             0      0      0     ",
      "02": "body                0      0      0     ",
      "03": "ret                 0      0      0     "
    }
  }
}]
return 1;
[1]
explain return 1; 2
[{
  "bytecode": {
    "coordinator": {
      "00": "int                 0      -      0     # 1",
      "01": "cte_set             0      0      0     ",
      "02": "body                0      0      0     ",
      "03": "ret                 0      0      0     ",
      "04": "int                 0      -      0     # 2",
      "05": "cte_set             1      0      0     ",
      "06": "body                1      0      0     ",
      "07": "ret                 0      0      0     "
    }
  }
}]
return 1; 2
[1]
explain return 1; return 2
[{
  "bytecode": {
    "coordinator": {
      "00": "int                 0      -      0     # 1",
      "01": "cte_set             0      0      0     ",
      "02": "body                0      0      0     ",
      "03": "ret                 0      0      0     ",
      "04": "int                 0      -      0     # 2",
      "05": "cte_set             1      0      0     ",
      "06": "body                1      0      0     ",
      "07": "ret                 0      0      0     "
    }
  }
}]
return 1; return 2
[1]
explain 1; return 2
[{
  "bytecode": {
    "coordinator": {
      "00": "int                 0      -      0     # 1",
      "01": "cte_set             0      0      0     ",
      "02": "int                 0      -      0     # 2",
      "03": "cte_set             1      0      0     ",
      "04": "body                1      0      0     ",
      "05": "ret                 0      0      0     "
    }
  }
}]
1; return 2
[2]
explain 1; 2
[{
  "bytecode": {
    "coordinator": {
      "00": "int                 0      -      0     # 1",
      "01": "cte_set             0      0      0     ",
      "02": "int                 0      -      0     # 2",
      "03": "cte_set             1      0      0     ",
      "04": "body                1      0      0     ",
      "05": "ret                 0      0      0     "
    }
  }
}]
1; 2
[2]
# test: return (table)
explain return select id from test;
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_idx          1      0      0     ",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     "
    }
  }
}]
return select id from test;
[1, 2, 3]
explain return select id from test; return select id from test
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     ",
      "08": "send_all            1      11     0     ",
      "09": "recv                1      0      0     ",
      "10": "bool                0      0      0     ",
      "11": "push                0      0      0     ",
      "12": "merge_recv          0      -1     -1    ",
      "13": "cte_set             1      0      0     ",
      "14": "body                1      0      0     ",
      "15": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_idx          1      0      0     ",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     ",
      "11": "set                 0      0      0     ",
      "12": "int_min             1      0      0     ",
      "13": "push                1      0      0     ",
      "14": "cursor_open         0      20     16    # public.test (primary)",
      "15": "jmp                 19     0      0     ",
      "16": "cursor_idx          1      0      0     ",
      "17": "set_add             0      1      0     ",
      "18": "cursor_next         0      16     0     ",
      "19": "cursor_close        0      0      0     ",
      "20": "result              0      0      0     ",
      "21": "ret                 0      0      0     "
    }
  }
}]
return select id from test; return select id from test
[1, 2, 3]
explain return select id from test; select id from test
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     ",
      "08": "send_all            1      11     0     ",
      "09": "recv                1      0      0     ",
      "10": "bool                0      0      0     ",
      "11": "push                0      0      0     ",
      "12": "merge_recv          0      -1     -1    ",
      "13": "cte_set             1      0      0     ",
      "14": "body                1      0      0     ",
      "15": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_idx          1      0      0     ",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     ",
      "11": "set                 0      0      0     ",
      "12": "int_min             1      0      0     ",
      "13": "push                1      0      0     ",
      "14": "cursor_open         0      20     16    # public.test (primary)",
      "15": "jmp                 19     0      0     ",
      "16": "cursor_idx          1      0      0     ",
      "17": "set_add             0      1      0     ",
      "18": "cursor_next         0      16     0     ",
      "19": "cursor_close        0      0      0     ",
      "20": "result              0      0      0     ",
      "21": "ret                 0      0      0     "
    }
  }
}]
return select id from test; select id from test
[1, 2, 3]
explain insert into test 4,5; return select id from test;
[{
  "bytecode": {
    "coordinator": {
      "00": "send                0      0      -     # public.test",
      "01": "send_all            1      2      0     ",
      "02": "recv                0      0      0     ",
      "03": "array               0      0      0     ",
      "04": "cte_set             0      0      0     ",
      "05": "recv                1      0      0     ",
      "06": "bool                0      0      0     ",
      "07": "push                0      0      0     ",
      "08": "merge_recv          0      -1     -1    ",
      "09": "cte_set             1      0      0     ",
      "10": "body                1      0      0     ",
      "11": "ret                 0      0      0     "
    },
    "node": {
      "00": "insert              -      0      0     # public.test",
      "01": "ret                 0      0      0     ",
      "02": "set                 0      0      0     ",
      "03": "int_min             1      0      0     ",
      "04": "push                1      0      0     ",
      "05": "cursor_open         0      8      7     # public.test (primary)",
      "06": "jmp                 10     0      0     ",
      "07": "cursor_idx          1      0      0     ",
      "08": "set_add             0      1      0     ",
      "09": "cursor_next         0      7      0     ",
      "10": "cursor_close        0      0      0     ",
      "11": "result              0      0      0     ",
      "12": "ret                 0      0      0     "
    }
  }
}]
insert into test 4,5; return select id from test;
[1, 2, 3, 4, 5]
explain insert into test 6,7; insert into test 8, 9
[{
  "bytecode": {
    "coordinator": {
      "00": "send                0      0      -     # public.test",
      "01": "send                1      2      -     # public.test",
      "02": "recv                0      0      0     ",
      "03": "array               0      0      0     ",
      "04": "cte_set             0      0      0     ",
      "05": "recv                1      0      0     ",
      "06": "array               0      0      0     ",
      "07": "cte_set             1      0      0     ",
      "08": "body                1      0      0     ",
      "09": "ret                 0      0      0     "
    },
    "node": {
      "00": "insert              -      0      0     # public.test",
      "01": "ret                 0      0      0     ",
      "02": "insert              -      0      0     # public.test",
      "03": "ret                 0      0      0     "
    }
  }
}]
explain insert into test 6,7; return insert into test 8, 9
[{
  "bytecode": {
    "coordinator": {
      "00": "send                0      0      -     # public.test",
      "01": "send                1      2      -     # public.test",
      "02": "recv                0      0      0     ",
      "03": "array               0      0      0     ",
      "04": "cte_set             0      0      0     ",
      "05": "recv                1      0      0     ",
      "06": "array               0      0      0     ",
      "07": "cte_set             1      0      0     ",
      "08": "body                1      0      0     ",
      "09": "ret                 0      0      0     "
    },
    "node": {
      "00": "insert              -      0      0     # public.test",
      "01": "ret                 0      0      0     ",
      "02": "insert              -      0      0     # public.test",
      "03": "ret                 0      0      0     "
    }
  }
}]
insert into test 6,7; insert into test 8, 9
[]
explain insert into test 10; return insert into test 11; insert into test 12;
[{
  "bytecode": {
    "coordinator": {
      "00": "send                0      0      -     # public.test",
      "01": "send                1      2      -     # public.test",
      "02": "recv                0      0      0     ",
      "03": "array               0      0      0     ",
      "04": "cte_set             0      0      0     ",
      "05": "recv                1      0      0     ",
      "06": "array               0      0      0     ",
      "07": "cte_set             1      0      0     ",
      "08": "body                1      0      0     ",
      "09": "ret                 0      0      0     ",
      "10": "send                2      4      -     # public.test",
      "11": "recv                2      0      0     ",
      "12": "array               0      0      0     ",
      "13": "cte_set             2      0      0     ",
      "14": "body                2      0      0     ",
      "15": "ret                 0      0      0     "
    },
    "node": {
      "00": "insert              -      0      0     # public.test",
      "01": "ret                 0      0      0     ",
      "02": "insert              -      0      0     # public.test",
      "03": "ret                 0      0      0     ",
      "04": "insert              -      0      0     # public.test",
      "05": "ret                 0      0      0     "
    }
  }
}]
insert into test 10; return insert into test 11; insert into test 12;
[]
select * from test
[[1], [6], [7], [8], [2], [9], [10], [3], [4], [5], [11]]
explain insert into test 12; insert into test 13; insert into test 14;
[{
  "bytecode": {
    "coordinator": {
      "00": "send                0      0      -     # public.test",
      "01": "send                1      2      -     # public.test",
      "02": "send                2      4      -     # public.test",
      "03": "recv                0      0      0     ",
      "04": "array               0      0      0     ",
      "05": "cte_set             0      0      0     ",
      "06": "recv                1      0      0     ",
      "07": "array               0      0      0     ",
      "08": "cte_set             1      0      0     ",
      "09": "recv                2      0      0     ",
      "10": "array               0      0      0     ",
      "11": "cte_set             2      0      0     ",
      "12": "body                2      0      0     ",
      "13": "ret                 0      0      0     "
    },
    "node": {
      "00": "insert              -      0      0     # public.test",
      "01": "ret                 0      0      0     ",
      "02": "insert              -      0      0     # public.test",
      "03": "ret                 0      0      0     ",
      "04": "insert              -      0      0     # public.test",
      "05": "ret                 0      0      0     "
    }
  }
}]
explain insert into test 12; insert into test 13; return insert into test 14;
[{
  "bytecode": {
    "coordinator": {
      "00": "send                0      0      -     # public.test",
      "01": "send                1      2      -     # public.test",
      "02": "send                2      4      -     # public.test",
      "03": "recv                0      0      0     ",
      "04": "array               0      0      0     ",
      "05": "cte_set             0      0      0     ",
      "06": "recv                1      0      0     ",
      "07": "array               0      0      0     ",
      "08": "cte_set             1      0      0     ",
      "09": "recv                2      0      0     ",
      "10": "array               0      0      0     ",
      "11": "cte_set             2      0      0     ",
      "12": "body                2      0      0     ",
      "13": "ret                 0      0      0     "
    },
    "node": {
      "00": "insert              -      0      0     # public.test",
      "01": "ret                 0      0      0     ",
      "02": "insert              -      0      0     # public.test",
      "03": "ret                 0      0      0     ",
      "04": "insert              -      0      0     # public.test",
      "05": "ret                 0      0      0     "
    }
  }
}]
insert into test 12; insert into test 13; insert into test 14;
[]
explain insert into test 15; return 1; insert into test 16;
[{
  "bytecode": {
    "coordinator": {
      "00": "send                0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "array               0      0      0     ",
      "03": "cte_set             0      0      0     ",
      "04": "int                 0      -      0     # 1",
      "05": "cte_set             1      0      0     ",
      "06": "body                1      0      0     ",
      "07": "ret                 0      0      0     ",
      "08": "send                2      2      -     # public.test",
      "09": "recv                2      0      0     ",
      "10": "array               0      0      0     ",
      "11": "cte_set             2      0      0     ",
      "12": "body                2      0      0     ",
      "13": "ret                 0      0      0     "
    },
    "node": {
      "00": "insert              -      0      0     # public.test",
      "01": "ret                 0      0      0     ",
      "02": "insert              -      0      0     # public.test",
      "03": "ret                 0      0      0     "
    }
  }
}]
explain a := 123; return a
[{
  "bytecode": {
    "coordinator": {
      "00": "int                 0      -      0     # 123",
      "01": "cte_set             0      0      0     ",
      "02": "body                0      0      0     ",
      "03": "ret                 0      0      0     "
    }
  }
}]
a := 123; return a
[123]
# test: return (cte)
explain a := select * from test; return a;
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     "
    }
  }
}]
a := select * from test; return a;
[[1], [6], [7], [8], [14], [2], [9], [10], [12], [3], [4], [5], [11], [13]]
explain a := [1,2,3]; return a; return 48
[{
  "bytecode": {
    "coordinator": {
      "00": "int                 0      -      0     # 1",
      "01": "push                0      0      0     ",
      "02": "int                 0      -      0     # 2",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 3",
      "05": "push                0      0      0     ",
      "06": "array               0      3      0     ",
      "07": "cte_set             0      0      0     ",
      "08": "body                0      0      0     ",
      "09": "ret                 0      0      0     ",
      "10": "int                 0      -      0     # 48",
      "11": "cte_set             1      0      0     ",
      "12": "body                1      0      0     ",
      "13": "ret                 0      0      0     "
    }
  }
}]
a := [1,2,3]; return a; return 48
[1, 2, 3]
explain a := [1,2,3]; return a; select * from test
[{
  "bytecode": {
    "coordinator": {
      "00": "int                 0      -      0     # 1",
      "01": "push                0      0      0     ",
      "02": "int                 0      -      0     # 2",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 3",
      "05": "push                0      0      0     ",
      "06": "array               0      3      0     ",
      "07": "cte_set             0      0      0     ",
      "08": "body                0      0      0     ",
      "09": "ret                 0      0      0     ",
      "10": "send_all            2      0      0     ",
      "11": "recv                2      0      0     ",
      "12": "bool                0      0      0     ",
      "13": "push                0      0      0     ",
      "14": "merge_recv          0      -1     -1    ",
      "15": "cte_set             1      0      0     ",
      "16": "body                1      0      0     ",
      "17": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     "
    }
  }
}]
a := [1,2,3]; return a; select * from test
[1, 2, 3]
explain a := [1,2,3]; return a; select * from test; select * from test
[{
  "bytecode": {
    "coordinator": {
      "00": "int                 0      -      0     # 1",
      "01": "push                0      0      0     ",
      "02": "int                 0      -      0     # 2",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 3",
      "05": "push                0      0      0     ",
      "06": "array               0      3      0     ",
      "07": "cte_set             0      0      0     ",
      "08": "body                0      0      0     ",
      "09": "ret                 0      0      0     ",
      "10": "send_all            2      0      0     ",
      "11": "send_all            3      11     0     ",
      "12": "recv                2      0      0     ",
      "13": "bool                0      0      0     ",
      "14": "push                0      0      0     ",
      "15": "merge_recv          0      -1     -1    ",
      "16": "cte_set             1      0      0     ",
      "17": "recv                3      0      0     ",
      "18": "bool                0      0      0     ",
      "19": "push                0      0      0     ",
      "20": "merge_recv          0      -1     -1    ",
      "21": "cte_set             2      0      0     ",
      "22": "body                2      0      0     ",
      "23": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     ",
      "11": "set                 0      0      0     ",
      "12": "int_min             1      0      0     ",
      "13": "push                1      0      0     ",
      "14": "cursor_open         0      20     16    # public.test (primary)",
      "15": "jmp                 19     0      0     ",
      "16": "cursor_read         1      0      0     ",
      "17": "set_add             0      1      0     ",
      "18": "cursor_next         0      16     0     ",
      "19": "cursor_close        0      0      0     ",
      "20": "result              0      0      0     ",
      "21": "ret                 0      0      0     "
    }
  }
}]
a := [1,2,3]; return a; select * from test; select * from test
[1, 2, 3]
explain a := [1,2,3]; select * from test; return a;
[{
  "bytecode": {
    "coordinator": {
      "00": "int                 0      -      0     # 1",
      "01": "push                0      0      0     ",
      "02": "int                 0      -      0     # 2",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 3",
      "05": "push                0      0      0     ",
      "06": "array               0      3      0     ",
      "07": "cte_set             0      0      0     ",
      "08": "send_all            1      0      0     ",
      "09": "recv                1      0      0     ",
      "10": "bool                0      0      0     ",
      "11": "push                0      0      0     ",
      "12": "merge_recv          0      -1     -1    ",
      "13": "cte_set             1      0      0     ",
      "14": "body                0      0      0     ",
      "15": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     "
    }
  }
}]
a := [1,2,3]; select * from test; return a;
[1, 2, 3]
explain return a;
{"code": 1, "msg": "<a> column, CTE or argument not found"}
return a;
{"code": 1, "msg": "<a> column, CTE or argument not found"}
drop table test
[]
disconnect S0
close E0
