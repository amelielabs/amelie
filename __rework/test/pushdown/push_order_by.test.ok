open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3485 }], "backends": 3
connect E0 S0 localhost:3485
# test: select from table order by
create table test (id int primary key serial)
insert into test generate 20
select * from test
[[0], [1], [6], [7], [8], [14], [15], [17], [2], [9], [10], [12], [18], [19], [3], [4], [5], [11], [13], [16]]
explain select * from test order by id
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set_ordered         0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      3      5     # public.test (primary)",
      "04": "jmp                 10     0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "cursor_idx          2      0      0     ",
      "07": "push                2      0      0     ",
      "08": "set_add             0      1      0     ",
      "09": "cursor_next         0      5      0     ",
      "10": "cursor_close        0      0      0     ",
      "11": "set_sort            0      0      0     ",
      "12": "result              0      0      0     ",
      "13": "ret                 0      0      0     "
    }
  }
}]
select * from test order by id
[[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]]
# test: select from table order by asc
explain select * from test order by id asc
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set_ordered         0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      3      5     # public.test (primary)",
      "04": "jmp                 10     0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "cursor_idx          2      0      0     ",
      "07": "push                2      0      0     ",
      "08": "set_add             0      1      0     ",
      "09": "cursor_next         0      5      0     ",
      "10": "cursor_close        0      0      0     ",
      "11": "set_sort            0      0      0     ",
      "12": "result              0      0      0     ",
      "13": "ret                 0      0      0     "
    }
  }
}]
select * from test order by id asc
[[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]]
# test: select from table order by desc
explain select * from test order by id desc
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set_ordered         0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      3      5     # public.test (primary)",
      "04": "jmp                 10     0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "cursor_idx          2      0      0     ",
      "07": "push                2      0      0     ",
      "08": "set_add             0      1      0     ",
      "09": "cursor_next         0      5      0     ",
      "10": "cursor_close        0      0      0     ",
      "11": "set_sort            0      0      0     ",
      "12": "result              0      0      0     ",
      "13": "ret                 0      0      0     "
    }
  }
}]
select * from test order by id desc
[[19], [18], [17], [16], [15], [14], [13], [12], [11], [10], [9], [8], [7], [6], [5], [4], [3], [2], [1], [0]]
# test: select from table order by limit
explain select * from test order by id limit 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 1",
      "05": "merge_recv          1      0      -1    ",
      "06": "cte_set             0      1      0     ",
      "07": "body                0      0      0     ",
      "08": "ret                 0      0      0     "
    },
    "node": {
      "00": "set_ordered         0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      3      5     # public.test (primary)",
      "04": "jmp                 10     0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "cursor_idx          2      0      0     ",
      "07": "push                2      0      0     ",
      "08": "set_add             0      1      0     ",
      "09": "cursor_next         0      5      0     ",
      "10": "cursor_close        0      0      0     ",
      "11": "set_sort            0      0      0     ",
      "12": "result              0      0      0     ",
      "13": "ret                 0      0      0     "
    }
  }
}]
select * from test order by id limit 1
[[0]]
select * from test order by id limit 2
[[0], [1]]
select * from test order by id limit 3
[[0], [1], [2]]
select * from test order by id limit 4
[[0], [1], [2], [3]]
select * from test order by id limit 10
[[0], [1], [2], [3], [4], [5], [6], [7], [8], [9]]
select * from test order by id limit 20
[[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]]
# test: select from table order by limit 0
explain select * from test order by id limit 0
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 0",
      "05": "merge_recv          1      0      -1    ",
      "06": "cte_set             0      1      0     ",
      "07": "body                0      0      0     ",
      "08": "ret                 0      0      0     "
    },
    "node": {
      "00": "set_ordered         0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      3      5     # public.test (primary)",
      "04": "jmp                 10     0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "cursor_idx          2      0      0     ",
      "07": "push                2      0      0     ",
      "08": "set_add             0      1      0     ",
      "09": "cursor_next         0      5      0     ",
      "10": "cursor_close        0      0      0     ",
      "11": "set_sort            0      0      0     ",
      "12": "result              0      0      0     ",
      "13": "ret                 0      0      0     "
    }
  }
}]
select * from test order by id limit 0
[]
select * from test order by id limit -1
{"msg": "LIMIT: positive integer value expected"}
# test: select from table order by desc limit
explain select * from test order by id desc limit 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 1",
      "05": "merge_recv          1      0      -1    ",
      "06": "cte_set             0      1      0     ",
      "07": "body                0      0      0     ",
      "08": "ret                 0      0      0     "
    },
    "node": {
      "00": "set_ordered         0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      3      5     # public.test (primary)",
      "04": "jmp                 10     0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "cursor_idx          2      0      0     ",
      "07": "push                2      0      0     ",
      "08": "set_add             0      1      0     ",
      "09": "cursor_next         0      5      0     ",
      "10": "cursor_close        0      0      0     ",
      "11": "set_sort            0      0      0     ",
      "12": "result              0      0      0     ",
      "13": "ret                 0      0      0     "
    }
  }
}]
select * from test order by id desc limit 1
[[19]]
select * from test order by id desc limit 2
[[19], [18]]
select * from test order by id desc limit 3
[[19], [18], [17]]
select * from test order by id desc limit 4
[[19], [18], [17], [16]]
select * from test order by id desc limit 10
[[19], [18], [17], [16], [15], [14], [13], [12], [11], [10]]
select * from test order by id desc limit 20
[[19], [18], [17], [16], [15], [14], [13], [12], [11], [10], [9], [8], [7], [6], [5], [4], [3], [2], [1], [0]]
# test: select from table order by limit offset
explain select * from test order by id limit 1 offset 0
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 1",
      "05": "int                 1      -      0     # 0",
      "06": "merge_recv          2      0      1     ",
      "07": "cte_set             0      2      0     ",
      "08": "body                0      0      0     ",
      "09": "ret                 0      0      0     "
    },
    "node": {
      "00": "set_ordered         0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      3      5     # public.test (primary)",
      "04": "jmp                 10     0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "cursor_idx          2      0      0     ",
      "07": "push                2      0      0     ",
      "08": "set_add             0      1      0     ",
      "09": "cursor_next         0      5      0     ",
      "10": "cursor_close        0      0      0     ",
      "11": "set_sort            0      0      0     ",
      "12": "result              0      0      0     ",
      "13": "ret                 0      0      0     "
    }
  }
}]
select * from test order by id limit 1 offset 0
[[0]]
# test: select from table order by limit offset #2
explain select * from test order by id limit 1 offset 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 1",
      "05": "int                 1      -      0     # 1",
      "06": "merge_recv          2      0      1     ",
      "07": "cte_set             0      2      0     ",
      "08": "body                0      0      0     ",
      "09": "ret                 0      0      0     "
    },
    "node": {
      "00": "set_ordered         0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      3      5     # public.test (primary)",
      "04": "jmp                 10     0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "cursor_idx          2      0      0     ",
      "07": "push                2      0      0     ",
      "08": "set_add             0      1      0     ",
      "09": "cursor_next         0      5      0     ",
      "10": "cursor_close        0      0      0     ",
      "11": "set_sort            0      0      0     ",
      "12": "result              0      0      0     ",
      "13": "ret                 0      0      0     "
    }
  }
}]
select * from test order by id limit 1 offset 1
[[1]]
select * from test order by id limit 1 offset 2
[[2]]
select * from test order by id limit 1 offset 3
[[3]]
select * from test order by id limit 1 offset 4
[[4]]
# test: select from table order by desc limit offset
explain select * from test order by id desc limit 1 offset 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 1",
      "05": "int                 1      -      0     # 1",
      "06": "merge_recv          2      0      1     ",
      "07": "cte_set             0      2      0     ",
      "08": "body                0      0      0     ",
      "09": "ret                 0      0      0     "
    },
    "node": {
      "00": "set_ordered         0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      3      5     # public.test (primary)",
      "04": "jmp                 10     0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "cursor_idx          2      0      0     ",
      "07": "push                2      0      0     ",
      "08": "set_add             0      1      0     ",
      "09": "cursor_next         0      5      0     ",
      "10": "cursor_close        0      0      0     ",
      "11": "set_sort            0      0      0     ",
      "12": "result              0      0      0     ",
      "13": "ret                 0      0      0     "
    }
  }
}]
select * from test order by id desc limit 1 offset 1
[[18]]
select * from test order by id desc limit 1 offset 2
[[17]]
select * from test order by id desc limit 1 offset 3
[[16]]
select * from test order by id desc limit 1 offset 4
[[15]]
# test: select from table order by offset
explain select * from test order by id offset 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 1",
      "05": "merge_recv          1      -1     0     ",
      "06": "cte_set             0      1      0     ",
      "07": "body                0      0      0     ",
      "08": "ret                 0      0      0     "
    },
    "node": {
      "00": "set_ordered         0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      3      5     # public.test (primary)",
      "04": "jmp                 10     0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "cursor_idx          2      0      0     ",
      "07": "push                2      0      0     ",
      "08": "set_add             0      1      0     ",
      "09": "cursor_next         0      5      0     ",
      "10": "cursor_close        0      0      0     ",
      "11": "set_sort            0      0      0     ",
      "12": "result              0      0      0     ",
      "13": "ret                 0      0      0     "
    }
  }
}]
select * from test order by id offset 1
[[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]]
select * from test order by id offset 2
[[2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]]
select * from test order by id offset 3
[[3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]]
select * from test order by id offset 4
[[4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]]
select * from test order by id offset 0
[[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]]
select * from test order by id offset -1
{"msg": "OFFSET: positive integer value expected"}
# test: select from table order by desc offset
explain select * from test order by id desc offset 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 1",
      "05": "merge_recv          1      -1     0     ",
      "06": "cte_set             0      1      0     ",
      "07": "body                0      0      0     ",
      "08": "ret                 0      0      0     "
    },
    "node": {
      "00": "set_ordered         0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      3      5     # public.test (primary)",
      "04": "jmp                 10     0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "cursor_idx          2      0      0     ",
      "07": "push                2      0      0     ",
      "08": "set_add             0      1      0     ",
      "09": "cursor_next         0      5      0     ",
      "10": "cursor_close        0      0      0     ",
      "11": "set_sort            0      0      0     ",
      "12": "result              0      0      0     ",
      "13": "ret                 0      0      0     "
    }
  }
}]
select * from test order by id desc offset 1
[[18], [17], [16], [15], [14], [13], [12], [11], [10], [9], [8], [7], [6], [5], [4], [3], [2], [1], [0]]
select * from test order by id desc offset 2
[[17], [16], [15], [14], [13], [12], [11], [10], [9], [8], [7], [6], [5], [4], [3], [2], [1], [0]]
select * from test order by id desc offset 3
[[16], [15], [14], [13], [12], [11], [10], [9], [8], [7], [6], [5], [4], [3], [2], [1], [0]]
select * from test order by id desc offset 4
[[15], [14], [13], [12], [11], [10], [9], [8], [7], [6], [5], [4], [3], [2], [1], [0]]
select * from test order by id desc offset 0
[[19], [18], [17], [16], [15], [14], [13], [12], [11], [10], [9], [8], [7], [6], [5], [4], [3], [2], [1], [0]]
select * from test order by id desc offset -1
{"msg": "OFFSET: positive integer value expected"}
drop table test
# test: select from shared order by
create shared table test (id int primary key serial)
insert into test generate 20
select * from test
[[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]]
explain select * from test order by id
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set_ordered         0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      3      5     # public.test (primary)",
      "04": "jmp                 10     0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "cursor_idx          2      0      0     ",
      "07": "push                2      0      0     ",
      "08": "set_add             0      1      0     ",
      "09": "cursor_next         0      5      0     ",
      "10": "cursor_close        0      0      0     ",
      "11": "set_sort            0      0      0     ",
      "12": "result              0      0      0     ",
      "13": "ret                 0      0      0     "
    }
  }
}]
select * from test order by id
[[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]]
# test: select from shared order by asc
explain select * from test order by id asc
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set_ordered         0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      3      5     # public.test (primary)",
      "04": "jmp                 10     0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "cursor_idx          2      0      0     ",
      "07": "push                2      0      0     ",
      "08": "set_add             0      1      0     ",
      "09": "cursor_next         0      5      0     ",
      "10": "cursor_close        0      0      0     ",
      "11": "set_sort            0      0      0     ",
      "12": "result              0      0      0     ",
      "13": "ret                 0      0      0     "
    }
  }
}]
select * from test order by id asc
[[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]]
# test: select from shared order by desc
explain select * from test order by id desc
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set_ordered         0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      3      5     # public.test (primary)",
      "04": "jmp                 10     0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "cursor_idx          2      0      0     ",
      "07": "push                2      0      0     ",
      "08": "set_add             0      1      0     ",
      "09": "cursor_next         0      5      0     ",
      "10": "cursor_close        0      0      0     ",
      "11": "set_sort            0      0      0     ",
      "12": "result              0      0      0     ",
      "13": "ret                 0      0      0     "
    }
  }
}]
select * from test order by id desc
[[19], [18], [17], [16], [15], [14], [13], [12], [11], [10], [9], [8], [7], [6], [5], [4], [3], [2], [1], [0]]
# test: select from shared order by limit
explain select * from test order by id limit 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 1",
      "05": "merge_recv          1      0      -1    ",
      "06": "cte_set             0      1      0     ",
      "07": "body                0      0      0     ",
      "08": "ret                 0      0      0     "
    },
    "node": {
      "00": "set_ordered         0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      3      5     # public.test (primary)",
      "04": "jmp                 10     0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "cursor_idx          2      0      0     ",
      "07": "push                2      0      0     ",
      "08": "set_add             0      1      0     ",
      "09": "cursor_next         0      5      0     ",
      "10": "cursor_close        0      0      0     ",
      "11": "set_sort            0      0      0     ",
      "12": "result              0      0      0     ",
      "13": "ret                 0      0      0     "
    }
  }
}]
select * from test order by id limit 1
[[0]]
select * from test order by id limit 2
[[0], [1]]
select * from test order by id limit 3
[[0], [1], [2]]
select * from test order by id limit 4
[[0], [1], [2], [3]]
select * from test order by id limit 10
[[0], [1], [2], [3], [4], [5], [6], [7], [8], [9]]
select * from test order by id limit 20
[[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]]
# test: select from shared order by limit 0
explain select * from test order by id limit 0
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 0",
      "05": "merge_recv          1      0      -1    ",
      "06": "cte_set             0      1      0     ",
      "07": "body                0      0      0     ",
      "08": "ret                 0      0      0     "
    },
    "node": {
      "00": "set_ordered         0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      3      5     # public.test (primary)",
      "04": "jmp                 10     0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "cursor_idx          2      0      0     ",
      "07": "push                2      0      0     ",
      "08": "set_add             0      1      0     ",
      "09": "cursor_next         0      5      0     ",
      "10": "cursor_close        0      0      0     ",
      "11": "set_sort            0      0      0     ",
      "12": "result              0      0      0     ",
      "13": "ret                 0      0      0     "
    }
  }
}]
select * from test order by id limit 0
[]
select * from test order by id limit -1
{"msg": "LIMIT: positive integer value expected"}
# test: select from shared order by desc limit
explain select * from test order by id desc limit 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 1",
      "05": "merge_recv          1      0      -1    ",
      "06": "cte_set             0      1      0     ",
      "07": "body                0      0      0     ",
      "08": "ret                 0      0      0     "
    },
    "node": {
      "00": "set_ordered         0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      3      5     # public.test (primary)",
      "04": "jmp                 10     0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "cursor_idx          2      0      0     ",
      "07": "push                2      0      0     ",
      "08": "set_add             0      1      0     ",
      "09": "cursor_next         0      5      0     ",
      "10": "cursor_close        0      0      0     ",
      "11": "set_sort            0      0      0     ",
      "12": "result              0      0      0     ",
      "13": "ret                 0      0      0     "
    }
  }
}]
select * from test order by id desc limit 1
[[19]]
select * from test order by id desc limit 2
[[19], [18]]
select * from test order by id desc limit 3
[[19], [18], [17]]
select * from test order by id desc limit 4
[[19], [18], [17], [16]]
select * from test order by id desc limit 10
[[19], [18], [17], [16], [15], [14], [13], [12], [11], [10]]
select * from test order by id desc limit 20
[[19], [18], [17], [16], [15], [14], [13], [12], [11], [10], [9], [8], [7], [6], [5], [4], [3], [2], [1], [0]]
# test: select from shared order by limit offset
explain select * from test order by id limit 1 offset 0
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 1",
      "05": "int                 1      -      0     # 0",
      "06": "merge_recv          2      0      1     ",
      "07": "cte_set             0      2      0     ",
      "08": "body                0      0      0     ",
      "09": "ret                 0      0      0     "
    },
    "node": {
      "00": "set_ordered         0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      3      5     # public.test (primary)",
      "04": "jmp                 10     0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "cursor_idx          2      0      0     ",
      "07": "push                2      0      0     ",
      "08": "set_add             0      1      0     ",
      "09": "cursor_next         0      5      0     ",
      "10": "cursor_close        0      0      0     ",
      "11": "set_sort            0      0      0     ",
      "12": "result              0      0      0     ",
      "13": "ret                 0      0      0     "
    }
  }
}]
select * from test order by id limit 1 offset 0
[[0]]
# test: select from shared order by limit offset #2
explain select * from test order by id limit 1 offset 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 1",
      "05": "int                 1      -      0     # 1",
      "06": "merge_recv          2      0      1     ",
      "07": "cte_set             0      2      0     ",
      "08": "body                0      0      0     ",
      "09": "ret                 0      0      0     "
    },
    "node": {
      "00": "set_ordered         0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      3      5     # public.test (primary)",
      "04": "jmp                 10     0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "cursor_idx          2      0      0     ",
      "07": "push                2      0      0     ",
      "08": "set_add             0      1      0     ",
      "09": "cursor_next         0      5      0     ",
      "10": "cursor_close        0      0      0     ",
      "11": "set_sort            0      0      0     ",
      "12": "result              0      0      0     ",
      "13": "ret                 0      0      0     "
    }
  }
}]
select * from test order by id limit 1 offset 1
[[1]]
select * from test order by id limit 1 offset 2
[[2]]
select * from test order by id limit 1 offset 3
[[3]]
select * from test order by id limit 1 offset 4
[[4]]
# test: select from shared order by desc limit offset
explain select * from test order by id desc limit 1 offset 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 1",
      "05": "int                 1      -      0     # 1",
      "06": "merge_recv          2      0      1     ",
      "07": "cte_set             0      2      0     ",
      "08": "body                0      0      0     ",
      "09": "ret                 0      0      0     "
    },
    "node": {
      "00": "set_ordered         0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      3      5     # public.test (primary)",
      "04": "jmp                 10     0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "cursor_idx          2      0      0     ",
      "07": "push                2      0      0     ",
      "08": "set_add             0      1      0     ",
      "09": "cursor_next         0      5      0     ",
      "10": "cursor_close        0      0      0     ",
      "11": "set_sort            0      0      0     ",
      "12": "result              0      0      0     ",
      "13": "ret                 0      0      0     "
    }
  }
}]
select * from test order by id desc limit 1 offset 1
[[18]]
select * from test order by id desc limit 1 offset 2
[[17]]
select * from test order by id desc limit 1 offset 3
[[16]]
select * from test order by id desc limit 1 offset 4
[[15]]
# test: select from shared order by offset
explain select * from test order by id offset 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 1",
      "05": "merge_recv          1      -1     0     ",
      "06": "cte_set             0      1      0     ",
      "07": "body                0      0      0     ",
      "08": "ret                 0      0      0     "
    },
    "node": {
      "00": "set_ordered         0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      3      5     # public.test (primary)",
      "04": "jmp                 10     0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "cursor_idx          2      0      0     ",
      "07": "push                2      0      0     ",
      "08": "set_add             0      1      0     ",
      "09": "cursor_next         0      5      0     ",
      "10": "cursor_close        0      0      0     ",
      "11": "set_sort            0      0      0     ",
      "12": "result              0      0      0     ",
      "13": "ret                 0      0      0     "
    }
  }
}]
select * from test order by id offset 1
[[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]]
select * from test order by id offset 2
[[2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]]
select * from test order by id offset 3
[[3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]]
select * from test order by id offset 4
[[4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]]
select * from test order by id offset 0
[[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]]
select * from test order by id offset -1
{"msg": "OFFSET: positive integer value expected"}
# test: select from shared order by desc offset
explain select * from test order by id desc offset 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 1",
      "05": "merge_recv          1      -1     0     ",
      "06": "cte_set             0      1      0     ",
      "07": "body                0      0      0     ",
      "08": "ret                 0      0      0     "
    },
    "node": {
      "00": "set_ordered         0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      3      5     # public.test (primary)",
      "04": "jmp                 10     0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "cursor_idx          2      0      0     ",
      "07": "push                2      0      0     ",
      "08": "set_add             0      1      0     ",
      "09": "cursor_next         0      5      0     ",
      "10": "cursor_close        0      0      0     ",
      "11": "set_sort            0      0      0     ",
      "12": "result              0      0      0     ",
      "13": "ret                 0      0      0     "
    }
  }
}]
select * from test order by id desc offset 1
[[18], [17], [16], [15], [14], [13], [12], [11], [10], [9], [8], [7], [6], [5], [4], [3], [2], [1], [0]]
select * from test order by id desc offset 2
[[17], [16], [15], [14], [13], [12], [11], [10], [9], [8], [7], [6], [5], [4], [3], [2], [1], [0]]
select * from test order by id desc offset 3
[[16], [15], [14], [13], [12], [11], [10], [9], [8], [7], [6], [5], [4], [3], [2], [1], [0]]
select * from test order by id desc offset 4
[[15], [14], [13], [12], [11], [10], [9], [8], [7], [6], [5], [4], [3], [2], [1], [0]]
select * from test order by id desc offset 0
[[19], [18], [17], [16], [15], [14], [13], [12], [11], [10], [9], [8], [7], [6], [5], [4], [3], [2], [1], [0]]
select * from test order by id desc offset -1
{"msg": "OFFSET: positive integer value expected"}
drop table test
# test: select from expr order by
explain select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by *
[{
  "bytecode": {
    "coordinator": {
      "00": "set_ordered         0      0      0     ",
      "01": "int                 1      -      0     # 0",
      "02": "push                1      0      0     ",
      "03": "int                 1      -      0     # 1",
      "04": "push                1      0      0     ",
      "05": "int                 1      -      0     # 2",
      "06": "push                1      0      0     ",
      "07": "int                 1      -      0     # 3",
      "08": "push                1      0      0     ",
      "09": "int                 1      -      0     # 4",
      "10": "push                1      0      0     ",
      "11": "int                 1      -      0     # 5",
      "12": "push                1      0      0     ",
      "13": "int                 1      -      0     # 6",
      "14": "push                1      0      0     ",
      "15": "int                 1      -      0     # 7",
      "16": "push                1      0      0     ",
      "17": "int                 1      -      0     # 8",
      "18": "push                1      0      0     ",
      "19": "int                 1      -      0     # 9",
      "20": "push                1      0      0     ",
      "21": "int                 1      -      0     # 10",
      "22": "push                1      0      0     ",
      "23": "int                 1      -      0     # 11",
      "24": "push                1      0      0     ",
      "25": "int                 1      -      0     # 12",
      "26": "push                1      0      0     ",
      "27": "int                 1      -      0     # 13",
      "28": "push                1      0      0     ",
      "29": "int                 1      -      0     # 14",
      "30": "push                1      0      0     ",
      "31": "int                 1      -      0     # 15",
      "32": "push                1      0      0     ",
      "33": "int                 1      -      0     # 16",
      "34": "push                1      0      0     ",
      "35": "int                 1      -      0     # 17",
      "36": "push                1      0      0     ",
      "37": "int                 1      -      0     # 18",
      "38": "push                1      0      0     ",
      "39": "int                 1      -      0     # 19",
      "40": "push                1      0      0     ",
      "41": "array               1      20     0     ",
      "42": "cursor_open_expr    0      1      44    ",
      "43": "jmp                 49     0      0     ",
      "44": "cursor_read         2      0      0     ",
      "45": "cursor_read         3      0      0     ",
      "46": "push                3      0      0     ",
      "47": "set_add             0      2      0     ",
      "48": "cursor_next         0      44     0     ",
      "49": "cursor_close        0      0      0     ",
      "50": "set_sort            0      0      0     ",
      "51": "bool                1      0      0     ",
      "52": "push                1      0      0     ",
      "53": "merge               1      0      -1    ",
      "54": "cte_set             0      1      0     ",
      "55": "body                0      0      0     ",
      "56": "ret                 0      0      0     "
    }
  }
}]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by *
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
# test: select from expr order by asc
explain select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * asc
[{
  "bytecode": {
    "coordinator": {
      "00": "set_ordered         0      0      0     ",
      "01": "int                 1      -      0     # 0",
      "02": "push                1      0      0     ",
      "03": "int                 1      -      0     # 1",
      "04": "push                1      0      0     ",
      "05": "int                 1      -      0     # 2",
      "06": "push                1      0      0     ",
      "07": "int                 1      -      0     # 3",
      "08": "push                1      0      0     ",
      "09": "int                 1      -      0     # 4",
      "10": "push                1      0      0     ",
      "11": "int                 1      -      0     # 5",
      "12": "push                1      0      0     ",
      "13": "int                 1      -      0     # 6",
      "14": "push                1      0      0     ",
      "15": "int                 1      -      0     # 7",
      "16": "push                1      0      0     ",
      "17": "int                 1      -      0     # 8",
      "18": "push                1      0      0     ",
      "19": "int                 1      -      0     # 9",
      "20": "push                1      0      0     ",
      "21": "int                 1      -      0     # 10",
      "22": "push                1      0      0     ",
      "23": "int                 1      -      0     # 11",
      "24": "push                1      0      0     ",
      "25": "int                 1      -      0     # 12",
      "26": "push                1      0      0     ",
      "27": "int                 1      -      0     # 13",
      "28": "push                1      0      0     ",
      "29": "int                 1      -      0     # 14",
      "30": "push                1      0      0     ",
      "31": "int                 1      -      0     # 15",
      "32": "push                1      0      0     ",
      "33": "int                 1      -      0     # 16",
      "34": "push                1      0      0     ",
      "35": "int                 1      -      0     # 17",
      "36": "push                1      0      0     ",
      "37": "int                 1      -      0     # 18",
      "38": "push                1      0      0     ",
      "39": "int                 1      -      0     # 19",
      "40": "push                1      0      0     ",
      "41": "array               1      20     0     ",
      "42": "cursor_open_expr    0      1      44    ",
      "43": "jmp                 49     0      0     ",
      "44": "cursor_read         2      0      0     ",
      "45": "cursor_read         3      0      0     ",
      "46": "push                3      0      0     ",
      "47": "set_add             0      2      0     ",
      "48": "cursor_next         0      44     0     ",
      "49": "cursor_close        0      0      0     ",
      "50": "set_sort            0      0      0     ",
      "51": "bool                1      0      0     ",
      "52": "push                1      0      0     ",
      "53": "merge               1      0      -1    ",
      "54": "cte_set             0      1      0     ",
      "55": "body                0      0      0     ",
      "56": "ret                 0      0      0     "
    }
  }
}]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * asc
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
# test: select from expr order by desc
explain select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * desc
[{
  "bytecode": {
    "coordinator": {
      "00": "set_ordered         0      0      0     ",
      "01": "int                 1      -      0     # 0",
      "02": "push                1      0      0     ",
      "03": "int                 1      -      0     # 1",
      "04": "push                1      0      0     ",
      "05": "int                 1      -      0     # 2",
      "06": "push                1      0      0     ",
      "07": "int                 1      -      0     # 3",
      "08": "push                1      0      0     ",
      "09": "int                 1      -      0     # 4",
      "10": "push                1      0      0     ",
      "11": "int                 1      -      0     # 5",
      "12": "push                1      0      0     ",
      "13": "int                 1      -      0     # 6",
      "14": "push                1      0      0     ",
      "15": "int                 1      -      0     # 7",
      "16": "push                1      0      0     ",
      "17": "int                 1      -      0     # 8",
      "18": "push                1      0      0     ",
      "19": "int                 1      -      0     # 9",
      "20": "push                1      0      0     ",
      "21": "int                 1      -      0     # 10",
      "22": "push                1      0      0     ",
      "23": "int                 1      -      0     # 11",
      "24": "push                1      0      0     ",
      "25": "int                 1      -      0     # 12",
      "26": "push                1      0      0     ",
      "27": "int                 1      -      0     # 13",
      "28": "push                1      0      0     ",
      "29": "int                 1      -      0     # 14",
      "30": "push                1      0      0     ",
      "31": "int                 1      -      0     # 15",
      "32": "push                1      0      0     ",
      "33": "int                 1      -      0     # 16",
      "34": "push                1      0      0     ",
      "35": "int                 1      -      0     # 17",
      "36": "push                1      0      0     ",
      "37": "int                 1      -      0     # 18",
      "38": "push                1      0      0     ",
      "39": "int                 1      -      0     # 19",
      "40": "push                1      0      0     ",
      "41": "array               1      20     0     ",
      "42": "cursor_open_expr    0      1      44    ",
      "43": "jmp                 49     0      0     ",
      "44": "cursor_read         2      0      0     ",
      "45": "cursor_read         3      0      0     ",
      "46": "push                3      0      0     ",
      "47": "set_add             0      2      0     ",
      "48": "cursor_next         0      44     0     ",
      "49": "cursor_close        0      0      0     ",
      "50": "set_sort            0      0      0     ",
      "51": "bool                1      0      0     ",
      "52": "push                1      0      0     ",
      "53": "merge               1      0      -1    ",
      "54": "cte_set             0      1      0     ",
      "55": "body                0      0      0     ",
      "56": "ret                 0      0      0     "
    }
  }
}]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * desc
[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]
# test: select from expr order by limit
explain select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * limit 1
[{
  "bytecode": {
    "coordinator": {
      "00": "set_ordered         0      0      0     ",
      "01": "int                 1      -      0     # 0",
      "02": "push                1      0      0     ",
      "03": "int                 1      -      0     # 1",
      "04": "push                1      0      0     ",
      "05": "int                 1      -      0     # 2",
      "06": "push                1      0      0     ",
      "07": "int                 1      -      0     # 3",
      "08": "push                1      0      0     ",
      "09": "int                 1      -      0     # 4",
      "10": "push                1      0      0     ",
      "11": "int                 1      -      0     # 5",
      "12": "push                1      0      0     ",
      "13": "int                 1      -      0     # 6",
      "14": "push                1      0      0     ",
      "15": "int                 1      -      0     # 7",
      "16": "push                1      0      0     ",
      "17": "int                 1      -      0     # 8",
      "18": "push                1      0      0     ",
      "19": "int                 1      -      0     # 9",
      "20": "push                1      0      0     ",
      "21": "int                 1      -      0     # 10",
      "22": "push                1      0      0     ",
      "23": "int                 1      -      0     # 11",
      "24": "push                1      0      0     ",
      "25": "int                 1      -      0     # 12",
      "26": "push                1      0      0     ",
      "27": "int                 1      -      0     # 13",
      "28": "push                1      0      0     ",
      "29": "int                 1      -      0     # 14",
      "30": "push                1      0      0     ",
      "31": "int                 1      -      0     # 15",
      "32": "push                1      0      0     ",
      "33": "int                 1      -      0     # 16",
      "34": "push                1      0      0     ",
      "35": "int                 1      -      0     # 17",
      "36": "push                1      0      0     ",
      "37": "int                 1      -      0     # 18",
      "38": "push                1      0      0     ",
      "39": "int                 1      -      0     # 19",
      "40": "push                1      0      0     ",
      "41": "array               1      20     0     ",
      "42": "cursor_open_expr    0      1      44    ",
      "43": "jmp                 49     0      0     ",
      "44": "cursor_read         2      0      0     ",
      "45": "cursor_read         3      0      0     ",
      "46": "push                3      0      0     ",
      "47": "set_add             0      2      0     ",
      "48": "cursor_next         0      44     0     ",
      "49": "cursor_close        0      0      0     ",
      "50": "set_sort            0      0      0     ",
      "51": "bool                1      0      0     ",
      "52": "push                1      0      0     ",
      "53": "int                 1      -      0     # 1",
      "54": "merge               2      0      1     ",
      "55": "cte_set             0      2      0     ",
      "56": "body                0      0      0     ",
      "57": "ret                 0      0      0     "
    }
  }
}]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * limit 1
[0]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * limit 2
[0, 1]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * limit 3
[0, 1, 2]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * limit 4
[0, 1, 2, 3]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * limit 10
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * limit 20
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
# test: select from expr order by limit 0
explain select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * limit 0
[{
  "bytecode": {
    "coordinator": {
      "00": "set_ordered         0      0      0     ",
      "01": "int                 1      -      0     # 0",
      "02": "push                1      0      0     ",
      "03": "int                 1      -      0     # 1",
      "04": "push                1      0      0     ",
      "05": "int                 1      -      0     # 2",
      "06": "push                1      0      0     ",
      "07": "int                 1      -      0     # 3",
      "08": "push                1      0      0     ",
      "09": "int                 1      -      0     # 4",
      "10": "push                1      0      0     ",
      "11": "int                 1      -      0     # 5",
      "12": "push                1      0      0     ",
      "13": "int                 1      -      0     # 6",
      "14": "push                1      0      0     ",
      "15": "int                 1      -      0     # 7",
      "16": "push                1      0      0     ",
      "17": "int                 1      -      0     # 8",
      "18": "push                1      0      0     ",
      "19": "int                 1      -      0     # 9",
      "20": "push                1      0      0     ",
      "21": "int                 1      -      0     # 10",
      "22": "push                1      0      0     ",
      "23": "int                 1      -      0     # 11",
      "24": "push                1      0      0     ",
      "25": "int                 1      -      0     # 12",
      "26": "push                1      0      0     ",
      "27": "int                 1      -      0     # 13",
      "28": "push                1      0      0     ",
      "29": "int                 1      -      0     # 14",
      "30": "push                1      0      0     ",
      "31": "int                 1      -      0     # 15",
      "32": "push                1      0      0     ",
      "33": "int                 1      -      0     # 16",
      "34": "push                1      0      0     ",
      "35": "int                 1      -      0     # 17",
      "36": "push                1      0      0     ",
      "37": "int                 1      -      0     # 18",
      "38": "push                1      0      0     ",
      "39": "int                 1      -      0     # 19",
      "40": "push                1      0      0     ",
      "41": "array               1      20     0     ",
      "42": "cursor_open_expr    0      1      44    ",
      "43": "jmp                 49     0      0     ",
      "44": "cursor_read         2      0      0     ",
      "45": "cursor_read         3      0      0     ",
      "46": "push                3      0      0     ",
      "47": "set_add             0      2      0     ",
      "48": "cursor_next         0      44     0     ",
      "49": "cursor_close        0      0      0     ",
      "50": "set_sort            0      0      0     ",
      "51": "bool                1      0      0     ",
      "52": "push                1      0      0     ",
      "53": "int                 1      -      0     # 0",
      "54": "merge               2      0      1     ",
      "55": "cte_set             0      2      0     ",
      "56": "body                0      0      0     ",
      "57": "ret                 0      0      0     "
    }
  }
}]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * limit 0
[]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * limit -1
{"msg": "LIMIT: positive integer value expected"}
# test: select from expr order by desc limit
explain select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * desc limit 1
[{
  "bytecode": {
    "coordinator": {
      "00": "set_ordered         0      0      0     ",
      "01": "int                 1      -      0     # 0",
      "02": "push                1      0      0     ",
      "03": "int                 1      -      0     # 1",
      "04": "push                1      0      0     ",
      "05": "int                 1      -      0     # 2",
      "06": "push                1      0      0     ",
      "07": "int                 1      -      0     # 3",
      "08": "push                1      0      0     ",
      "09": "int                 1      -      0     # 4",
      "10": "push                1      0      0     ",
      "11": "int                 1      -      0     # 5",
      "12": "push                1      0      0     ",
      "13": "int                 1      -      0     # 6",
      "14": "push                1      0      0     ",
      "15": "int                 1      -      0     # 7",
      "16": "push                1      0      0     ",
      "17": "int                 1      -      0     # 8",
      "18": "push                1      0      0     ",
      "19": "int                 1      -      0     # 9",
      "20": "push                1      0      0     ",
      "21": "int                 1      -      0     # 10",
      "22": "push                1      0      0     ",
      "23": "int                 1      -      0     # 11",
      "24": "push                1      0      0     ",
      "25": "int                 1      -      0     # 12",
      "26": "push                1      0      0     ",
      "27": "int                 1      -      0     # 13",
      "28": "push                1      0      0     ",
      "29": "int                 1      -      0     # 14",
      "30": "push                1      0      0     ",
      "31": "int                 1      -      0     # 15",
      "32": "push                1      0      0     ",
      "33": "int                 1      -      0     # 16",
      "34": "push                1      0      0     ",
      "35": "int                 1      -      0     # 17",
      "36": "push                1      0      0     ",
      "37": "int                 1      -      0     # 18",
      "38": "push                1      0      0     ",
      "39": "int                 1      -      0     # 19",
      "40": "push                1      0      0     ",
      "41": "array               1      20     0     ",
      "42": "cursor_open_expr    0      1      44    ",
      "43": "jmp                 49     0      0     ",
      "44": "cursor_read         2      0      0     ",
      "45": "cursor_read         3      0      0     ",
      "46": "push                3      0      0     ",
      "47": "set_add             0      2      0     ",
      "48": "cursor_next         0      44     0     ",
      "49": "cursor_close        0      0      0     ",
      "50": "set_sort            0      0      0     ",
      "51": "bool                1      0      0     ",
      "52": "push                1      0      0     ",
      "53": "int                 1      -      0     # 1",
      "54": "merge               2      0      1     ",
      "55": "cte_set             0      2      0     ",
      "56": "body                0      0      0     ",
      "57": "ret                 0      0      0     "
    }
  }
}]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * desc limit 1
[19]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * desc limit 2
[19, 18]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * desc limit 3
[19, 18, 17]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * desc limit 4
[19, 18, 17, 16]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * desc limit 10
[19, 18, 17, 16, 15, 14, 13, 12, 11, 10]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * desc limit 20
[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]
# test: select from expr order by limit offset
explain select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * limit 1 offset 0
[{
  "bytecode": {
    "coordinator": {
      "00": "set_ordered         0      0      0     ",
      "01": "int                 1      -      0     # 0",
      "02": "push                1      0      0     ",
      "03": "int                 1      -      0     # 1",
      "04": "push                1      0      0     ",
      "05": "int                 1      -      0     # 2",
      "06": "push                1      0      0     ",
      "07": "int                 1      -      0     # 3",
      "08": "push                1      0      0     ",
      "09": "int                 1      -      0     # 4",
      "10": "push                1      0      0     ",
      "11": "int                 1      -      0     # 5",
      "12": "push                1      0      0     ",
      "13": "int                 1      -      0     # 6",
      "14": "push                1      0      0     ",
      "15": "int                 1      -      0     # 7",
      "16": "push                1      0      0     ",
      "17": "int                 1      -      0     # 8",
      "18": "push                1      0      0     ",
      "19": "int                 1      -      0     # 9",
      "20": "push                1      0      0     ",
      "21": "int                 1      -      0     # 10",
      "22": "push                1      0      0     ",
      "23": "int                 1      -      0     # 11",
      "24": "push                1      0      0     ",
      "25": "int                 1      -      0     # 12",
      "26": "push                1      0      0     ",
      "27": "int                 1      -      0     # 13",
      "28": "push                1      0      0     ",
      "29": "int                 1      -      0     # 14",
      "30": "push                1      0      0     ",
      "31": "int                 1      -      0     # 15",
      "32": "push                1      0      0     ",
      "33": "int                 1      -      0     # 16",
      "34": "push                1      0      0     ",
      "35": "int                 1      -      0     # 17",
      "36": "push                1      0      0     ",
      "37": "int                 1      -      0     # 18",
      "38": "push                1      0      0     ",
      "39": "int                 1      -      0     # 19",
      "40": "push                1      0      0     ",
      "41": "array               1      20     0     ",
      "42": "cursor_open_expr    0      1      44    ",
      "43": "jmp                 49     0      0     ",
      "44": "cursor_read         2      0      0     ",
      "45": "cursor_read         3      0      0     ",
      "46": "push                3      0      0     ",
      "47": "set_add             0      2      0     ",
      "48": "cursor_next         0      44     0     ",
      "49": "cursor_close        0      0      0     ",
      "50": "set_sort            0      0      0     ",
      "51": "bool                1      0      0     ",
      "52": "push                1      0      0     ",
      "53": "int                 1      -      0     # 1",
      "54": "int                 2      -      0     # 0",
      "55": "merge               3      0      1     ",
      "56": "cte_set             0      3      0     ",
      "57": "body                0      0      0     ",
      "58": "ret                 0      0      0     "
    }
  }
}]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * limit 1 offset 0
[0]
# test: select from expr order by limit offset #2
explain select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * limit 1 offset 1
[{
  "bytecode": {
    "coordinator": {
      "00": "set_ordered         0      0      0     ",
      "01": "int                 1      -      0     # 0",
      "02": "push                1      0      0     ",
      "03": "int                 1      -      0     # 1",
      "04": "push                1      0      0     ",
      "05": "int                 1      -      0     # 2",
      "06": "push                1      0      0     ",
      "07": "int                 1      -      0     # 3",
      "08": "push                1      0      0     ",
      "09": "int                 1      -      0     # 4",
      "10": "push                1      0      0     ",
      "11": "int                 1      -      0     # 5",
      "12": "push                1      0      0     ",
      "13": "int                 1      -      0     # 6",
      "14": "push                1      0      0     ",
      "15": "int                 1      -      0     # 7",
      "16": "push                1      0      0     ",
      "17": "int                 1      -      0     # 8",
      "18": "push                1      0      0     ",
      "19": "int                 1      -      0     # 9",
      "20": "push                1      0      0     ",
      "21": "int                 1      -      0     # 10",
      "22": "push                1      0      0     ",
      "23": "int                 1      -      0     # 11",
      "24": "push                1      0      0     ",
      "25": "int                 1      -      0     # 12",
      "26": "push                1      0      0     ",
      "27": "int                 1      -      0     # 13",
      "28": "push                1      0      0     ",
      "29": "int                 1      -      0     # 14",
      "30": "push                1      0      0     ",
      "31": "int                 1      -      0     # 15",
      "32": "push                1      0      0     ",
      "33": "int                 1      -      0     # 16",
      "34": "push                1      0      0     ",
      "35": "int                 1      -      0     # 17",
      "36": "push                1      0      0     ",
      "37": "int                 1      -      0     # 18",
      "38": "push                1      0      0     ",
      "39": "int                 1      -      0     # 19",
      "40": "push                1      0      0     ",
      "41": "array               1      20     0     ",
      "42": "cursor_open_expr    0      1      44    ",
      "43": "jmp                 49     0      0     ",
      "44": "cursor_read         2      0      0     ",
      "45": "cursor_read         3      0      0     ",
      "46": "push                3      0      0     ",
      "47": "set_add             0      2      0     ",
      "48": "cursor_next         0      44     0     ",
      "49": "cursor_close        0      0      0     ",
      "50": "set_sort            0      0      0     ",
      "51": "bool                1      0      0     ",
      "52": "push                1      0      0     ",
      "53": "int                 1      -      0     # 1",
      "54": "int                 2      -      0     # 1",
      "55": "merge               3      0      1     ",
      "56": "cte_set             0      3      0     ",
      "57": "body                0      0      0     ",
      "58": "ret                 0      0      0     "
    }
  }
}]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * limit 1 offset 1
[1]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * limit 1 offset 2
[2]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * limit 1 offset 3
[3]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * limit 1 offset 4
[4]
# test: select from expr order by desc limit offset
explain select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * desc limit 1 offset 1
[{
  "bytecode": {
    "coordinator": {
      "00": "set_ordered         0      0      0     ",
      "01": "int                 1      -      0     # 0",
      "02": "push                1      0      0     ",
      "03": "int                 1      -      0     # 1",
      "04": "push                1      0      0     ",
      "05": "int                 1      -      0     # 2",
      "06": "push                1      0      0     ",
      "07": "int                 1      -      0     # 3",
      "08": "push                1      0      0     ",
      "09": "int                 1      -      0     # 4",
      "10": "push                1      0      0     ",
      "11": "int                 1      -      0     # 5",
      "12": "push                1      0      0     ",
      "13": "int                 1      -      0     # 6",
      "14": "push                1      0      0     ",
      "15": "int                 1      -      0     # 7",
      "16": "push                1      0      0     ",
      "17": "int                 1      -      0     # 8",
      "18": "push                1      0      0     ",
      "19": "int                 1      -      0     # 9",
      "20": "push                1      0      0     ",
      "21": "int                 1      -      0     # 10",
      "22": "push                1      0      0     ",
      "23": "int                 1      -      0     # 11",
      "24": "push                1      0      0     ",
      "25": "int                 1      -      0     # 12",
      "26": "push                1      0      0     ",
      "27": "int                 1      -      0     # 13",
      "28": "push                1      0      0     ",
      "29": "int                 1      -      0     # 14",
      "30": "push                1      0      0     ",
      "31": "int                 1      -      0     # 15",
      "32": "push                1      0      0     ",
      "33": "int                 1      -      0     # 16",
      "34": "push                1      0      0     ",
      "35": "int                 1      -      0     # 17",
      "36": "push                1      0      0     ",
      "37": "int                 1      -      0     # 18",
      "38": "push                1      0      0     ",
      "39": "int                 1      -      0     # 19",
      "40": "push                1      0      0     ",
      "41": "array               1      20     0     ",
      "42": "cursor_open_expr    0      1      44    ",
      "43": "jmp                 49     0      0     ",
      "44": "cursor_read         2      0      0     ",
      "45": "cursor_read         3      0      0     ",
      "46": "push                3      0      0     ",
      "47": "set_add             0      2      0     ",
      "48": "cursor_next         0      44     0     ",
      "49": "cursor_close        0      0      0     ",
      "50": "set_sort            0      0      0     ",
      "51": "bool                1      0      0     ",
      "52": "push                1      0      0     ",
      "53": "int                 1      -      0     # 1",
      "54": "int                 2      -      0     # 1",
      "55": "merge               3      0      1     ",
      "56": "cte_set             0      3      0     ",
      "57": "body                0      0      0     ",
      "58": "ret                 0      0      0     "
    }
  }
}]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * desc limit 1 offset 0
[19]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * desc limit 1 offset 1
[18]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * desc limit 1 offset 2
[17]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * desc limit 1 offset 3
[16]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * desc limit 1 offset 4
[15]
# test: select from expr order by offset
explain select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * offset 1
[{
  "bytecode": {
    "coordinator": {
      "00": "set_ordered         0      0      0     ",
      "01": "int                 1      -      0     # 0",
      "02": "push                1      0      0     ",
      "03": "int                 1      -      0     # 1",
      "04": "push                1      0      0     ",
      "05": "int                 1      -      0     # 2",
      "06": "push                1      0      0     ",
      "07": "int                 1      -      0     # 3",
      "08": "push                1      0      0     ",
      "09": "int                 1      -      0     # 4",
      "10": "push                1      0      0     ",
      "11": "int                 1      -      0     # 5",
      "12": "push                1      0      0     ",
      "13": "int                 1      -      0     # 6",
      "14": "push                1      0      0     ",
      "15": "int                 1      -      0     # 7",
      "16": "push                1      0      0     ",
      "17": "int                 1      -      0     # 8",
      "18": "push                1      0      0     ",
      "19": "int                 1      -      0     # 9",
      "20": "push                1      0      0     ",
      "21": "int                 1      -      0     # 10",
      "22": "push                1      0      0     ",
      "23": "int                 1      -      0     # 11",
      "24": "push                1      0      0     ",
      "25": "int                 1      -      0     # 12",
      "26": "push                1      0      0     ",
      "27": "int                 1      -      0     # 13",
      "28": "push                1      0      0     ",
      "29": "int                 1      -      0     # 14",
      "30": "push                1      0      0     ",
      "31": "int                 1      -      0     # 15",
      "32": "push                1      0      0     ",
      "33": "int                 1      -      0     # 16",
      "34": "push                1      0      0     ",
      "35": "int                 1      -      0     # 17",
      "36": "push                1      0      0     ",
      "37": "int                 1      -      0     # 18",
      "38": "push                1      0      0     ",
      "39": "int                 1      -      0     # 19",
      "40": "push                1      0      0     ",
      "41": "array               1      20     0     ",
      "42": "cursor_open_expr    0      1      44    ",
      "43": "jmp                 49     0      0     ",
      "44": "cursor_read         2      0      0     ",
      "45": "cursor_read         3      0      0     ",
      "46": "push                3      0      0     ",
      "47": "set_add             0      2      0     ",
      "48": "cursor_next         0      44     0     ",
      "49": "cursor_close        0      0      0     ",
      "50": "set_sort            0      0      0     ",
      "51": "bool                1      0      0     ",
      "52": "push                1      0      0     ",
      "53": "int                 1      -      0     # 1",
      "54": "merge               2      0      -1    ",
      "55": "cte_set             0      2      0     ",
      "56": "body                0      0      0     ",
      "57": "ret                 0      0      0     "
    }
  }
}]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * offset 1
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * offset 2
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * offset 3
[3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * offset 4
[4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * offset 0
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * offset -1
{"msg": "OFFSET: positive integer value expected"}
# test: select from expr order by desc offset
explain select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * desc offset 1
[{
  "bytecode": {
    "coordinator": {
      "00": "set_ordered         0      0      0     ",
      "01": "int                 1      -      0     # 0",
      "02": "push                1      0      0     ",
      "03": "int                 1      -      0     # 1",
      "04": "push                1      0      0     ",
      "05": "int                 1      -      0     # 2",
      "06": "push                1      0      0     ",
      "07": "int                 1      -      0     # 3",
      "08": "push                1      0      0     ",
      "09": "int                 1      -      0     # 4",
      "10": "push                1      0      0     ",
      "11": "int                 1      -      0     # 5",
      "12": "push                1      0      0     ",
      "13": "int                 1      -      0     # 6",
      "14": "push                1      0      0     ",
      "15": "int                 1      -      0     # 7",
      "16": "push                1      0      0     ",
      "17": "int                 1      -      0     # 8",
      "18": "push                1      0      0     ",
      "19": "int                 1      -      0     # 9",
      "20": "push                1      0      0     ",
      "21": "int                 1      -      0     # 10",
      "22": "push                1      0      0     ",
      "23": "int                 1      -      0     # 11",
      "24": "push                1      0      0     ",
      "25": "int                 1      -      0     # 12",
      "26": "push                1      0      0     ",
      "27": "int                 1      -      0     # 13",
      "28": "push                1      0      0     ",
      "29": "int                 1      -      0     # 14",
      "30": "push                1      0      0     ",
      "31": "int                 1      -      0     # 15",
      "32": "push                1      0      0     ",
      "33": "int                 1      -      0     # 16",
      "34": "push                1      0      0     ",
      "35": "int                 1      -      0     # 17",
      "36": "push                1      0      0     ",
      "37": "int                 1      -      0     # 18",
      "38": "push                1      0      0     ",
      "39": "int                 1      -      0     # 19",
      "40": "push                1      0      0     ",
      "41": "array               1      20     0     ",
      "42": "cursor_open_expr    0      1      44    ",
      "43": "jmp                 49     0      0     ",
      "44": "cursor_read         2      0      0     ",
      "45": "cursor_read         3      0      0     ",
      "46": "push                3      0      0     ",
      "47": "set_add             0      2      0     ",
      "48": "cursor_next         0      44     0     ",
      "49": "cursor_close        0      0      0     ",
      "50": "set_sort            0      0      0     ",
      "51": "bool                1      0      0     ",
      "52": "push                1      0      0     ",
      "53": "int                 1      -      0     # 1",
      "54": "merge               2      0      -1    ",
      "55": "cte_set             0      2      0     ",
      "56": "body                0      0      0     ",
      "57": "ret                 0      0      0     "
    }
  }
}]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * desc offset 1
[18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * desc offset 2
[17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * desc offset 3
[16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * desc offset 4
[15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * desc offset 0
[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] order by * desc offset -1
{"msg": "OFFSET: positive integer value expected"}
disconnect S0
close E0
