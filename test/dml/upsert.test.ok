open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3485 }]
connect E0 S0 localhost:3485
# test: on conflict parsing
create table test (id int primary key, data int)
[]
insert into test values(1, 0) 123
{"code": 1, "msg": "unknown command"}
insert into test values(1, 0) ON
{"code": 1, "msg": "INSERT VALUES ON <CONFLICT> expected"}
insert into test values(1, 0) ON 123
{"code": 1, "msg": "INSERT VALUES ON <CONFLICT> expected"}
insert into test values(1, 0) on conflict
{"code": 1, "msg": "INSERT VALUES ON CONFLICT <DO> expected"}
insert into test values(1, 0) on conflict 123
{"code": 1, "msg": "INSERT VALUES ON CONFLICT <DO> expected"}
insert into test values(1, 0) on conflict do
{"code": 1, "msg": "INSERT VALUES ON CONFLICT DO <NOTHING | UPDATE> expected"}
insert into test values(1, 0) on conflict do 123
{"code": 1, "msg": "INSERT VALUES ON CONFLICT DO <NOTHING | UPDATE> expected"}
insert into test values(1, 0) on conflict do update
{"code": 1, "msg": "UPDATE <SET> expected"}
insert into test values(1, 0) on conflict do update set
{"code": 1, "msg": "UPDATE name SET <path> expected"}
insert into test values(1, 0) on conflict do update set 123
{"code": 1, "msg": "UPDATE name SET <path> expected"}
insert into test values(1, 0) on conflict do update set path
{"code": 1, "msg": "UPDATE name SET path <=> expected"}
insert into test values(1, 0) on conflict do update set path =
{"code": 1, "msg": "bad expression"}
drop table test
[]
# test: on conflict do nothing
create table test (id int primary key, data int)
[]
explain insert into test values(1, 0) on conflict do nothing
"
bytecode [coordinator]
--------
 0                send        0      0      -      # public.test
 1                recv        0      0      0
 2               array        0      0      0
 3             cte_set        0      0      0
 4                body        0      0      0
 5                 ret        0      0      0


bytecode [node]
--------
 0      cursor_prepare        0      -      0      # public.test
 1                 jmp        2      0      0
 2              upsert        0      2     -1
 3        cursor_close        0      0      0
 4                 ret        0      0      0

"
insert into test values(1, 0) on conflict do nothing
[]
insert into test values(1, 0) on conflict do nothing
[]
insert into test values(1, 0) on conflict do nothing
[]
explain insert into test values(1, 0), (2, 0), (1, 0) on conflict do nothing
"
bytecode [coordinator]
--------
 0                send        0      0      -      # public.test
 1                recv        0      0      0
 2               array        0      0      0
 3             cte_set        0      0      0
 4                body        0      0      0
 5                 ret        0      0      0


bytecode [node]
--------
 0      cursor_prepare        0      -      0      # public.test
 1                 jmp        2      0      0
 2              upsert        0      2     -1
 3        cursor_close        0      0      0
 4                 ret        0      0      0

"
insert into test values(1, 0), (2, 0), (1, 0) on conflict do nothing
[]
select * from test
[[1, 0], [2, 0]]
drop table test
[]
# test: upsert insert
create table test (id int primary key, data int)
[]
explain insert into test values(1, 0) on conflict do update set data = data + 1
"
bytecode [coordinator]
--------
 0                send        0      0      -      # public.test
 1                recv        0      0      0
 2               array        0      0      0
 3             cte_set        0      0      0
 4                body        0      0      0
 5                 ret        0      0      0


bytecode [node]
--------
 0      cursor_prepare        0      -      0      # public.test
 1                 jmp       13      0      0
 2         cursor_read        0      0      0
 3                push        0      0      0
 4                null        0      0      0
 5                push        0      0      0
 6          cursor_idx        0      0      1
 7                 int        1      1      0
 8                 add        2      0      1
 9                push        2      0      0
10              assign        0      3      1
11                push        0      0      0
12              update        0      0      0
13              upsert        0      2     -1
14        cursor_close        0      0      0
15                 ret        0      0      0

"
insert into test values(1, 0) on conflict do update set data = data + 1
[]
select * from test
[[1, 0]]
drop table test
[]
# test: upsert
create table test (id int primary key, data int)
[]
insert into test values(1, 0) on conflict do update set data = data + 1
[]
select * from test
[[1, 0]]
insert into test values(1, 0) on conflict do update set data = data + 1
[]
select * from test
[[1, 1]]
insert into test values(1, 0) on conflict do update set data = data + 1
[]
select * from test
[[1, 2]]
drop table test
[]
# test: upsert batch
create table test (id int primary key, data int)
[]
explain insert into test values (1, 0), (1, 0), (1, 0) on conflict do update set data = data + 1
"
bytecode [coordinator]
--------
 0                send        0      0      -      # public.test
 1                recv        0      0      0
 2               array        0      0      0
 3             cte_set        0      0      0
 4                body        0      0      0
 5                 ret        0      0      0


bytecode [node]
--------
 0      cursor_prepare        0      -      0      # public.test
 1                 jmp       13      0      0
 2         cursor_read        0      0      0
 3                push        0      0      0
 4                null        0      0      0
 5                push        0      0      0
 6          cursor_idx        0      0      1
 7                 int        1      1      0
 8                 add        2      0      1
 9                push        2      0      0
10              assign        0      3      1
11                push        0      0      0
12              update        0      0      0
13              upsert        0      2     -1
14        cursor_close        0      0      0
15                 ret        0      0      0

"
insert into test values (1, 0), (1, 0), (1, 0) on conflict do update set data = data + 1
[]
insert into test values (1, 0), (1, 0), (1, 0) on conflict do update set data = data + 1
[]
insert into test values (1, 0), (1, 0), (1, 0) on conflict do update set data = data + 1
[]
select * from test
[[1, 8]]
drop table test
[]
# test: upsert where
create table test (id int primary key, data int)
[]
insert into test values (1, 0) on conflict do update set data = data + 1
[]
insert into test values (1, 0) on conflict do update set data = data + 1
[]
insert into test values (1, 0) on conflict do update set data = data + 1
[]
select * from test
[[1, 2]]
explain insert into test values (1, 0) on conflict do update set data = data + 1 where true
"
bytecode [coordinator]
--------
 0                send        0      0      -      # public.test
 1                recv        0      0      0
 2               array        0      0      0
 3             cte_set        0      0      0
 4                body        0      0      0
 5                 ret        0      0      0


bytecode [node]
--------
 0      cursor_prepare        0      -      0      # public.test
 1                 jmp       15      0      0
 2                bool        0      1      0
 3                jntr       15      0      0
 4         cursor_read        0      0      0
 5                push        0      0      0
 6                null        0      0      0
 7                push        0      0      0
 8          cursor_idx        0      0      1
 9                 int        1      1      0
10                 add        2      0      1
11                push        2      0      0
12              assign        0      3      1
13                push        0      0      0
14              update        0      0      0
15              upsert        0      2     -1
16        cursor_close        0      0      0
17                 ret        0      0      0

"
insert into test values (1, 0) on conflict do update set data = data + 1 where true
[]
select * from test
[[1, 3]]
insert into test values (1, 0) on conflict do update set data = data + 1 where data < 3
[]
select * from test
[[1, 3]]
insert into test values (1, 0) on conflict do update set data = data + 1 where data <= 3
[]
select * from test
[[1, 4]]
drop table test
[]
# test: upsert row access
create table test (id int primary key, data int)
[]
insert into test values (1, 0) on conflict do update set data = data + 1
[]
explain insert into test values (1, 123) on conflict do update set data = data + @[1]
"
bytecode [coordinator]
--------
 0                send        0      0      -      # public.test
 1                recv        0      0      0
 2               array        0      0      0
 3             cte_set        0      0      0
 4                body        0      0      0
 5                 ret        0      0      0


bytecode [node]
--------
 0      cursor_prepare        0      -      0      # public.test
 1                 jmp       15      0      0
 2         cursor_read        0      0      0
 3                push        0      0      0
 4                null        0      0      0
 5                push        0      0      0
 6          cursor_idx        0      0      1
 7                 ref        1      0      0
 8                 int        2      1      0
 9                 idx        3      1      2
10                 add        1      0      3
11                push        1      0      0
12              assign        0      3      1
13                push        0      0      0
14              update        0      0      0
15              upsert        0      2     -1
16        cursor_close        0      0      0
17                 ret        0      0      0

"
insert into test values (1, 123) on conflict do update set data = data + @[1]
[]
select * from test
[[1, 123]]
select *[1] from test
[123]
drop table test
[]
# test: upsert row access #2
create table test (id int primary key, data int)
[]
insert into test values (1, 0) on conflict do update set data = data + 1
[]
select @ from test
{"code": 1, "msg": "@: reference is not defined"}
drop table test
[]
# test: upsert error
create table test (id int primary key, data int)
[]
insert into test values (1, 0), (2, 0), (3, null) on conflict do update set data = data + 1
[]
select * from test
[[1, 0], [2, 0], [3, null]]
insert into test values (1, 0), (2, 0), (3, 0) on conflict do update set data = data + 1
{"code": 1, "msg": "bad + expression types"}
select * from test
[[1, 0], [2, 0], [3, null]]
drop table test
[]
# test: upsert generate
create table test (id int primary key serial, data int default 0)
[]
insert into test generate 10 on conflict do update set data = data + 1
[]
select * from test
[[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0], [9, 0]]
alter table test set serial to 0
[]
insert into test generate 10 on conflict do update set data = data + 1
[]
select * from test
[[0, 1], [1, 1], [2, 1], [3, 1], [4, 1], [5, 1], [6, 1], [7, 1], [8, 1], [9, 1]]
drop table test
[]
# test: upsert secondary index
create table test (id int primary key, data int, value int)
[]
create index i on test (data)
[]
insert into test values (0, 2, 0)
[]
insert into test values (1, 1, 0)
[]
insert into test values (2, 0, 0)
[]
select * from test
[[0, 2, 0], [1, 1, 0], [2, 0, 0]]
select * from test use index (i)
[[2, 0, 0], [1, 1, 0], [0, 2, 0]]
insert into test values (0, 2, 0) on conflict do update set value = value + 1
[]
select * from test
[[0, 2, 1], [1, 1, 0], [2, 0, 0]]
select * from test use index (i)
[[2, 0, 0], [1, 1, 0], [0, 2, 1]]
insert into test values (3, 2, 0) on conflict do update set value = 10
[]
select * from test
[[0, 2, 1], [1, 1, 0], [2, 0, 0], [3, 2, 0]]
select * from test use index (i)
[[2, 0, 0], [1, 1, 0], [0, 2, 1], [3, 2, 0]]
drop table test
[]
# test: upsert secondary index (object)
create table test (obj object, primary key (obj.id int))
[]
create index i on test (obj.data int)
[]
insert into test {"id": 0, "data": 2}
[]
insert into test {"id": 1, "data": 1}
[]
insert into test {"id": 2, "data": 0}
[]
insert into test {"id": 2, "data": 0} on conflict do update set obj.value = obj.id
[]
insert into test {"id": 3, "data": 0} on conflict do update set obj.value = obj.id
[]
select * from test
[[{
  "id": 0,
  "data": 2
}], [{
  "id": 1,
  "data": 1
}], [{
  "id": 2,
  "data": 0,
  "value": 2
}], [{
  "id": 3,
  "data": 0
}]]
select * from test use index (i)
[[{
  "id": 2,
  "data": 0,
  "value": 2
}], [{
  "id": 3,
  "data": 0
}], [{
  "id": 1,
  "data": 1
}], [{
  "id": 0,
  "data": 2
}]]
drop table test
[]
# test: upsert returning
create table test (id int primary key, data int)
[]
insert into test values (1, 0)
[]
explain insert into test values(1, 0) on conflict do update set data = data + 1 returning *
"
bytecode [coordinator]
--------
 0                send        0      0      -      # public.test
 1                recv        0      0      0
 2                bool        0      0      0
 3                push        0      0      0
 4          merge_recv        0     -1     -1
 5             cte_set        0      0      0
 6                body        0      0      0
 7                 ret        0      0      0


bytecode [node]
--------
 0                 set        0      0      0
 1      cursor_prepare        0      -      0      # public.test
 2                 jmp       16      0      0
 3         cursor_read        1      0      0
 4                push        1      0      0
 5                null        1      0      0
 6                push        1      0      0
 7          cursor_idx        1      0      1
 8                 int        2      1      0
 9                 add        3      1      2
10                push        3      0      0
11              assign        1      3      1
12                push        1      0      0
13              update        0      0      0
14         cursor_read        1      0      0
15             set_add        0      1      0
16              upsert        0      3     14
17        cursor_close        0      0      0
18              result        0      0      0
19                 ret        0      0      0

"
insert into test values(1, 0) on conflict do update set data = data + 1 returning *
[[1, 1]]
insert into test values(1, 0) on conflict do update set data = data + 1 returning *
[[1, 2]]
insert into test values(1, 0) on conflict do update set data = data + 1 returning *
[[1, 3]]
select * from test
[[1, 3]]
drop table test
[]
# test: upsert returning (do nothing)
create table test (id int primary key, data int)
[]
insert into test values (1, 0)
[]
explain insert into test values(1, 0) on conflict do nothing returning *
"
bytecode [coordinator]
--------
 0                send        0      0      -      # public.test
 1                recv        0      0      0
 2                bool        0      0      0
 3                push        0      0      0
 4          merge_recv        0     -1     -1
 5             cte_set        0      0      0
 6                body        0      0      0
 7                 ret        0      0      0


bytecode [node]
--------
 0                 set        0      0      0
 1      cursor_prepare        0      -      0      # public.test
 2                 jmp        5      0      0
 3         cursor_read        1      0      0
 4             set_add        0      1      0
 5              upsert        0      3      3
 6        cursor_close        0      0      0
 7              result        0      0      0
 8                 ret        0      0      0

"
insert into test values(1, 0) on conflict do nothing returning *
[[1, 0]]
insert into test values(1, 0) on conflict do nothing returning *
[[1, 0]]
insert into test values(1, 0) on conflict do nothing returning *
[[1, 0]]
select * from test
[[1, 0]]
drop table test
[]
# test: upsert returning (first row)
create table test (id int primary key, data int)
[]
explain insert into test values(1, 0) on conflict do update set data = data + 1 returning *
"
bytecode [coordinator]
--------
 0                send        0      0      -      # public.test
 1                recv        0      0      0
 2                bool        0      0      0
 3                push        0      0      0
 4          merge_recv        0     -1     -1
 5             cte_set        0      0      0
 6                body        0      0      0
 7                 ret        0      0      0


bytecode [node]
--------
 0                 set        0      0      0
 1      cursor_prepare        0      -      0      # public.test
 2                 jmp       16      0      0
 3         cursor_read        1      0      0
 4                push        1      0      0
 5                null        1      0      0
 6                push        1      0      0
 7          cursor_idx        1      0      1
 8                 int        2      1      0
 9                 add        3      1      2
10                push        3      0      0
11              assign        1      3      1
12                push        1      0      0
13              update        0      0      0
14         cursor_read        1      0      0
15             set_add        0      1      0
16              upsert        0      3     14
17        cursor_close        0      0      0
18              result        0      0      0
19                 ret        0      0      0

"
insert into test values(1, 0) on conflict do update set data = data + 1 returning *
[[1, 0]]
insert into test values(1, 0) on conflict do update set data = data + 1 returning *
[[1, 1]]
insert into test values(1, 0) on conflict do update set data = data + 1 returning *
[[1, 2]]
select * from test
[[1, 2]]
drop table test
[]
# test: upsert returning (do nothing, first row)
create table test (id int primary key, data int)
[]
explain insert into test values(1, 0) on conflict do nothing returning *
"
bytecode [coordinator]
--------
 0                send        0      0      -      # public.test
 1                recv        0      0      0
 2                bool        0      0      0
 3                push        0      0      0
 4          merge_recv        0     -1     -1
 5             cte_set        0      0      0
 6                body        0      0      0
 7                 ret        0      0      0


bytecode [node]
--------
 0                 set        0      0      0
 1      cursor_prepare        0      -      0      # public.test
 2                 jmp        5      0      0
 3         cursor_read        1      0      0
 4             set_add        0      1      0
 5              upsert        0      3      3
 6        cursor_close        0      0      0
 7              result        0      0      0
 8                 ret        0      0      0

"
insert into test values(1, 0) on conflict do nothing returning *
[[1, 0]]
insert into test values(1, 0) on conflict do nothing returning *
[[1, 0]]
select * from test
[[1, 0]]
drop table test
[]
disconnect S0
close E0
