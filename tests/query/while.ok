open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3485 }];
connect E0 S0 127.0.0.1:3485;
# test: while parsing
while end;
{"msg": "while ❰end❱ ⟵ bad expression"}
while 1 end;
{"msg": "while 1 ❰end❱ ⟵ DO expected"}
while do end;
{"msg": "while ❰do❱ ⟵ bad expression"}
# test: while
explain begin
	declare i int := 0;
	while i < 3 do
		i := i + 1;
	end;
	select i;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "int                 0      -      0     # 0",
    "02": "var_set             0      0      0     ",
    "03": "free                0      0      0     ",
    "04": "jmp                 6      0      0     ",
    "05": "jmp                 16     0      0     ",
    "06": "var                 0      0      0     ",
    "07": "int                 1      -      0     # 3",
    "08": "ltii                2      0      1     ",
    "09": "jntr                5      2      0     ",
    "10": "var                 0      0      0     ",
    "11": "int                 1      -      0     # 1",
    "12": "addii               2      0      1     ",
    "13": "var_set             0      0      2     ",
    "14": "free                2      0      0     ",
    "15": "jmp                 4      0      0     ",
    "16": "var                 0      0      0     ",
    "17": "ret                 0      0      -     "
  },
  "access": []
}]
begin
	declare i int := 0;
	while i < 3 do
		i := i + 1;
	end;
	select i;
end;
[3]
# test: while while
explain begin
	declare i int := 0;
	declare j int := 0;
	declare n int := 0;
	while i < 3 do
		j := 0;
		while j < 3 do
			j := j + 1;
			n := n + 1;
		end;
		i := i + 1;
	end;
	select i, j, n;
end;
[{
  "main": {
    "00": "push_nulls          3      0      0     ",
    "01": "int                 0      -      0     # 0",
    "02": "var_set             0      0      0     ",
    "03": "free                0      0      0     ",
    "04": "int                 0      -      0     # 0",
    "05": "var_set             1      0      0     ",
    "06": "free                0      0      0     ",
    "07": "int                 0      -      0     # 0",
    "08": "var_set             2      0      0     ",
    "09": "free                0      0      0     ",
    "10": "jmp                 12     0      0     ",
    "11": "jmp                 42     0      0     ",
    "12": "var                 0      0      0     ",
    "13": "int                 1      -      0     # 3",
    "14": "ltii                2      0      1     ",
    "15": "jntr                11     2      0     ",
    "16": "int                 0      -      0     # 0",
    "17": "var_set             1      0      0     ",
    "18": "free                0      0      0     ",
    "19": "jmp                 21     0      0     ",
    "20": "jmp                 36     0      0     ",
    "21": "var                 0      1      0     ",
    "22": "int                 1      -      0     # 3",
    "23": "ltii                2      0      1     ",
    "24": "jntr                20     2      0     ",
    "25": "var                 0      1      0     ",
    "26": "int                 1      -      0     # 1",
    "27": "addii               2      0      1     ",
    "28": "var_set             1      0      2     ",
    "29": "free                2      0      0     ",
    "30": "var                 0      2      0     ",
    "31": "int                 1      -      0     # 1",
    "32": "addii               2      0      1     ",
    "33": "var_set             2      0      2     ",
    "34": "free                2      0      0     ",
    "35": "jmp                 19     0      0     ",
    "36": "var                 0      0      0     ",
    "37": "int                 1      -      0     # 1",
    "38": "addii               2      0      1     ",
    "39": "var_set             0      0      2     ",
    "40": "free                2      0      0     ",
    "41": "jmp                 10     0      0     ",
    "42": "set                 0      3      0     ",
    "43": "var                 1      0      0     ",
    "44": "push                1      0      0     ",
    "45": "var                 1      1      0     ",
    "46": "push                1      0      0     ",
    "47": "var                 1      2      0     ",
    "48": "push                1      0      0     ",
    "49": "set_add             0      0      0     ",
    "50": "ret                 0      0      -     "
  },
  "access": []
}]
begin
	declare i int := 0;
	declare j int := 0;
	declare n int := 0;
	while i < 3 do
		j := 0;
		while j < 3 do
			j := j + 1;
			n := n + 1;
		end;
		i := i + 1;
	end;
	select i, j, n;
end;
[[3, 3, 9]]
# test: while if
begin
	declare i int := 0;
	declare n int := 0;
	while i < 4 do
		if i % 2 = 0 then
			n := n + 1;
		end;
		i := i + 1;
	end;
	select n;
end;
[2]
# test: while var
create table test (id int primary key);
insert into test values (4);
explain begin
	declare i int := 0;
	declare x int := 0;
	declare n int := 0;
	select id into x from test;
	while i < x do
		if i % 2 = 0 then
			n := n + 1;
		end;
		i := i + 1;
	end;
	select n, x;
end;
[{
  "main": {
    "00": "push_nulls          3      0      0     ",
    "01": "int                 0      -      0     # 0",
    "02": "var_set             0      0      0     ",
    "03": "free                0      0      0     ",
    "04": "int                 0      -      0     # 0",
    "05": "var_set             1      0      0     ",
    "06": "free                0      0      0     ",
    "07": "int                 0      -      0     # 0",
    "08": "var_set             2      0      0     ",
    "09": "free                0      0      0     ",
    "10": "union               0      0      0     ",
    "11": "send_all            0      -      0     # public.test (last)",
    "12": "union_recv          0      0      0     ",
    "13": "union_set           0      0      -1    ",
    "14": "var_set             1      0      0     ",
    "15": "free                0      0      0     ",
    "16": "jmp                 18     0      0     ",
    "17": "jmp                 42     0      0     ",
    "18": "var                 0      0      0     ",
    "19": "var                 1      1      0     ",
    "20": "ltii                2      0      1     ",
    "21": "jntr                17     2      0     ",
    "22": "jmp                 24     0      0     ",
    "23": "jmp                 36     0      0     ",
    "24": "var                 0      0      0     ",
    "25": "int                 1      -      0     # 2",
    "26": "modii               2      0      1     ",
    "27": "int                 0      -      0     # 0",
    "28": "equii               1      2      0     ",
    "29": "jntr                36     1      0     ",
    "30": "var                 0      2      0     ",
    "31": "int                 1      -      0     # 1",
    "32": "addii               2      0      1     ",
    "33": "var_set             2      0      2     ",
    "34": "free                2      0      0     ",
    "35": "jmp                 23     0      0     ",
    "36": "var                 0      0      0     ",
    "37": "int                 1      -      0     # 1",
    "38": "addii               2      0      1     ",
    "39": "var_set             0      0      2     ",
    "40": "free                2      0      0     ",
    "41": "jmp                 16     0      0     ",
    "42": "set                 0      2      0     ",
    "43": "var                 1      2      0     ",
    "44": "push                1      0      0     ",
    "45": "var                 1      1      0     ",
    "46": "push                1      0      0     ",
    "47": "set_add             0      0      0     ",
    "48": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare i int := 0;
	declare x int := 0;
	declare n int := 0;
	select id into x from test;
	while i < x do
		if i % 2 = 0 then
			n := n + 1;
		end;
		i := i + 1;
	end;
	select n, x;
end;
[[2, 4]]
# test: while select
while select 123 do end;
{"msg": "while ❰select❱ ⟵ unexpected subquery"}
# test: while do insert
begin
	declare i int := 0;
	declare x int := 0;
	select max(id) into x from test;
	while i < x do
		insert into test values (i);
		i := i + 1;
	end;
	select x;
end;
[4]
select * from test;
[0, 1, 2, 3, 4]
# test: while do insert returning
explain begin
	declare i int := 0;
	select max(id) into i from test;

	i := i + 1;
	declare x int := i + 10;
	while i < x do
		insert into test values (i) returning *;
		i := i + 1;
	end;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          2      0      0     ",
    "01": "int                 0      -      0     # 0",
    "02": "var_set             0      0      0     ",
    "03": "free                0      0      0     ",
    "04": "union               0      0      0     ",
    "05": "send_all            0      -      0     # public.test",
    "06": "union_recv          0      0      0     ",
    "07": "union_set           0      1      -1    ",
    "08": "union_set_aggs      0      21     0     ",
    "09": "set                 1      1      0     ",
    "10": "store_open          2      0      15    ",
    "11": "agg                 3      2      0     ",
    "12": "push                3      0      0     ",
    "13": "set_add             1      0      0     ",
    "14": "store_next          2      11     0     ",
    "15": "free                2      0      0     ",
    "16": "free                0      0      0     ",
    "17": "var_set             0      0      1     ",
    "18": "free                1      0      0     ",
    "19": "var                 0      0      0     ",
    "20": "int                 1      -      0     # 1",
    "21": "addii               2      0      1     ",
    "22": "var_set             0      0      2     ",
    "23": "free                2      0      0     ",
    "24": "var                 0      0      0     ",
    "25": "int                 1      -      0     # 10",
    "26": "addii               2      0      1     ",
    "27": "var_set             1      0      2     ",
    "28": "free                2      0      0     ",
    "29": "jmp                 31     0      0     ",
    "30": "jmp                 46     0      0     ",
    "31": "var                 0      0      0     ",
    "32": "var                 1      1      0     ",
    "33": "ltii                2      0      1     ",
    "34": "jntr                30     2      0     ",
    "35": "push_var            0      0      1     ",
    "36": "union               0      0      0     ",
    "37": "set_ptr             1      -      0     ",
    "38": "send_shard          18     -      1     # public.test",
    "39": "var                 1      0      0     ",
    "40": "int                 2      -      0     # 1",
    "41": "addii               3      1      2     ",
    "42": "var_set             0      0      3     ",
    "43": "free                3      0      0     ",
    "44": "union_recv          0      0      0     ",
    "45": "jmp                 29     0      0     ",
    "46": "close               0      0      0     ",
    "47": "var                 1      1      0     ",
    "48": "ret                 1      0      -     "
  },
  "pushdown": {
    "00": "set_ordered         0      1      1     ",
    "01": "table_open_part     1      1      9     # public.test (primary)",
    "02": "bool                2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_get             2      0      0     ",
    "05": "table_readi32       3      1      0     ",
    "06": "push                3      0      0     ",
    "07": "set_agg             0      2      21    ",
    "08": "table_next          1      2      0     ",
    "09": "free                1      0      0     ",
    "10": "bool                1      1      0     ",
    "11": "push                1      0      0     ",
    "12": "set_get             1      0      0     ",
    "13": "null                2      0      0     ",
    "14": "push                2      0      0     ",
    "15": "set_agg             0      1      21    ",
    "16": "set_sort            0      0      0     ",
    "17": "ret                 0      0      -     ",
    "18": "set                 0      1      0     ",
    "19": "table_prepare       1      -      0     # public.test",
    "20": "jmp                 27     0      0     ",
    "21": "string              2      25     0     # unique key constraint violation",
    "22": "push                2      0      0     ",
    "23": "call                2      -      1     # public.error()",
    "24": "table_readi32       2      1      0     ",
    "25": "push                2      0      0     ",
    "26": "set_add             0      0      0     ",
    "27": "upsert              1      21     24    ",
    "28": "free                1      0      0     ",
    "29": "ret                 0      0      -     "
  },
  "access": [["public.test", "rw"]]
}]
begin
	declare i int := 0;
	select max(id) into i from test;

	i := i + 1;
	declare x int := i + 10;
	while i < x do
		insert into test values (i) returning *;
		i := i + 1;
	end;
	select x;
end;
[15]
select * from test;
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
# test: while do insert returning into
explain begin
	declare i int := 0;
	select max(id) into i from test;

	i := i + 1;
	declare x int := i + 10;
	declare l int := 0;

	while i < x do
		insert into test values (i) returning id into l;
		i := i + 1;
	end;
	select x, l;
end;
[{
  "main": {
    "00": "push_nulls          3      0      0     ",
    "01": "int                 0      -      0     # 0",
    "02": "var_set             0      0      0     ",
    "03": "free                0      0      0     ",
    "04": "union               0      0      0     ",
    "05": "send_all            0      -      0     # public.test",
    "06": "union_recv          0      0      0     ",
    "07": "union_set           0      1      -1    ",
    "08": "union_set_aggs      0      21     0     ",
    "09": "set                 1      1      0     ",
    "10": "store_open          2      0      15    ",
    "11": "agg                 3      2      0     ",
    "12": "push                3      0      0     ",
    "13": "set_add             1      0      0     ",
    "14": "store_next          2      11     0     ",
    "15": "free                2      0      0     ",
    "16": "free                0      0      0     ",
    "17": "var_set             0      0      1     ",
    "18": "free                1      0      0     ",
    "19": "var                 0      0      0     ",
    "20": "int                 1      -      0     # 1",
    "21": "addii               2      0      1     ",
    "22": "var_set             0      0      2     ",
    "23": "free                2      0      0     ",
    "24": "var                 0      0      0     ",
    "25": "int                 1      -      0     # 10",
    "26": "addii               2      0      1     ",
    "27": "var_set             1      0      2     ",
    "28": "free                2      0      0     ",
    "29": "int                 0      -      0     # 0",
    "30": "var_set             2      0      0     ",
    "31": "free                0      0      0     ",
    "32": "jmp                 34     0      0     ",
    "33": "jmp                 51     0      0     ",
    "34": "var                 0      0      0     ",
    "35": "var                 1      1      0     ",
    "36": "ltii                2      0      1     ",
    "37": "jntr                33     2      0     ",
    "38": "push_var            0      0      1     ",
    "39": "union               0      0      0     ",
    "40": "set_ptr             1      -      0     ",
    "41": "send_shard          18     -      1     # public.test",
    "42": "var                 1      0      0     ",
    "43": "int                 2      -      0     # 1",
    "44": "addii               3      1      2     ",
    "45": "var_set             0      0      3     ",
    "46": "free                3      0      0     ",
    "47": "union_recv          0      0      0     ",
    "48": "var_set             2      0      0     ",
    "49": "free                0      0      0     ",
    "50": "jmp                 32     0      0     ",
    "51": "close               0      0      0     ",
    "52": "set                 0      2      0     ",
    "53": "var                 1      1      0     ",
    "54": "push                1      0      0     ",
    "55": "var                 1      2      0     ",
    "56": "push                1      0      0     ",
    "57": "set_add             0      0      0     ",
    "58": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set_ordered         0      1      1     ",
    "01": "table_open_part     1      1      9     # public.test (primary)",
    "02": "bool                2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_get             2      0      0     ",
    "05": "table_readi32       3      1      0     ",
    "06": "push                3      0      0     ",
    "07": "set_agg             0      2      21    ",
    "08": "table_next          1      2      0     ",
    "09": "free                1      0      0     ",
    "10": "bool                1      1      0     ",
    "11": "push                1      0      0     ",
    "12": "set_get             1      0      0     ",
    "13": "null                2      0      0     ",
    "14": "push                2      0      0     ",
    "15": "set_agg             0      1      21    ",
    "16": "set_sort            0      0      0     ",
    "17": "ret                 0      0      -     ",
    "18": "set                 0      1      0     ",
    "19": "table_prepare       1      -      0     # public.test",
    "20": "jmp                 27     0      0     ",
    "21": "string              2      25     0     # unique key constraint violation",
    "22": "push                2      0      0     ",
    "23": "call                2      -      1     # public.error()",
    "24": "table_readi32       2      1      0     ",
    "25": "push                2      0      0     ",
    "26": "set_add             0      0      0     ",
    "27": "upsert              1      21     24    ",
    "28": "free                1      0      0     ",
    "29": "ret                 0      0      -     "
  },
  "access": [["public.test", "rw"]]
}]
begin
	declare i int := 0;
	select max(id) into i from test;

	i := i + 1;
	declare x int := i + 10;
	declare l int := 0;

	while i < x do
		insert into test values (i) returning id into l;
		i := i + 1;
	end;
	select x, l;
end;
[[25, 24]]
select * from test;
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]
# test: while utility
while true do show all; end;
{"msg": "while true do ❰show❱ ⟵ utility statement cannot be used here"}
# test: cte while
with a as (while true do end) select 1;
{"msg": "with a as (❰while❱ ⟵ statement cannot be used inside CTE"}
with a as (select 1) while true do end;
{"msg": "with a as (select 1) ❰while❱ ⟵ statement cannot be used inside CTE"}
disconnect S0;
close E0;
