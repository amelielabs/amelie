#

open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3485 }], "backends": 3
connect E0 S0 localhost:3485

# test: select count(*) from table empty
create table test_empty (id int primary key, data int, data2 double)

create table test_null (id int primary key, data int, data2 double)
insert into test_null values (0, null, null)

create table test (id int primary key, data int, data2 double)
insert into test values (0, 0, 0.0)
insert into test values (1, 0, 0.0)
insert into test values (2, 1, 1.0)
insert into test values (3, 1, 1.0)
insert into test values (4, 2  2.0)
insert into test values (5, null, null)
insert into test values (6, 3, 3.1)

explain select count(*) from test_empty
select count(*) from test_empty

# test: select count(*) from table
select * from test

explain select count(*) from test
select count(*) from test

# test: select count(column) from table
explain select count(id) from test
select count(id) from test

# test: select count(null) from table
explain select count(data) from test
select count(data) from test

explain select count(data) from test_null
select count(data) from test_null

# test: select count(any) from table
select count('string') from test_null
select count([]) from test_null

# test: select sum(column int) from table empty
explain select sum(id) from test_empty
select sum(id) from test_empty

# test: select sum(column int) from table
explain select sum(id) from test
select sum(id) from test
select sum(data) from test

# test: select sum(column double) from table empty
explain select sum(data2) from test_empty
select sum(data2) from test_empty

# test: select sum(column double) from table
explain select sum(data2) from test
select sum(data2) from test_empty

# test: select sum(any) from table
explain select sum('string') from test
select sum('string') from test

# test: select sum(null) from table
explain select sum(data) from test_null
select sum(data) from test_null

# test: select avg(column int) from table empty
select avg(id) from test_empty

# test: select avg(column int) from table
explain select avg(id) from test
select avg(id) from test
select avg(data) from test

# test: select avg(column double) from table empty
select avg(data2) from test_empty

# test: select avg(column int) from table
select avg(data2) from test

# test: select avg(any) from table
explain select avg('string') from test
select avg('string') from test

# test: select avg(null) from table
explain select avg(data2) from test_null
select avg(data2) from test_null

# test: select min(column int) from table empty
select min(id) from test_empty

# test: select min(column int) from table
select min(id) from test
select min(data) from test

# test: select min(column double) from table empty
select min(data2) from test_empty

# test: select min(column double) from table
select min(data2) from test

# test: select min(null) from table
explain select min(data2) from test_null
select min(data2) from test_null

# test: select max(column int) from table empty
select max(id) from test_empty

# test: select max(column int) from table
select max(id) from test
select max(data) from test

# test: select max(column double) from table empty
select max(data2) from test_empty

# test: select max(column double) from table
select max(data2) from test

# test: select max(null) from table
explain select max(data2) from test_null
select max(data2) from test_null

# test: select count(*), min(column), max(column) from table
select count(*), min(id), max(id) from test
select count(*), min(id), max(id), avg(id) from test

# test: select count(*) from table group by column
explain select id, count(*) from test group by id
select id, count(*) from test group by id
select data, count(*) from test group by data
select data2, count(*) from test group by data2
select data, count(*) from test_empty group by data
select data, count(*) from test_null group by data

# test: select from (select count(*) from table group by)
explain select * from (select id, count(*) from test group by id) t
select * from (select id, count(*) from test group by id) t
select * from (select data, count(*) from test group by data) t
select * from (select data, count(*) from test_empty group by data) t
select * from (select data, count(*) from test_null group by data) t

# test: select * from table order by count(*)
# errors
select * from test order by count(*)
select id from test order by count(*)
# ok
select 1 from test order by count(id)

# test: select count(*) from table order by 1
select count(*) from test order by 1

# test: select count(*) as from table order by alias
select count(*) as c from test order by c

## test: select from (select agg from table)
#explain select * from (select count(*) from test) t
#select * from (select count(*) from test) t

## test: select from table having agg
#explain select * from test having count(id) > 0
#select * from test having count(id) > 0

## test: select from table group by having agg
#explain select id from test group by id having count(*) > 0
#select id from test group by id having count(*) > 0

#explain select id, count(*) from test group by id having count(*) > 0
#select id, count(*) from test group by id having count(*) > 0

#explain select data, count(*) from test group by data having count(*) > 0
#select data, count(*) from test group by data having count(*) > 0

#explain select data, count(*) from test group by data having count(*) > 1
#select data, count(*) from test group by data having count(*) > 1

## unsupported
#explain select data, count(*) as c from test group by data having c > 1
#select data, count(*) as c from test group by data having c > 1

## unsupported
#explain select * from test group by data order by count(*)

## test: select agg from table group by order by
#explain select id, count(*) from test group by id
#select id, count(*) from test group by id

#explain select id, count(*) from test group by id order by id
#select id, count(*) from test group by id order by id
#select id, count(*) from test group by id order by data

## test: select agg from table group by having order by
#select id, count(*) from test group by id having id >= 3 and id < 6 order by id

## test: select distinct from table group by
#select data, count(*) from test group by data order by data
#select count(*) from test group by data order by data

#select distinct data, count(*) from test group by data
#select distinct count(*) from test group by data

## unsupported
#explain select distinct on (count(*)) data from test group by data

drop table test
drop table test_empty
drop table test_null

disconnect S0
close E0
