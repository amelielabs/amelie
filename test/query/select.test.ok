open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3485 }]
connect E0 S0 localhost:3485
# test: select statement parsing
select
{"code": 1, "msg": "bad expression"}
select,
{"code": 1, "msg": "bad expression"}
select null null
{"code": 1, "msg": "unexpected token at the end of statement"}
select null 1
{"code": 1, "msg": "unexpected token at the end of statement"}
select from
{"code": 1, "msg": "bad expression"}
select 1 from
{"code": 1, "msg": "bad expression"}
select 1 from "test"
{"code": 1, "msg": "FROM: array, map or data type expected, but got string"}
select 1 from name
{"code": 1, "msg": "<name> table or view is not found"}
select 1 from 1 where
{"code": 1, "msg": "bad expression"}
select 1 from 1 where null
{"code": 1, "msg": "FROM: array, map or data type expected, but got int"}
# test: select expr
select 1
[1]
select 1, 2
[1, 2]
select [1, 2]
[1, 2]
select {}
[{}]
select null
[null]
select null, null
[null, null]
explain select 1
[{
  "bytecode": {
    "coordinator": {
      "00": "int                 0      -      0     # 1",
      "01": "cte_set             0      0      0     ",
      "02": "body                0      0      0     ",
      "03": "ret                 0      0      0     "
    }
  }
}]
explain select [1, 2, 3]
[{
  "bytecode": {
    "coordinator": {
      "00": "int                 0      -      0     # 1",
      "01": "push                0      0      0     ",
      "02": "int                 0      -      0     # 2",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 3",
      "05": "push                0      0      0     ",
      "06": "array               0      3      0     ",
      "07": "cte_set             0      0      0     ",
      "08": "body                0      0      0     ",
      "09": "ret                 0      0      0     "
    }
  }
}]
# test: select name
select name
{"code": 1, "msg": "<name> column, CTE or argument not found"}
select name.name
{"code": 1, "msg": "<name> column, CTE or argument not found"}
# test: select star
select *
{"code": 1, "msg": "<*> no FROM clause defined"}
select **
{"code": 1, "msg": "<**> no FROM clause defined"}
# test: select from expr
select * from 1
{"code": 1, "msg": "FROM: array, map or data type expected, but got int"}
select * from 3.14
{"code": 1, "msg": "FROM: array, map or data type expected, but got real"}
select * from null
{"code": 1, "msg": "FROM: array, map or data type expected, but got null"}
select * from "test"
{"code": 1, "msg": "FROM: array, map or data type expected, but got string"}
select * from []
[]
# test: select from []
select * from []
[]
select * from [null]
[null]
select * from [1]
[1]
select * from [1, 2]
[1, 2]
select * from [1, 2, 3]
[1, 2, 3]
select *, *, * from [1, 2, 3]
[[1, 1, 1], [2, 2, 2], [3, 3, 3]]
select ** from [1, 2, 3]
{"code": 1, "msg": "**: reference is not defined"}
explain select * from [1, 2, 3]
[{
  "bytecode": {
    "coordinator": {
      "00": "set                 0      0      0     ",
      "01": "int                 1      -      0     # 1",
      "02": "push                1      0      0     ",
      "03": "int                 1      -      0     # 2",
      "04": "push                1      0      0     ",
      "05": "int                 1      -      0     # 3",
      "06": "push                1      0      0     ",
      "07": "array               1      3      0     ",
      "08": "cursor_open_expr    0      1      10    ",
      "09": "jmp                 13     0      0     ",
      "10": "cursor_read         2      0      0     ",
      "11": "set_add             0      2      0     ",
      "12": "cursor_next         0      10     0     ",
      "13": "cursor_close        0      0      0     ",
      "14": "cte_set             0      0      0     ",
      "15": "body                0      0      0     ",
      "16": "ret                 0      0      0     "
    }
  }
}]
select * from [1, [2, [3]]]
[1, [2, [3]]]
select test.* from ([{"id": 1}, {"id": 2}, {"id": 3}]) test
[{
  "id": 1
}, {
  "id": 2
}, {
  "id": 3
}]
select (select **, * from test.*) from ([{"id": 1}, {"id": 2}, {"id": 3}]) test
[[["id", 1]], [["id", 2]], [["id", 3]]]
# test: select from {}
select * from {}
[]
select * from {"a": 1}
[1]
select * from {"a": 1, "b": 2}
[1, 2]
select * from {"a": 1, "b": 2, "c": 3}
[1, 2, 3]
explain select * from {"a": 1, "b": 2, "c": 3}
[{
  "bytecode": {
    "coordinator": {
      "00": "set                 0      0      0     ",
      "01": "string              1      0      0     # a",
      "02": "push                1      0      0     ",
      "03": "int                 1      -      0     # 1",
      "04": "push                1      0      0     ",
      "05": "string              1      2      0     # b",
      "06": "push                1      0      0     ",
      "07": "int                 1      -      0     # 2",
      "08": "push                1      0      0     ",
      "09": "string              1      4      0     # c",
      "10": "push                1      0      0     ",
      "11": "int                 1      -      0     # 3",
      "12": "push                1      0      0     ",
      "13": "map                 1      6      0     ",
      "14": "cursor_open_expr    0      1      16    ",
      "15": "jmp                 19     0      0     ",
      "16": "cursor_read         2      0      0     ",
      "17": "set_add             0      2      0     ",
      "18": "cursor_next         0      16     0     ",
      "19": "cursor_close        0      0      0     ",
      "20": "cte_set             0      0      0     ",
      "21": "body                0      0      0     ",
      "22": "ret                 0      0      0     "
    }
  }
}]
select **, * from {"a": 1, "b": 2, "c": 3}
[["a", 1], ["b", 2], ["c", 3]]
select **, * from {"a": 1, "b": {"c": 3}}
[["a", 1], ["b", {
  "c": 3
}]]
select *, * from {"a": 1, "b": 2, "c": 3}
[[1, 1], [2, 2], [3, 3]]
# test: select from function
select ** from system.config()
["version", "uuid", "directory", "directory_certs", "timezone", "timezone_default", "log_enable", "log_to_file", "log_to_stdout", "log_connections", "listen", "limit_send", "limit_recv", "limit_write", "frontends", "backends", "wal", "wal_rotate_wm", "wal_sync_on_rotate", "wal_sync_on_write", "repl", "repl_primary", "repl_reconnect_ms", "checkpoint_interval", "checkpoint_workers", "checkpoint", "read_only", "lsn", "psn"]
# test: select from function #2
create table test (id int primary key serial)
[]
select * from system.tables()[0].indexes[0].keys
[{
  "ref": 0,
  "type": 2,
  "path": ""
}]
drop table test
[]
# test: select from expr alias
select * from [1, 2, 3] list
[1, 2, 3]
select list.* from [1, 2, 3] list
[1, 2, 3]
select list.** from [1, 2, 3] list
{"code": 1, "msg": "**: reference is not defined"}
select * from {"a": 1, "b": 2, "c": 3} list
[1, 2, 3]
select list.* from {"a": 1, "b": 2, "c": 3} list
[1, 2, 3]
select list.* from ({"a": 1, "b": 2, "c": 3}) list
[1, 2, 3]
select list.** from ({"a": 1, "b": 2, "c": 3}) list
["a", "b", "c"]
# test: select from expr alias reuse
select * from [1, 2, 3] list, [3,2,1] list
{"code": 1, "msg": "<list> target is redefined, please use different alias for the target"}
# test: select from view expr
create view test as select 123
[]
select * from test
{"code": 1, "msg": "FROM: array, map or data type expected, but got int"}
drop view test
[]
create view test as select [1,2,3]
[]
explain select * from test
[{
  "bytecode": {
    "coordinator": {
      "00": "set                 0      0      0     ",
      "01": "int                 1      -      0     # 1",
      "02": "push                1      0      0     ",
      "03": "int                 1      -      0     # 2",
      "04": "push                1      0      0     ",
      "05": "int                 1      -      0     # 3",
      "06": "push                1      0      0     ",
      "07": "array               1      3      0     ",
      "08": "cursor_open_expr    0      1      10    ",
      "09": "jmp                 13     0      0     ",
      "10": "cursor_read         2      0      0     ",
      "11": "set_add             0      2      0     ",
      "12": "cursor_next         0      10     0     ",
      "13": "cursor_close        0      0      0     ",
      "14": "cte_set             0      0      0     ",
      "15": "body                0      0      0     ",
      "16": "ret                 0      0      0     "
    }
  }
}]
select * from test
[1, 2, 3]
drop view test
[]
# test: select from view expr #2
create view test as select {"a": 1, "b": 2, "c": 3}
[]
explain select * from test
[{
  "bytecode": {
    "coordinator": {
      "00": "set                 0      0      0     ",
      "01": "string              1      0      0     # a",
      "02": "push                1      0      0     ",
      "03": "int                 1      -      0     # 1",
      "04": "push                1      0      0     ",
      "05": "string              1      2      0     # b",
      "06": "push                1      0      0     ",
      "07": "int                 1      -      0     # 2",
      "08": "push                1      0      0     ",
      "09": "string              1      4      0     # c",
      "10": "push                1      0      0     ",
      "11": "int                 1      -      0     # 3",
      "12": "push                1      0      0     ",
      "13": "map                 1      6      0     ",
      "14": "cursor_open_expr    0      1      16    ",
      "15": "jmp                 19     0      0     ",
      "16": "cursor_read         2      0      0     ",
      "17": "set_add             0      2      0     ",
      "18": "cursor_next         0      16     0     ",
      "19": "cursor_close        0      0      0     ",
      "20": "cte_set             0      0      0     ",
      "21": "body                0      0      0     ",
      "22": "ret                 0      0      0     "
    }
  }
}]
select **, * from test
[["a", 1], ["b", 2], ["c", 3]]
drop view test
[]
# test: select from view expr alias
create view test as select {"a": 1, "b": 2, "c": 3}
[]
select list.**, list.* from test list
[["a", 1], ["b", 2], ["c", 3]]
drop view test
[]
# test: select from view expr alias #2
create schema test
[]
create view test.test as select {"a": 1, "b": 2, "c": 3}
[]
select list.**, list.* from test.test list
[["a", 1], ["b", 2], ["c", 3]]
drop schema test cascade
[]
# test: select from view set
create view test as select * from [1,2,3]
[]
explain select * from test
[{
  "bytecode": {
    "coordinator": {
      "00": "set                 0      0      0     ",
      "01": "set                 1      0      0     ",
      "02": "int                 2      -      0     # 1",
      "03": "push                2      0      0     ",
      "04": "int                 2      -      0     # 2",
      "05": "push                2      0      0     ",
      "06": "int                 2      -      0     # 3",
      "07": "push                2      0      0     ",
      "08": "array               2      3      0     ",
      "09": "cursor_open_expr    0      2      11    ",
      "10": "jmp                 14     0      0     ",
      "11": "cursor_read         3      0      0     ",
      "12": "set_add             1      3      0     ",
      "13": "cursor_next         0      11     0     ",
      "14": "cursor_close        0      0      0     ",
      "15": "cursor_open_expr    1      1      17    ",
      "16": "jmp                 20     0      0     ",
      "17": "cursor_read         2      1      0     ",
      "18": "set_add             0      2      0     ",
      "19": "cursor_next         1      17     0     ",
      "20": "cursor_close        1      0      0     ",
      "21": "cte_set             0      0      0     ",
      "22": "body                0      0      0     ",
      "23": "ret                 0      0      0     "
    }
  }
}]
select * from test
[1, 2, 3]
drop view test
[]
# test: select from view set #2
create view test as select * from {"a": 1, "b": 2, "c": 3}
[]
explain select * from test list
[{
  "bytecode": {
    "coordinator": {
      "00": "set                 0      0      0     ",
      "01": "set                 1      0      0     ",
      "02": "string              2      0      0     # a",
      "03": "push                2      0      0     ",
      "04": "int                 2      -      0     # 1",
      "05": "push                2      0      0     ",
      "06": "string              2      2      0     # b",
      "07": "push                2      0      0     ",
      "08": "int                 2      -      0     # 2",
      "09": "push                2      0      0     ",
      "10": "string              2      4      0     # c",
      "11": "push                2      0      0     ",
      "12": "int                 2      -      0     # 3",
      "13": "push                2      0      0     ",
      "14": "map                 2      6      0     ",
      "15": "cursor_open_expr    0      2      17    ",
      "16": "jmp                 20     0      0     ",
      "17": "cursor_read         3      0      0     ",
      "18": "set_add             1      3      0     ",
      "19": "cursor_next         0      17     0     ",
      "20": "cursor_close        0      0      0     ",
      "21": "cursor_open_expr    1      1      23    ",
      "22": "jmp                 26     0      0     ",
      "23": "cursor_read         2      1      0     ",
      "24": "set_add             0      2      0     ",
      "25": "cursor_next         1      23     0     ",
      "26": "cursor_close        1      0      0     ",
      "27": "cte_set             0      0      0     ",
      "28": "body                0      0      0     ",
      "29": "ret                 0      0      0     "
    }
  }
}]
select * from test list
[1, 2, 3]
select list.* from test list
[1, 2, 3]
select ** from test list
{"code": 1, "msg": "**: reference is not defined"}
drop view test
[]
# test: select from view set #3
create view test as select list.* from {"a": 1, "b": 2, "c": 3} list
[]
select * from test list
{"code": 1, "msg": "<list> target is redefined, please use different alias for the target"}
select list2.* from test list2
[1, 2, 3]
select list2.** from test list2
{"code": 1, "msg": "**: reference is not defined"}
drop view test
[]
# test: select from view function
create view test as select * from system.views()
[]
select * from test
[{
  "schema": "public",
  "name": "test",
  "query": "select * from system.views()",
  "columns": []
}]
select (select ** from test.*) from test
[["schema", "name", "query", "columns"]]
explain select (select ** from test.*) from test
[{
  "bytecode": {
    "coordinator": {
      "00": "set                 0      0      0     ",
      "01": "set                 1      0      0     ",
      "02": "call                2      -      0     # system.views()",
      "03": "cursor_open_expr    1      2      5     ",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_read         3      1      0     ",
      "06": "set_add             1      3      0     ",
      "07": "cursor_next         1      5      0     ",
      "08": "cursor_close        1      0      0     ",
      "09": "cursor_open_expr    2      1      11    ",
      "10": "jmp                 21     0      0     ",
      "11": "set                 2      0      0     ",
      "12": "cursor_read         3      2      0     ",
      "13": "cursor_open_expr    0      3      15    ",
      "14": "jmp                 18     0      0     ",
      "15": "ref_key             4      0      0     ",
      "16": "set_add             2      4      0     ",
      "17": "cursor_next         0      15     0     ",
      "18": "cursor_close        0      0      0     ",
      "19": "set_add             0      2      0     ",
      "20": "cursor_next         2      11     0     ",
      "21": "cursor_close        2      0      0     ",
      "22": "cte_set             0      0      0     ",
      "23": "body                0      0      0     ",
      "24": "ret                 0      0      0     "
    }
  }
}]
drop view test
[]
# test: select star from table
create table test (id int primary key serial)
[]
insert into test () values ()
[]
insert into test () values ()
[]
insert into test () values ()
[]
explain select * from test
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     "
    }
  }
}]
select * from test
[[0], [1], [2]]
select test.* from test
[[0], [1], [2]]
drop table test
[]
# test: select column from table
create table test (id int primary key serial, data int default 0)
[]
insert into test () values ()
[]
insert into test () values ()
[]
insert into test () values ()
[]
select * from test
[[0, 0], [1, 0], [2, 0]]
explain select id, data from test
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 12     0      0     ",
      "05": "cursor_idx          1      0      0     ",
      "06": "push                1      0      0     ",
      "07": "cursor_idx          1      0      1     ",
      "08": "push                1      0      0     ",
      "09": "array               1      2      0     ",
      "10": "set_add             0      1      0     ",
      "11": "cursor_next         0      5      0     ",
      "12": "cursor_close        0      0      0     ",
      "13": "result              0      0      0     ",
      "14": "ret                 0      0      0     "
    }
  }
}]
select id, data from test
[[0, 0], [1, 0], [2, 0]]
drop table test
[]
# test: select column.path from table
create table test (id int primary key serial, data object)
[]
insert into test (data) values ({"data": 123})
[]
insert into test (data) values ({"data": 123})
[]
insert into test (data) values ({"data": 123})
[]
select * from test
[[0, {
  "data": 123
}], [1, {
  "data": 123
}], [2, {
  "data": 123
}]]
explain select data.data from test
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_idx          1      0      1     # data",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     "
    }
  }
}]
select data.data from test
[123, 123, 123]
drop table test
[]
# test: select column.path from table #2
create table test (id int primary key serial, data object)
[]
insert into test (data) values ({"data": {"data": 123}})
[]
insert into test (data) values ({"data": {"data": 123}})
[]
insert into test (data) values ({"data": {"data": 123}})
[]
select * from test
[[0, {
  "data": {
    "data": 123
  }
}], [1, {
  "data": {
    "data": 123
  }
}], [2, {
  "data": {
    "data": 123
  }
}]]
explain select data.data.data from test
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_idx          1      0      1     # data.data",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     "
    }
  }
}]
select data.data.data from test
[123, 123, 123]
drop table test
[]
# test: select target.column from table
create table test (id int primary key serial, data int default 0)
[]
insert into test () values ()
[]
insert into test () values ()
[]
insert into test () values ()
[]
explain select test.id, test.data from test
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 12     0      0     ",
      "05": "cursor_idx          1      0      0     ",
      "06": "push                1      0      0     ",
      "07": "cursor_idx          1      0      1     ",
      "08": "push                1      0      0     ",
      "09": "array               1      2      0     ",
      "10": "set_add             0      1      0     ",
      "11": "cursor_next         0      5      0     ",
      "12": "cursor_close        0      0      0     ",
      "13": "result              0      0      0     ",
      "14": "ret                 0      0      0     "
    }
  }
}]
select test.id, test.data from test
[[0, 0], [1, 0], [2, 0]]
drop table test
[]
# test: select target.column.path from table
create table test (id int primary key serial, data object)
[]
insert into test (data) values ({"data": 123})
[]
insert into test (data) values ({"data": 123})
[]
insert into test (data) values ({"data": 123})
[]
explain select test.data.data from test
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_idx          1      0      1     # data",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     "
    }
  }
}]
select test.data.data from test
[123, 123, 123]
drop table test
[]
# test: select alias.column from table
create table test (id int primary key serial, data int default 0)
[]
insert into test () values ()
[]
insert into test () values ()
[]
insert into test () values ()
[]
select * from test
[[0, 0], [1, 0], [2, 0]]
explain select alias.id, alias.data from test alias
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 12     0      0     ",
      "05": "cursor_idx          1      0      0     ",
      "06": "push                1      0      0     ",
      "07": "cursor_idx          1      0      1     ",
      "08": "push                1      0      0     ",
      "09": "array               1      2      0     ",
      "10": "set_add             0      1      0     ",
      "11": "cursor_next         0      5      0     ",
      "12": "cursor_close        0      0      0     ",
      "13": "result              0      0      0     ",
      "14": "ret                 0      0      0     "
    }
  }
}]
select alias.id, alias.data from test alias
[[0, 0], [1, 0], [2, 0]]
drop table test
[]
# test: select alias.column.path from table
create table test (id int primary key serial, data object)
[]
insert into test (data) values ({"data": 123})
[]
insert into test (data) values ({"data": 123})
[]
insert into test (data) values ({"data": 123})
[]
explain select alias.data.data from test alias
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_idx          1      0      1     # data",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     "
    }
  }
}]
select alias.data.data from test alias
[123, 123, 123]
drop table test
[]
# test: select from schemaless table
create table test (obj object, primary key(obj.id int))
[]
insert into test {"id": 1}
[]
insert into test {"id": 2}
[]
insert into test {"id": 3}
[]
select * from test
[[{
  "id": 1
}], [{
  "id": 2
}], [{
  "id": 3
}]]
select obj from test
[{
  "id": 1
}, {
  "id": 2
}, {
  "id": 3
}]
explain select obj.id from test
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_idx          1      0      0     # id",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     "
    }
  }
}]
select obj.id from test
[1, 2, 3]
select obj.data from test
{"code": 1, "msg": "column obj.data: path not found"}
select (select * from test.*) from test
[[{
  "id": 1
}], [{
  "id": 2
}], [{
  "id": 3
}]]
explain select (select **, * from test.*[0]) from test
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         1      0      5     # public.test (primary)",
      "04": "jmp                 21     0      0     ",
      "05": "set                 1      0      0     ",
      "06": "cursor_read         2      1      0     ",
      "07": "int                 3      -      0     # 0",
      "08": "idx                 4      2      3     ",
      "09": "cursor_open_expr    0      4      11    ",
      "10": "jmp                 18     0      0     ",
      "11": "ref_key             2      0      0     ",
      "12": "push                2      0      0     ",
      "13": "cursor_read         2      0      0     ",
      "14": "push                2      0      0     ",
      "15": "array               2      2      0     ",
      "16": "set_add             1      2      0     ",
      "17": "cursor_next         0      11     0     ",
      "18": "cursor_close        0      0      0     ",
      "19": "set_add             0      1      0     ",
      "20": "cursor_next         1      5      0     ",
      "21": "cursor_close        1      0      0     ",
      "22": "result              0      0      0     ",
      "23": "ret                 0      0      0     "
    }
  }
}]
select (select **, * from test.*[0]) from test
[[["id", 1]], [["id", 2]], [["id", 3]]]
drop table test
[]
disconnect S0
close E0
