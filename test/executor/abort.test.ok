start E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3485 }], "shards": 3
connect E0 S0 localhost:3485
# test: insert abort by error
create table test (id int primary key, data int default 0)
insert into test (id) values (0), (1), (2), (3), (1)
{"code": 1, "msg": "unique key constraint violation"}
select * from test
[]
# test: insert abort by error #2
insert into test (id) values (0), (1), (2), (3)
select * from test
[[0, 0], [3, 0], [2, 0], [1, 0]]
# test: insert abort by error #3
insert into test (id) values (4), (5), (1), (6)
{"code": 1, "msg": "unique key constraint violation"}
select * from test
[[0, 0], [3, 0], [2, 0], [1, 0]]
# test: insert abort by error #4
insert into test (id) values (4), (5), (1), (6); select error("abort")
{"code": 1, "msg": "unique key constraint violation"}
select * from test
[[0, 0], [3, 0], [2, 0], [1, 0]]
# test: replace abort
explain replace into test values (0, 1), (1, 1), (2, 1), (3, 1); select error("abort")
"
bytecode [coordinator]
--------
 0                send        0      0      -      # public.test
 1                recv        0      0      0
 2                null        0      0      0
 3             cte_set        0      0      0
 4              string        0     13      0      # abort
 5                push        0      0      0
 6                call        0      -      1      # public.error()
 7             cte_set        1      0      0
 8                body        1      0      0
 9                 ret        0      0      0


bytecode [shard]
--------
 0              insert        -      0      0      # public.test
 1                 ret        0      0      0

"
replace into test values (0, 1), (1, 1), (2, 1), (3, 1); select error("abort")
{"code": 1, "msg": "abort"}
select * from test
[[0, 0], [3, 0], [2, 0], [1, 0]]
# test: delete abort
explain delete from test; select error("abort")
"
bytecode [coordinator]
--------
 0            send_all        0      0      0
 1                recv        0      0      0
 2                null        0      0      0
 3             cte_set        0      0      0
 4              string        0     20      0      # abort
 5                push        0      0      0
 6                call        0      -      1      # public.error()
 7             cte_set        1      0      0
 8                body        1      0      0
 9                 ret        0      0      0


bytecode [shard]
--------
 0             int_min        0      0      0
 1                push        0      0      0
 2         cursor_open        0      0      4      # public.test (primary)
 3                 jmp        6      0      0
 4              delete        0      0      0
 5         cursor_next        0      4      0
 6        cursor_close        0      0      0
 7                 ret        0      0      0

"
delete from test; select error("abort")
{"code": 1, "msg": "abort"}
select * from test
[[0, 0], [3, 0], [2, 0], [1, 0]]
# test: update abort
explain update test set data = id; select error("abort")
"
bytecode [coordinator]
--------
 0            send_all        0      0      0
 1                recv        0      0      0
 2                null        0      0      0
 3             cte_set        0      0      0
 4              string        0     20      0      # abort
 5                push        0      0      0
 6                call        0      -      1      # public.error()
 7             cte_set        1      0      0
 8                body        1      0      0
 9                 ret        0      0      0


bytecode [shard]
--------
 0             int_min        0      0      0
 1                push        0      0      0
 2         cursor_open        0      0      4      # public.test (primary)
 3                 jmp       14      0      0
 4         cursor_read        0      0      0
 5                push        0      0      0
 6                null        0      0      0
 7                push        0      0      0
 8          cursor_idx        0      0      0
 9                push        0      0      0
10              assign        0      3      1
11                push        0      0      0
12              update        0      0      0
13         cursor_next        0      4      0
14        cursor_close        0      0      0
15                 ret        0      0      0

"
update test set data = id; select error("abort")
{"code": 1, "msg": "abort"}
select * from test
[[0, 0], [3, 0], [2, 0], [1, 0]]
# test: upsert abort
explain insert into test values(1, 0) on conflict do update set data = id; select error("abort")
"
bytecode [coordinator]
--------
 0                send        0      0      -      # public.test
 1                recv        0      0      0
 2                null        0      0      0
 3             cte_set        0      0      0
 4              string        0      4      0      # abort
 5                push        0      0      0
 6                call        0      -      1      # public.error()
 7             cte_set        1      0      0
 8                body        1      0      0
 9                 ret        0      0      0


bytecode [shard]
--------
 0      cursor_prepare        0      -      0      # public.test
 1                 jmp       11      0      0
 2         cursor_read        0      0      0
 3                push        0      0      0
 4                null        0      0      0
 5                push        0      0      0
 6          cursor_idx        0      0      0
 7                push        0      0      0
 8              assign        0      3      1
 9                push        0      0      0
10              update        0      0      0
11              upsert        0      2      0
12        cursor_close        0      0      0
13                 ret        0      0      0

"
insert into test values(1, 0) on conflict do update set data = id; select error("abort")
{"code": 1, "msg": "abort"}
select * from test
[[0, 0], [3, 0], [2, 0], [1, 0]]
drop table test
# test: reference insert abort by error
create table test (id int primary key, data int default 0) reference
insert into test (id) values (0), (1), (2), (3), (1)
{"code": 1, "msg": "unique key constraint violation"}
select * from test
[]
# test: reference insert abort by error #2
insert into test (id) values (0), (1), (2), (3)
select * from test
[[0, 0], [1, 0], [2, 0], [3, 0]]
# test: reference insert abort by error #3
insert into test (id) values (4), (5), (1), (6)
{"code": 1, "msg": "unique key constraint violation"}
select * from test
[[0, 0], [1, 0], [2, 0], [3, 0]]
# test: reference insert abort by error #4
insert into test (id) values (4), (5), (1), (6); select error("abort")
{"code": 1, "msg": "unique key constraint violation"}
select * from test
[[0, 0], [1, 0], [2, 0], [3, 0]]
# test: reference replace abort
explain replace into test values (0, 1), (1, 1), (2, 1), (3, 1); select error("abort")
"
bytecode [coordinator]
--------
 0                send        0      0      -      # public.test
 1                recv        0      0      0
 2                null        0      0      0
 3             cte_set        0      0      0
 4              string        0     13      0      # abort
 5                push        0      0      0
 6                call        0      -      1      # public.error()
 7             cte_set        1      0      0
 8                body        1      0      0
 9                 ret        0      0      0


bytecode [shard]
--------
 0              insert        -      0      0      # public.test
 1                 ret        0      0      0

"
replace into test values (0, 1), (1, 1), (2, 1), (3, 1); select error("abort")
{"code": 1, "msg": "abort"}
select * from test
[[0, 0], [1, 0], [2, 0], [3, 0]]
# test: reference delete abort
explain delete from test; select error("abort")
"
bytecode [coordinator]
--------
 0          send_first        0      0      0
 1                recv        0      0      0
 2                null        0      0      0
 3             cte_set        0      0      0
 4              string        0     20      0      # abort
 5                push        0      0      0
 6                call        0      -      1      # public.error()
 7             cte_set        1      0      0
 8                body        1      0      0
 9                 ret        0      0      0


bytecode [shard]
--------
 0             int_min        0      0      0
 1                push        0      0      0
 2         cursor_open        0      0      4      # public.test (primary)
 3                 jmp        6      0      0
 4              delete        0      0      0
 5         cursor_next        0      4      0
 6        cursor_close        0      0      0
 7                 ret        0      0      0

"
delete from test; select error("abort")
{"code": 1, "msg": "abort"}
select * from test
[[0, 0], [1, 0], [2, 0], [3, 0]]
# test: reference update abort
explain update test set data = id; select error("abort")
"
bytecode [coordinator]
--------
 0          send_first        0      0      0
 1                recv        0      0      0
 2                null        0      0      0
 3             cte_set        0      0      0
 4              string        0     20      0      # abort
 5                push        0      0      0
 6                call        0      -      1      # public.error()
 7             cte_set        1      0      0
 8                body        1      0      0
 9                 ret        0      0      0


bytecode [shard]
--------
 0             int_min        0      0      0
 1                push        0      0      0
 2         cursor_open        0      0      4      # public.test (primary)
 3                 jmp       14      0      0
 4         cursor_read        0      0      0
 5                push        0      0      0
 6                null        0      0      0
 7                push        0      0      0
 8          cursor_idx        0      0      0
 9                push        0      0      0
10              assign        0      3      1
11                push        0      0      0
12              update        0      0      0
13         cursor_next        0      4      0
14        cursor_close        0      0      0
15                 ret        0      0      0

"
update test set data = id; select error("abort")
{"code": 1, "msg": "abort"}
select * from test
[[0, 0], [1, 0], [2, 0], [3, 0]]
# test: reference upsert abort
explain insert into test values(1, 0) on conflict do update set data = id; select error("abort")
"
bytecode [coordinator]
--------
 0                send        0      0      -      # public.test
 1                recv        0      0      0
 2                null        0      0      0
 3             cte_set        0      0      0
 4              string        0      4      0      # abort
 5                push        0      0      0
 6                call        0      -      1      # public.error()
 7             cte_set        1      0      0
 8                body        1      0      0
 9                 ret        0      0      0


bytecode [shard]
--------
 0      cursor_prepare        0      -      0      # public.test
 1                 jmp       11      0      0
 2         cursor_read        0      0      0
 3                push        0      0      0
 4                null        0      0      0
 5                push        0      0      0
 6          cursor_idx        0      0      0
 7                push        0      0      0
 8              assign        0      3      1
 9                push        0      0      0
10              update        0      0      0
11              upsert        0      2      0
12        cursor_close        0      0      0
13                 ret        0      0      0

"
insert into test values(1, 0) on conflict do update set data = id; select error("abort")
{"code": 1, "msg": "abort"}
select * from test
[[0, 0], [1, 0], [2, 0], [3, 0]]
drop table test
create table a (id int primary key, data int default 0)
create table b (id int primary key, data int default 0)
create table ref (id int primary key, data int default 0) reference
insert into ref values (0, 8), (1, 8), (2, 8);
# test: insert a select a
insert into a (id) values (0), (1), (2), (3); select * from a
[[0, 0], [3, 0], [2, 0], [1, 0]]
# test: replace a select a abort (by coordinator)
replace into a values (0, 1), (1, 1), (2, 1); select * from a; select error("abort")
{"code": 1, "msg": "abort"}
select * from a
[[0, 0], [3, 0], [2, 0], [1, 0]]
# test: replace a select a abort (by shard)
replace into a values (0, 1), (1, 1), (2, 1); select * from a; select error("abort") from a
{"code": 1, "msg": "abort"}
select * from a
[[0, 0], [3, 0], [2, 0], [1, 0]]
# test: replace a select abort select a
explain replace into a values (0, 1), (1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (6, 1); select error("abort"); select * from a
"
bytecode [coordinator]
--------
 0                send        0      0      -      # public.a
 1                recv        0      0      0
 2                null        0      0      0
 3             cte_set        0      0      0
 4              string        0     22      0      # abort
 5                push        0      0      0
 6                call        0      -      1      # public.error()
 7             cte_set        1      0      0
 8            send_all        2      2      0
 9                recv        2      0      0
10                bool        0      0      0
11                push        0      0      0
12          merge_recv        0     -1     -1
13             cte_set        2      0      0
14                body        2      0      0
15                 ret        0      0      0


bytecode [shard]
--------
 0              insert        -      0      0      # public.a
 1                 ret        0      0      0
 2                 set        0      0      0
 3             int_min        1      0      0
 4                push        1      0      0
 5         cursor_open        0     32      7      # public.a (primary)
 6                 jmp       10      0      0
 7         cursor_read        1      0      0
 8             set_add        0      1      0
 9         cursor_next        0      7      0
10        cursor_close        0      0      0
11              result        0      0      0
12                 ret        0      0      0

"
replace into a values (0, 1), (1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (6, 1); select error("abort"); select * from a
{"code": 1, "msg": "abort"}
select * from a
[[0, 0], [3, 0], [2, 0], [1, 0]]
# test: replace a insert b
explain replace into a values (0, 2), (1, 2), (2, 3); insert into b (id) values (10), (20), (30)
"
bytecode [coordinator]
--------
 0                send        0      0      -      # public.a
 1                send        1      2      -      # public.b
 2                recv        0      0      0
 3                null        0      0      0
 4             cte_set        0      0      0
 5                recv        1      0      0
 6                null        0      0      0
 7             cte_set        1      0      0
 8                 ret        0      0      0


bytecode [shard]
--------
 0              insert        -      0      0      # public.a
 1                 ret        0      0      0
 2              insert        -      1      0      # public.b
 3                 ret        0      0      0

"
replace into a values (0, 2), (1, 2), (2, 3); insert into b (id) values (10), (20), (30)
select * from a
[[0, 2], [3, 0], [2, 3], [1, 2]]
select * from b
[[20, 0], [30, 0], [10, 0]]
# test: update a update b abort
update a set data = 0
explain update a set data = id; update b set data = id; select * from a; select * from b; select error("abort")
"
bytecode [coordinator]
--------
 0            send_all        0      0      0
 1            send_all        1     16      0
 2            send_all        2     32      0
 3            send_all        3     43      0
 4                recv        0      0      0
 5                null        0      0      0
 6             cte_set        0      0      0
 7                recv        1      0      0
 8                null        0      0      0
 9             cte_set        1      0      0
10                recv        2      0      0
11                bool        0      0      0
12                push        0      0      0
13          merge_recv        0     -1     -1
14             cte_set        2      0      0
15                recv        3      0      0
16                bool        0      0      0
17                push        0      0      0
18          merge_recv        0     -1     -1
19             cte_set        3      0      0
20              string        0     68      0      # abort
21                push        0      0      0
22                call        0      -      1      # public.error()
23             cte_set        4      0      0
24                body        4      0      0
25                 ret        0      0      0


bytecode [shard]
--------
 0             int_min        0      0      0
 1                push        0      0      0
 2         cursor_open        0      0      4      # public.a (primary)
 3                 jmp       14      0      0
 4         cursor_read        0      0      0
 5                push        0      0      0
 6                null        0      0      0
 7                push        0      0      0
 8          cursor_idx        0      0      0
 9                push        0      0      0
10              assign        0      3      1
11                push        0      0      0
12              update        0      0      0
13         cursor_next        0      4      0
14        cursor_close        0      0      0
15                 ret        0      0      0
16             int_min        0      0      0
17                push        0      0      0
18         cursor_open        0     17     20      # public.b (primary)
19                 jmp       30      0      0
20         cursor_read        0      0      0
21                push        0      0      0
22                null        0      0      0
23                push        0      0      0
24          cursor_idx        0      0      0
25                push        0      0      0
26              assign        0      3      1
27                push        0      0      0
28              update        0      0      0
29         cursor_next        0     20      0
30        cursor_close        0      0      0
31                 ret        0      0      0
32                 set        0      0      0
33             int_min        1      0      0
34                push        1      0      0
35         cursor_open        0     34     37      # public.a (primary)
36                 jmp       40      0      0
37         cursor_read        1      0      0
38             set_add        0      1      0
39         cursor_next        0     37      0
40        cursor_close        0      0      0
41              result        0      0      0
42                 ret        0      0      0
43                 set        0      0      0
44             int_min        1      0      0
45                push        1      0      0
46         cursor_open        0     51     48      # public.b (primary)
47                 jmp       51      0      0
48         cursor_read        1      0      0
49             set_add        0      1      0
50         cursor_next        0     48      0
51        cursor_close        0      0      0
52              result        0      0      0
53                 ret        0      0      0

"
update a set data = id; update b set data = id; select * from a; select * from b; select error("abort")
{"code": 1, "msg": "abort"}
select * from a
[[0, 0], [3, 0], [2, 0], [1, 0]]
select * from b
[[20, 0], [30, 0], [10, 0]]
# test: delete a join ref update b abort
explain delete from a, ref where a.id = ref.id; update b set data = data * 2; select error("abort")
"
bytecode [coordinator]
--------
 0            send_all        0      0      0
 1            send_all        1     18      0
 2                recv        0      0      0
 3                null        0      0      0
 4             cte_set        0      0      0
 5                recv        1      0      0
 6                null        0      0      0
 7             cte_set        1      0      0
 8              string        0     53      0      # abort
 9                push        0      0      0
10                call        0      -      1      # public.error()
11             cte_set        2      0      0
12                body        2      0      0
13                 ret        0      0      0


bytecode [shard]
--------
 0             int_min        0      0      0
 1                push        0      0      0
 2         cursor_open        0      0      4      # public.a (primary)
 3                 jmp       16      0      0
 4             int_min        0      0      0
 5                push        0      0      0
 6         cursor_open        1     17      8      # public.ref (primary)
 7                 jmp       14      0      0
 8          cursor_idx        0      0      0
 9          cursor_idx        1      1      0
10                 equ        2      0      1
11                jntr       13      2      0
12              delete        0      0      0
13         cursor_next        1      8      0
14        cursor_close        1      0      0
15         cursor_next        0      4      0
16        cursor_close        0      0      0
17                 ret        0      0      0
18             int_min        0      0      0
19                push        0      0      0
20         cursor_open        0     36     22      # public.b (primary)
21                 jmp       34      0      0
22         cursor_read        0      0      0
23                push        0      0      0
24                null        0      0      0
25                push        0      0      0
26          cursor_idx        0      0      1
27                 int        1      2      0
28                 mul        2      0      1
29                push        2      0      0
30              assign        0      3      1
31                push        0      0      0
32              update        0      0      0
33         cursor_next        0     22      0
34        cursor_close        0      0      0
35                 ret        0      0      0

"
delete from a, ref where a.id = ref.id; update b set data = data * 2; select * from a; select error("abort")
{"code": 1, "msg": "abort"}
select * from a
[[0, 0], [3, 0], [2, 0], [1, 0]]
select * from b
[[20, 0], [30, 0], [10, 0]]
# test: upsert a update b abort
explain insert into a values (1, 0), (3, 0) on conflict do update set data = id; update b set data = data * 2; select * from a; select error("abort")
"
bytecode [coordinator]
--------
 0                send        0      0      -      # public.a
 1            send_all        1     14      0
 2            send_all        2     32      0
 3                recv        0      0      0
 4                null        0      0      0
 5             cte_set        0      0      0
 6                recv        1      0      0
 7                null        0      0      0
 8             cte_set        1      0      0
 9                recv        2      0      0
10                bool        0      0      0
11                push        0      0      0
12          merge_recv        0     -1     -1
13             cte_set        2      0      0
14              string        0     41      0      # abort
15                push        0      0      0
16                call        0      -      1      # public.error()
17             cte_set        3      0      0
18                body        3      0      0
19                 ret        0      0      0


bytecode [shard]
--------
 0      cursor_prepare        0      -      0      # public.a
 1                 jmp       11      0      0
 2         cursor_read        0      0      0
 3                push        0      0      0
 4                null        0      0      0
 5                push        0      0      0
 6          cursor_idx        0      0      0
 7                push        0      0      0
 8              assign        0      3      1
 9                push        0      0      0
10              update        0      0      0
11              upsert        0      2      0
12        cursor_close        0      0      0
13                 ret        0      0      0
14             int_min        0      0      0
15                push        0      0      0
16         cursor_open        0      7     18      # public.b (primary)
17                 jmp       30      0      0
18         cursor_read        0      0      0
19                push        0      0      0
20                null        0      0      0
21                push        0      0      0
22          cursor_idx        0      0      1
23                 int        1      2      0
24                 mul        2      0      1
25                push        2      0      0
26              assign        0      3      1
27                push        0      0      0
28              update        0      0      0
29         cursor_next        0     18      0
30        cursor_close        0      0      0
31                 ret        0      0      0
32                 set        0      0      0
33             int_min        1      0      0
34                push        1      0      0
35         cursor_open        0     24     37      # public.a (primary)
36                 jmp       40      0      0
37         cursor_read        1      0      0
38             set_add        0      1      0
39         cursor_next        0     37      0
40        cursor_close        0      0      0
41              result        0      0      0
42                 ret        0      0      0

"
insert into a values (1, 0), (3, 0) on conflict do update set data = id; update b set data = data * 2; select * from a; select error("abort")
{"code": 1, "msg": "abort"}
select * from a
[[0, 0], [3, 0], [2, 0], [1, 0]]
select * from b
[[20, 0], [30, 0], [10, 0]]
drop table a
drop table b
drop table ref
disconnect S0
stop E0
