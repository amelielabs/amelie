open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3485 }];
connect E0 S0 127.0.0.1:3485;
# test: exists parsing
select exists;
{"msg": "select exists❰;❱ ⟵ ( expected"}
select exists 1;
{"msg": "select exists ❰1❱ ⟵ ( expected"}
select exists (;
{"msg": "select exists (❰;❱ ⟵ SELECT expected"}
select exists ();
{"msg": "select exists (❰)❱ ⟵ SELECT expected"}
select exists (1);
{"msg": "select exists (❰1❱ ⟵ SELECT expected"}
select exists (null);
{"msg": "select exists (❰null❱ ⟵ SELECT expected"}
select exists (false);
{"msg": "select exists (❰false❱ ⟵ SELECT expected"}
select exists ([]);
{"msg": "select exists (❰[❱ ⟵ SELECT expected"}
# test: exists (select)
create table test (id int primary key, data int);
insert into test values (1, 0), (2, 0);
explain select exists (select true from test limit 1);
[{
  "main": {
    "00": "set                 0      1      0     ",
    "01": "int                 1      -      0     # 1",
    "02": "table_open          2      0      8     # public.test (primary)",
    "03": "cjltd               8      1      0     ",
    "04": "bool                3      1      0     ",
    "05": "push                3      0      0     ",
    "06": "set_add             0      0      0     ",
    "07": "table_next          2      3      0     ",
    "08": "free                2      0      0     ",
    "09": "exists              1      0      0     ",
    "10": "ret                 1      0      -     "
  },
  "access": [["public.test", "ro_exclusive"]]
}]
select exists (select true from test limit 1);
[true]
select exists (select true from test where false);
[false]
# test: exists (select expr)
select exists (select null);
[true]
# test: exists (select) (more then one result)
select exists (select true from test);
[true]
explain select exists (select true from test where false);
[{
  "main": {
    "00": "set                 0      1      0     ",
    "01": "table_open          1      0      8     # public.test (primary)",
    "02": "bool                2      0      0     ",
    "03": "jntr                7      2      0     ",
    "04": "bool                2      1      0     ",
    "05": "push                2      0      0     ",
    "06": "set_add             0      0      0     ",
    "07": "table_next          1      2      0     ",
    "08": "free                1      0      0     ",
    "09": "exists              1      0      0     ",
    "10": "ret                 1      0      -     "
  },
  "access": [["public.test", "ro_exclusive"]]
}]
# test: exists (select) (more then one column)
select exists (select * from test);
[true]
drop table test;
disconnect S0;
close E0;
