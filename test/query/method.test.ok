open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3485 }]
connect E0 S0 localhost:3485
# test: method not exist
select 1 :: name()
{"code": 1, "msg": "name(): function not found"}
select 1 :: schema.name()
{"code": 1, "msg": "schema.name(): function not found"}
select 1 :: schema.name.name()
{"code": 1, "msg": "schema.name.name(): bad function call"}
# test: expr :: method()
select 1::
{"code": 1, "msg": "bad '::' or '->' expression"}
select 1::()
{"code": 1, "msg": "bad '::' or '->' expression"}
select 1::[]()
{"code": 1, "msg": "bad '::' or '->' expression"}
select 1::sizeof()
1
select "hello"::sizeof()
5
explain select system.config().directory::sizeof()
"
bytecode [coordinator]
--------
 0                call        0      -      0      # system.config()
 1              string        1      0      0      # directory
 2                 idx        2      0      1
 3                push        2      0      0
 4                call        0      -      1      # public.sizeof()
 5             cte_set        0      0      0
 6                body        0      0      0
 7                 ret        0      0      0

"
select system.config().directory::sizeof()
10
select []::set(0, 123)
[123]
select set([], 0, 123)
[123]
# test: expr :: method() :: method()
select [1]::set(1, 2)::set(2, 3)
[1, 2, 3]
select [1]::set(1, 2)::set(2, 3)::set(3, 4)
[1, 2, 3, 4]
select {}::set("a", 1)::set("b", 2)
{
  "a": 1,
  "b": 2
}
select {}::public.set("a", 1)::public.set("b", 2)
{
  "a": 1,
  "b": 2
}
# test: expr :: method
select 1::schema.name
{"code": 1, "msg": "schema.name(): function not found"}
select 1::schema.name.name
{"code": 1, "msg": "schema.name.name(): bad function call"}
explain select system.config().directory::sizeof
"
bytecode [coordinator]
--------
 0                call        0      -      0      # system.config()
 1              string        1      0      0      # directory
 2                 idx        2      0      1
 3                push        2      0      0
 4                call        0      -      1      # public.sizeof()
 5             cte_set        0      0      0
 6                body        0      0      0
 7                 ret        0      0      0

"
select system.config().directory::sizeof
10
select sizeof(system.config().directory)
10
# test: select
create table test (id int primary key serial, data object)
insert into test (data) values ({})
insert into test (data) values ({})
insert into test (data) values ({})
select data::set("id", id) from test
[{
  "id": 0
}, {
  "id": 1
}, {
  "id": 2
}]
drop table test
disconnect S0
close E0
