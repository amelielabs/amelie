open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3485 }]
connect E0 S0 localhost:3485
# test: case expr
select case
{"msg": "bad expression"}
select case 1
{"msg": "CASE <expr> expected"}
select case 1 then
{"msg": "CASE <expr> expected"}
select case 1 then 1
{"msg": "CASE <expr> expected"}
select case 1 when 1 then 1
{"msg": "CASE <expr> expected"}
select case 1 when 1 then 1 end
[1]
explain select case 1 when 1 then 1 end
[{
  "bytecode": {
    "coordinator": {
      "00": "jmp                 2      0      0     ",
      "01": "jmp                 11     0      0     ",
      "02": "int                 1      -      0     # 1",
      "03": "int                 2      -      0     # 1",
      "04": "equ                 3      1      2     ",
      "05": "jntr                9      3      0     ",
      "06": "int                 1      -      0     # 1",
      "07": "swap                0      1      0     ",
      "08": "jmp                 1      0      0     ",
      "09": "null                1      0      0     ",
      "10": "swap                0      1      0     ",
      "11": "nop                 0      0      0     ",
      "12": "cte_set             0      0      0     ",
      "13": "body                0      0      0     ",
      "14": "ret                 0      0      0     "
    }
  }
}]
select case 0 when 1 then 1 when 2 then 2 end
[null]
explain select case 0 when 1 then 1 when 2 then 2 end
[{
  "bytecode": {
    "coordinator": {
      "00": "jmp                 2      0      0     ",
      "01": "jmp                 18     0      0     ",
      "02": "int                 1      -      0     # 0",
      "03": "int                 2      -      0     # 1",
      "04": "equ                 3      1      2     ",
      "05": "jntr                9      3      0     ",
      "06": "int                 1      -      0     # 1",
      "07": "swap                0      1      0     ",
      "08": "jmp                 1      0      0     ",
      "09": "int                 1      -      0     # 0",
      "10": "int                 2      -      0     # 2",
      "11": "equ                 3      1      2     ",
      "12": "jntr                16     3      0     ",
      "13": "int                 1      -      0     # 2",
      "14": "swap                0      1      0     ",
      "15": "jmp                 1      0      0     ",
      "16": "null                1      0      0     ",
      "17": "swap                0      1      0     ",
      "18": "nop                 0      0      0     ",
      "19": "cte_set             0      0      0     ",
      "20": "body                0      0      0     ",
      "21": "ret                 0      0      0     "
    }
  }
}]
select case 0 when 1 then 1 when 2 then 2 else 'else' end
["else"]
explain select case 0 when 1 then 1 when 2 then 2 else 'else' end
[{
  "bytecode": {
    "coordinator": {
      "00": "jmp                 2      0      0     ",
      "01": "jmp                 18     0      0     ",
      "02": "int                 1      -      0     # 0",
      "03": "int                 2      -      0     # 1",
      "04": "equ                 3      1      2     ",
      "05": "jntr                9      3      0     ",
      "06": "int                 1      -      0     # 1",
      "07": "swap                0      1      0     ",
      "08": "jmp                 1      0      0     ",
      "09": "int                 1      -      0     # 0",
      "10": "int                 2      -      0     # 2",
      "11": "equ                 3      1      2     ",
      "12": "jntr                16     3      0     ",
      "13": "int                 1      -      0     # 2",
      "14": "swap                0      1      0     ",
      "15": "jmp                 1      0      0     ",
      "16": "string              1      0      0     # else",
      "17": "swap                0      1      0     ",
      "18": "nop                 0      0      0     ",
      "19": "cte_set             0      0      0     ",
      "20": "body                0      0      0     ",
      "21": "ret                 0      0      0     "
    }
  }
}]
select case [1,2,3] when [1,0] then 1 when [1,2,3] then 2 end
[2]
select case [1,2,3] when [1,0] then 1 when [1,2,3,4] then 2 end
[null]
select case [1,2,3] when [1,0] then 1 when [1,2,3,4] then 2 else [] end
[]
select case [1,2,3] when [1,0] then 1 when [1,2,3,4] then 2 else [] else [2] end
{"msg": "CASE ELSE redefined"}
select case [1,2,3] when [1,0] then 1 when [1,2,3,4] then 2 else [] else [2] when null then null end
{"msg": "CASE ELSE redefined"}
select case null when [1,0] then 1 when [1,2,3,4] then 2 else [] else [2] when null then null end
{"msg": "CASE ELSE redefined"}
select case null when [1,0] then 1 when [1,2,3,4] then 2 else [] when null then null end
[null]
explain select case null when [1,0] then 1 when [1,2,3,4] then 2 else [] when null then null end
[{
  "bytecode": {
    "coordinator": {
      "00": "jmp                 2      0      0     ",
      "01": "jmp                 37     0      0     ",
      "02": "null                1      0      0     ",
      "03": "int                 2      -      0     # 1",
      "04": "push                2      0      0     ",
      "05": "int                 2      -      0     # 0",
      "06": "push                2      0      0     ",
      "07": "array               2      2      0     ",
      "08": "equ                 3      1      2     ",
      "09": "jntr                13     3      0     ",
      "10": "int                 1      -      0     # 1",
      "11": "swap                0      1      0     ",
      "12": "jmp                 1      0      0     ",
      "13": "null                1      0      0     ",
      "14": "int                 2      -      0     # 1",
      "15": "push                2      0      0     ",
      "16": "int                 2      -      0     # 2",
      "17": "push                2      0      0     ",
      "18": "int                 2      -      0     # 3",
      "19": "push                2      0      0     ",
      "20": "int                 2      -      0     # 4",
      "21": "push                2      0      0     ",
      "22": "array               2      4      0     ",
      "23": "equ                 3      1      2     ",
      "24": "jntr                28     3      0     ",
      "25": "int                 1      -      0     # 2",
      "26": "swap                0      1      0     ",
      "27": "jmp                 1      0      0     ",
      "28": "null                1      0      0     ",
      "29": "null                2      0      0     ",
      "30": "equ                 3      1      2     ",
      "31": "jntr                35     3      0     ",
      "32": "null                1      0      0     ",
      "33": "swap                0      1      0     ",
      "34": "jmp                 1      0      0     ",
      "35": "array               1      0      0     ",
      "36": "swap                0      1      0     ",
      "37": "nop                 0      0      0     ",
      "38": "cte_set             0      0      0     ",
      "39": "body                0      0      0     ",
      "40": "ret                 0      0      0     "
    }
  }
}]
select case end
{"msg": "CASE <WHEN|ELSE> expected"}
select case else end
{"msg": "bad expression"}
select case else 1 end
[1]
# test: case
select case
{"msg": "bad expression"}
select case when 1
{"msg": "CASE WHEN expr <THEN> expected"}
select case when 1 then 1
{"msg": "CASE <expr> expected"}
select case when 1 then 1 end
[1]
explain select case when 1 then 1 end
[{
  "bytecode": {
    "coordinator": {
      "00": "jmp                 2      0      0     ",
      "01": "jmp                 9      0      0     ",
      "02": "int                 1      -      0     # 1",
      "03": "jntr                7      1      0     ",
      "04": "int                 2      -      0     # 1",
      "05": "swap                0      2      0     ",
      "06": "jmp                 1      0      0     ",
      "07": "null                1      0      0     ",
      "08": "swap                0      1      0     ",
      "09": "nop                 0      0      0     ",
      "10": "cte_set             0      0      0     ",
      "11": "body                0      0      0     ",
      "12": "ret                 0      0      0     "
    }
  }
}]
select case else
{"msg": "bad expression"}
select case else end
{"msg": "bad expression"}
select case else 1 end
[1]
select case when 1=1 then 1 end
[1]
select case when 1=0 then 1 when 1=3 when 1=1 then 'yes' end
{"msg": "CASE WHEN expr <THEN> expected"}
select case when 1=0 then 1 when 1=3 then 2 when 1=1 then 'yes' end
["yes"]
select case when 1=0 then 1 when 1=3 then 2 else 'no' end
["no"]
select case when 1=0 then 1 when 1=3 then 2 end
[null]
select case when [1,2,3] = [1,2,3] then true end
[true]
select case when select [1,2,3] = select [1,2,3] then true end
[true]
select case when select [1,2,3] = select [1,2,3,4] then true end
[null]
select case when select [1,2,3] = select [1,2,3,4] then true else 'else' end
["else"]
select case when select [1,2,3] = select [1,2,3,4] then true else 'else' else null end
{"msg": "CASE ELSE redefined"}
disconnect S0
close E0
