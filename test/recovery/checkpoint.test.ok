open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3485 }], "backends": 3
connect E0 S0 127.0.0.1:3485
# test: default checkpoint
select system.state().checkpoint
[1]
# test: checkpoint (no data)
checkpoint
select system.state().checkpoint
[1]
# test: create table
create table test (id serial primary key)
select system.state().lsn
[2]
# test: checkpoint
checkpoint
select system.state().lsn
[2]
select system.state().checkpoint
[2]
# test: restart/recover
disconnect S0
close E0
open E0
connect E0 S0 127.0.0.1:3485
select system.state().lsn
[2]
select system.state().checkpoint
[2]
select * from test
[]
# test: insert
insert into test () values (), (), ()
select identity_of("public", "test")
[3]
# test: restart/recover (checkpoint + wal)
disconnect S0
close E0
open E0
connect E0 S0 127.0.0.1:3485
select system.state().lsn
[3]
select system.state().checkpoint
[2]
select identity_of("public", "test")
[3]
select * from test
[0, 1, 2]
# test: checkpoint
checkpoint
select system.state().lsn
[3]
select system.state().checkpoint
[3]
# test: restart/recover (checkpoint)
disconnect S0
close E0
open E0
connect E0 S0 127.0.0.1:3485
select system.state().lsn
[3]
select system.state().checkpoint
[3]
select identity_of("public", "test")
[3]
select * from test
[0, 1, 2]
# test: create schema
create schema test
alter table public.test rename to test.test
select system.state().lsn
[5]
# test: restart/recover (checkpoint + wal)
disconnect S0
close E0
open E0
connect E0 S0 127.0.0.1:3485
select system.state().lsn
[5]
select system.state().checkpoint
[3]
show schemas
[{
  "name": "system",
  "system": true
}, {
  "name": "public",
  "system": true
}, {
  "name": "test",
  "system": false
}]
select identity_of("test", "test")
[3]
select * from test.test
[0, 1, 2]
# test: checkpoint
checkpoint
select system.state().lsn
[5]
select system.state().checkpoint
[5]
# test: restart/recover (checkpoint)
disconnect S0
close E0
open E0
connect E0 S0 127.0.0.1:3485
select system.state().lsn
[5]
select system.state().checkpoint
[5]
show schemas
[{
  "name": "system",
  "system": true
}, {
  "name": "public",
  "system": true
}, {
  "name": "test",
  "system": false
}]
select identity_of("test", "test")
[3]
select * from test.test
[0, 1, 2]
# test: create procedure
create procedure test(arg int) begin select 1 end
show procedures
[{
  "schema": "public",
  "name": "test",
  "text": "select 1",
  "columns": [{
    "name": "arg",
    "type": 2,
    "type_size": 4,
    "constraints": {
      "not_null": false,
      "random": false,
      "random_modulo": 9223372036854775807,
      "default": null,
      "as_identity": false,
      "as_stored": "",
      "as_resolved": ""
    }
  }],
  "vars": []
}]
select system.state().lsn
[6]
# test: restart/recover (checkpoint + wal)
disconnect S0
close E0
open E0
connect E0 S0 127.0.0.1:3485
show procedures
[{
  "schema": "public",
  "name": "test",
  "text": "select 1",
  "columns": [{
    "name": "arg",
    "type": 2,
    "type_size": 4,
    "constraints": {
      "not_null": false,
      "random": false,
      "random_modulo": 9223372036854775807,
      "default": null,
      "as_identity": false,
      "as_stored": "",
      "as_resolved": ""
    }
  }],
  "vars": []
}]
# test: checkpoint
checkpoint
select system.state().lsn
[6]
select system.state().checkpoint
[6]
# test: restart/recover (checkpoint)
disconnect S0
close E0
open E0
connect E0 S0 127.0.0.1:3485
show procedures
[{
  "schema": "public",
  "name": "test",
  "text": "select 1",
  "columns": [{
    "name": "arg",
    "type": 2,
    "type_size": 4,
    "constraints": {
      "not_null": false,
      "random": false,
      "random_modulo": 9223372036854775807,
      "default": null,
      "as_identity": false,
      "as_stored": "",
      "as_resolved": ""
    }
  }],
  "vars": []
}]
disconnect S0
close E0
