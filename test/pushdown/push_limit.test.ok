open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3485 }], "backends": 3
connect E0 S0 localhost:3485
# test: select from table limit
create table test (id int primary key serial)
[]
insert into test generate 20
[]
select * from test limit 100
[[0], [1], [6], [7], [8], [14], [15], [17], [2], [9], [10], [12], [18], [19], [3], [4], [5], [11], [13], [16]]
explain select * from test limit 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 1",
      "05": "merge_recv          1      0      -1    ",
      "06": "cte_set             0      1      0     ",
      "07": "body                0      0      0     ",
      "08": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int                 1      -      0     # 1",
      "02": "cntr_init           0      0      1     ",
      "03": "int_min             1      0      0     ",
      "04": "push                1      0      0     ",
      "05": "cursor_open         0      0      7     # public.test (primary)",
      "06": "jmp                 11     0      0     ",
      "07": "cntr_lte            0      0      6     ",
      "08": "cursor_read         1      0      0     ",
      "09": "set_add             0      1      0     ",
      "10": "cursor_next         0      7      0     ",
      "11": "cursor_close        0      0      0     ",
      "12": "result              0      0      0     ",
      "13": "ret                 0      0      0     "
    }
  }
}]
select * from test limit 1
[[0]]
select * from test limit 2
[[0], [1]]
select * from test limit 3
[[0], [1], [6]]
select * from test limit 4
[[0], [1], [6], [7]]
select * from test limit 10
[[0], [1], [6], [7], [8], [14], [15], [17], [2], [9]]
select * from test limit 20
[[0], [1], [6], [7], [8], [14], [15], [17], [2], [9], [10], [12], [18], [19], [3], [4], [5], [11], [13], [16]]
# test: select from table limit 0
explain select * from test limit 0
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 0",
      "05": "merge_recv          1      0      -1    ",
      "06": "cte_set             0      1      0     ",
      "07": "body                0      0      0     ",
      "08": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int                 1      -      0     # 0",
      "02": "cntr_init           0      0      1     ",
      "03": "int_min             1      0      0     ",
      "04": "push                1      0      0     ",
      "05": "cursor_open         0      0      7     # public.test (primary)",
      "06": "jmp                 11     0      0     ",
      "07": "cntr_lte            0      0      6     ",
      "08": "cursor_read         1      0      0     ",
      "09": "set_add             0      1      0     ",
      "10": "cursor_next         0      7      0     ",
      "11": "cursor_close        0      0      0     ",
      "12": "result              0      0      0     ",
      "13": "ret                 0      0      0     "
    }
  }
}]
select * from test limit 0
[]
select * from test limit -1
{"code": 1, "msg": "LIMIT/OFFSET: positive integer value expected"}
# test: select from table limit offset
explain select * from test limit 1 offset 0
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 1",
      "05": "int                 1      -      0     # 0",
      "06": "merge_recv          2      0      1     ",
      "07": "cte_set             0      2      0     ",
      "08": "body                0      0      0     ",
      "09": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int                 1      -      0     # 1",
      "02": "int                 2      -      0     # 0",
      "03": "add                 3      1      2     ",
      "04": "cntr_init           0      0      3     ",
      "05": "int_min             1      0      0     ",
      "06": "push                1      0      0     ",
      "07": "cursor_open         0      0      9     # public.test (primary)",
      "08": "jmp                 13     0      0     ",
      "09": "cntr_lte            0      0      8     ",
      "10": "cursor_read         1      0      0     ",
      "11": "set_add             0      1      0     ",
      "12": "cursor_next         0      9      0     ",
      "13": "cursor_close        0      0      0     ",
      "14": "result              0      0      0     ",
      "15": "ret                 0      0      0     "
    }
  }
}]
select * from test limit 1 offset 0
[[0]]
# test: select from table limit offset #2
explain select * from test limit 1 offset 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 1",
      "05": "int                 1      -      0     # 1",
      "06": "merge_recv          2      0      1     ",
      "07": "cte_set             0      2      0     ",
      "08": "body                0      0      0     ",
      "09": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int                 1      -      0     # 1",
      "02": "int                 2      -      0     # 1",
      "03": "add                 3      1      2     ",
      "04": "cntr_init           0      0      3     ",
      "05": "int_min             1      0      0     ",
      "06": "push                1      0      0     ",
      "07": "cursor_open         0      0      9     # public.test (primary)",
      "08": "jmp                 13     0      0     ",
      "09": "cntr_lte            0      0      8     ",
      "10": "cursor_read         1      0      0     ",
      "11": "set_add             0      1      0     ",
      "12": "cursor_next         0      9      0     ",
      "13": "cursor_close        0      0      0     ",
      "14": "result              0      0      0     ",
      "15": "ret                 0      0      0     "
    }
  }
}]
select * from test limit 1 offset 1
[[1]]
select * from test limit 1 offset 2
[[6]]
select * from test limit 1 offset 3
[[7]]
select * from test limit 1 offset 4
[[8]]
# test: select from table limit offset #3
select * from test limit 2 offset 1
[[1], [6]]
select * from test limit 2 offset 2
[[6], [7]]
select * from test limit 2 offset 3
[[7], [8]]
select * from test limit 2 offset 4
[[8], [14]]
# test: select from table limit offset #4
select * from test limit 2 offset 0
[[0], [1]]
select * from test limit 1 offset -1
{"code": 1, "msg": "OFFSET: positive integer value expected"}
# test: select from table limit offset #5
select * from test limit 0 offset 1
[]
select * from test limit 0 offset 2
[]
select * from test limit 0 offset 3
[]
select * from test limit 0 offset 4
[]
# test: select from table offset
explain select * from test offset 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 1",
      "05": "merge_recv          1      -1     0     ",
      "06": "cte_set             0      1      0     ",
      "07": "body                0      0      0     ",
      "08": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     "
    }
  }
}]
select * from test offset 1
[[1], [6], [7], [8], [14], [15], [17], [2], [9], [10], [12], [18], [19], [3], [4], [5], [11], [13], [16]]
select * from test offset 2
[[6], [7], [8], [14], [15], [17], [2], [9], [10], [12], [18], [19], [3], [4], [5], [11], [13], [16]]
select * from test offset 3
[[7], [8], [14], [15], [17], [2], [9], [10], [12], [18], [19], [3], [4], [5], [11], [13], [16]]
select * from test offset 4
[[8], [14], [15], [17], [2], [9], [10], [12], [18], [19], [3], [4], [5], [11], [13], [16]]
select * from test offset 0
[[0], [1], [6], [7], [8], [14], [15], [17], [2], [9], [10], [12], [18], [19], [3], [4], [5], [11], [13], [16]]
select * from test offset -1
{"code": 1, "msg": "OFFSET: positive integer value expected"}
drop table test
[]
# test: select from shared limit
create shared table test (id int primary key serial)
[]
insert into test generate 20
[]
select * from test limit 100
[[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]]
explain select * from test limit 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 1",
      "05": "merge_recv          1      0      -1    ",
      "06": "cte_set             0      1      0     ",
      "07": "body                0      0      0     ",
      "08": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int                 1      -      0     # 1",
      "02": "cntr_init           0      0      1     ",
      "03": "int_min             1      0      0     ",
      "04": "push                1      0      0     ",
      "05": "cursor_open         0      0      7     # public.test (primary)",
      "06": "jmp                 11     0      0     ",
      "07": "cntr_lte            0      0      6     ",
      "08": "cursor_read         1      0      0     ",
      "09": "set_add             0      1      0     ",
      "10": "cursor_next         0      7      0     ",
      "11": "cursor_close        0      0      0     ",
      "12": "result              0      0      0     ",
      "13": "ret                 0      0      0     "
    }
  }
}]
select * from test limit 1
[[0]]
select * from test limit 2
[[0], [1]]
select * from test limit 3
[[0], [1], [2]]
select * from test limit 4
[[0], [1], [2], [3]]
select * from test limit 10
[[0], [1], [2], [3], [4], [5], [6], [7], [8], [9]]
select * from test limit 20
[[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]]
# test: select from shared limit 0
explain select * from test limit 0
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 0",
      "05": "merge_recv          1      0      -1    ",
      "06": "cte_set             0      1      0     ",
      "07": "body                0      0      0     ",
      "08": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int                 1      -      0     # 0",
      "02": "cntr_init           0      0      1     ",
      "03": "int_min             1      0      0     ",
      "04": "push                1      0      0     ",
      "05": "cursor_open         0      0      7     # public.test (primary)",
      "06": "jmp                 11     0      0     ",
      "07": "cntr_lte            0      0      6     ",
      "08": "cursor_read         1      0      0     ",
      "09": "set_add             0      1      0     ",
      "10": "cursor_next         0      7      0     ",
      "11": "cursor_close        0      0      0     ",
      "12": "result              0      0      0     ",
      "13": "ret                 0      0      0     "
    }
  }
}]
select * from test limit 0
[]
select * from test limit -1
{"code": 1, "msg": "LIMIT/OFFSET: positive integer value expected"}
# test: select from shared limit offset
explain select * from test limit 1 offset 0
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 1",
      "05": "int                 1      -      0     # 0",
      "06": "merge_recv          2      0      1     ",
      "07": "cte_set             0      2      0     ",
      "08": "body                0      0      0     ",
      "09": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int                 1      -      0     # 1",
      "02": "int                 2      -      0     # 0",
      "03": "add                 3      1      2     ",
      "04": "cntr_init           0      0      3     ",
      "05": "int_min             1      0      0     ",
      "06": "push                1      0      0     ",
      "07": "cursor_open         0      0      9     # public.test (primary)",
      "08": "jmp                 13     0      0     ",
      "09": "cntr_lte            0      0      8     ",
      "10": "cursor_read         1      0      0     ",
      "11": "set_add             0      1      0     ",
      "12": "cursor_next         0      9      0     ",
      "13": "cursor_close        0      0      0     ",
      "14": "result              0      0      0     ",
      "15": "ret                 0      0      0     "
    }
  }
}]
select * from test limit 1 offset 0
[[0]]
# test: select from shared limit offset #2
explain select * from test limit 1 offset 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 1",
      "05": "int                 1      -      0     # 1",
      "06": "merge_recv          2      0      1     ",
      "07": "cte_set             0      2      0     ",
      "08": "body                0      0      0     ",
      "09": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int                 1      -      0     # 1",
      "02": "int                 2      -      0     # 1",
      "03": "add                 3      1      2     ",
      "04": "cntr_init           0      0      3     ",
      "05": "int_min             1      0      0     ",
      "06": "push                1      0      0     ",
      "07": "cursor_open         0      0      9     # public.test (primary)",
      "08": "jmp                 13     0      0     ",
      "09": "cntr_lte            0      0      8     ",
      "10": "cursor_read         1      0      0     ",
      "11": "set_add             0      1      0     ",
      "12": "cursor_next         0      9      0     ",
      "13": "cursor_close        0      0      0     ",
      "14": "result              0      0      0     ",
      "15": "ret                 0      0      0     "
    }
  }
}]
select * from test limit 1 offset 1
[[1]]
select * from test limit 1 offset 2
[[2]]
select * from test limit 1 offset 3
[[3]]
select * from test limit 1 offset 4
[[4]]
# test: select from shared limit offset #3
select * from test limit 2 offset 1
[[1], [2]]
select * from test limit 2 offset 2
[[2], [3]]
select * from test limit 2 offset 3
[[3], [4]]
select * from test limit 2 offset 4
[[4], [5]]
# test: select from shared limit offset #4
select * from test limit 2 offset 0
[[0], [1]]
select * from test limit 1 offset -1
{"code": 1, "msg": "OFFSET: positive integer value expected"}
# test: select from shared limit offset #5
select * from test limit 0 offset 1
[]
select * from test limit 0 offset 2
[]
select * from test limit 0 offset 3
[]
select * from test limit 0 offset 4
[]
# test: select from shared offset
explain select * from test offset 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "int                 0      -      0     # 1",
      "05": "merge_recv          1      -1     0     ",
      "06": "cte_set             0      1      0     ",
      "07": "body                0      0      0     ",
      "08": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     "
    }
  }
}]
select * from test offset 1
[[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]]
select * from test offset 2
[[2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]]
select * from test offset 3
[[3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]]
select * from test offset 4
[[4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]]
select * from test offset 0
[[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]]
select * from test offset -1
{"code": 1, "msg": "OFFSET: positive integer value expected"}
drop table test
[]
# test: select from expr limit
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] limit 100
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
explain select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] limit 1
[{
  "bytecode": {
    "coordinator": {
      "00": "set                 0      0      0     ",
      "01": "int                 1      -      0     # 1",
      "02": "cntr_init           0      0      1     ",
      "03": "int                 1      -      0     # 0",
      "04": "push                1      0      0     ",
      "05": "int                 1      -      0     # 1",
      "06": "push                1      0      0     ",
      "07": "int                 1      -      0     # 2",
      "08": "push                1      0      0     ",
      "09": "int                 1      -      0     # 3",
      "10": "push                1      0      0     ",
      "11": "int                 1      -      0     # 4",
      "12": "push                1      0      0     ",
      "13": "int                 1      -      0     # 5",
      "14": "push                1      0      0     ",
      "15": "int                 1      -      0     # 6",
      "16": "push                1      0      0     ",
      "17": "int                 1      -      0     # 7",
      "18": "push                1      0      0     ",
      "19": "int                 1      -      0     # 8",
      "20": "push                1      0      0     ",
      "21": "int                 1      -      0     # 9",
      "22": "push                1      0      0     ",
      "23": "int                 1      -      0     # 10",
      "24": "push                1      0      0     ",
      "25": "int                 1      -      0     # 11",
      "26": "push                1      0      0     ",
      "27": "int                 1      -      0     # 12",
      "28": "push                1      0      0     ",
      "29": "int                 1      -      0     # 13",
      "30": "push                1      0      0     ",
      "31": "int                 1      -      0     # 14",
      "32": "push                1      0      0     ",
      "33": "int                 1      -      0     # 15",
      "34": "push                1      0      0     ",
      "35": "int                 1      -      0     # 16",
      "36": "push                1      0      0     ",
      "37": "int                 1      -      0     # 17",
      "38": "push                1      0      0     ",
      "39": "int                 1      -      0     # 18",
      "40": "push                1      0      0     ",
      "41": "int                 1      -      0     # 19",
      "42": "push                1      0      0     ",
      "43": "array               1      20     0     ",
      "44": "cursor_open_expr    0      1      46    ",
      "45": "jmp                 50     0      0     ",
      "46": "cntr_lte            0      0      45    ",
      "47": "cursor_read         2      0      0     ",
      "48": "set_add             0      2      0     ",
      "49": "cursor_next         0      46     0     ",
      "50": "cursor_close        0      0      0     ",
      "51": "cte_set             0      0      0     ",
      "52": "body                0      0      0     ",
      "53": "ret                 0      0      0     "
    }
  }
}]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] limit 1
[0]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] limit 2
[0, 1]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] limit 3
[0, 1, 2]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] limit 4
[0, 1, 2, 3]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] limit 10
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] limit 20
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
# test: select from expr limit 0
explain select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] limit 0
[{
  "bytecode": {
    "coordinator": {
      "00": "set                 0      0      0     ",
      "01": "int                 1      -      0     # 0",
      "02": "cntr_init           0      0      1     ",
      "03": "int                 1      -      0     # 0",
      "04": "push                1      0      0     ",
      "05": "int                 1      -      0     # 1",
      "06": "push                1      0      0     ",
      "07": "int                 1      -      0     # 2",
      "08": "push                1      0      0     ",
      "09": "int                 1      -      0     # 3",
      "10": "push                1      0      0     ",
      "11": "int                 1      -      0     # 4",
      "12": "push                1      0      0     ",
      "13": "int                 1      -      0     # 5",
      "14": "push                1      0      0     ",
      "15": "int                 1      -      0     # 6",
      "16": "push                1      0      0     ",
      "17": "int                 1      -      0     # 7",
      "18": "push                1      0      0     ",
      "19": "int                 1      -      0     # 8",
      "20": "push                1      0      0     ",
      "21": "int                 1      -      0     # 9",
      "22": "push                1      0      0     ",
      "23": "int                 1      -      0     # 10",
      "24": "push                1      0      0     ",
      "25": "int                 1      -      0     # 11",
      "26": "push                1      0      0     ",
      "27": "int                 1      -      0     # 12",
      "28": "push                1      0      0     ",
      "29": "int                 1      -      0     # 13",
      "30": "push                1      0      0     ",
      "31": "int                 1      -      0     # 14",
      "32": "push                1      0      0     ",
      "33": "int                 1      -      0     # 15",
      "34": "push                1      0      0     ",
      "35": "int                 1      -      0     # 16",
      "36": "push                1      0      0     ",
      "37": "int                 1      -      0     # 17",
      "38": "push                1      0      0     ",
      "39": "int                 1      -      0     # 18",
      "40": "push                1      0      0     ",
      "41": "int                 1      -      0     # 19",
      "42": "push                1      0      0     ",
      "43": "array               1      20     0     ",
      "44": "cursor_open_expr    0      1      46    ",
      "45": "jmp                 50     0      0     ",
      "46": "cntr_lte            0      0      45    ",
      "47": "cursor_read         2      0      0     ",
      "48": "set_add             0      2      0     ",
      "49": "cursor_next         0      46     0     ",
      "50": "cursor_close        0      0      0     ",
      "51": "cte_set             0      0      0     ",
      "52": "body                0      0      0     ",
      "53": "ret                 0      0      0     "
    }
  }
}]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] limit 0
[]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] limit -1
{"code": 1, "msg": "LIMIT/OFFSET: positive integer value expected"}
# test: select from expr limit offset
explain select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] limit 1 offset 0
[{
  "bytecode": {
    "coordinator": {
      "00": "set                 0      0      0     ",
      "01": "int                 1      -      0     # 0",
      "02": "cntr_init           0      1      1     ",
      "03": "int                 1      -      0     # 1",
      "04": "cntr_init           0      0      1     ",
      "05": "int                 1      -      0     # 0",
      "06": "push                1      0      0     ",
      "07": "int                 1      -      0     # 1",
      "08": "push                1      0      0     ",
      "09": "int                 1      -      0     # 2",
      "10": "push                1      0      0     ",
      "11": "int                 1      -      0     # 3",
      "12": "push                1      0      0     ",
      "13": "int                 1      -      0     # 4",
      "14": "push                1      0      0     ",
      "15": "int                 1      -      0     # 5",
      "16": "push                1      0      0     ",
      "17": "int                 1      -      0     # 6",
      "18": "push                1      0      0     ",
      "19": "int                 1      -      0     # 7",
      "20": "push                1      0      0     ",
      "21": "int                 1      -      0     # 8",
      "22": "push                1      0      0     ",
      "23": "int                 1      -      0     # 9",
      "24": "push                1      0      0     ",
      "25": "int                 1      -      0     # 10",
      "26": "push                1      0      0     ",
      "27": "int                 1      -      0     # 11",
      "28": "push                1      0      0     ",
      "29": "int                 1      -      0     # 12",
      "30": "push                1      0      0     ",
      "31": "int                 1      -      0     # 13",
      "32": "push                1      0      0     ",
      "33": "int                 1      -      0     # 14",
      "34": "push                1      0      0     ",
      "35": "int                 1      -      0     # 15",
      "36": "push                1      0      0     ",
      "37": "int                 1      -      0     # 16",
      "38": "push                1      0      0     ",
      "39": "int                 1      -      0     # 17",
      "40": "push                1      0      0     ",
      "41": "int                 1      -      0     # 18",
      "42": "push                1      0      0     ",
      "43": "int                 1      -      0     # 19",
      "44": "push                1      0      0     ",
      "45": "array               1      20     0     ",
      "46": "cursor_open_expr    0      1      48    ",
      "47": "jmp                 53     0      0     ",
      "48": "cntr_gte            0      1      52    ",
      "49": "cntr_lte            0      0      47    ",
      "50": "cursor_read         2      0      0     ",
      "51": "set_add             0      2      0     ",
      "52": "cursor_next         0      48     0     ",
      "53": "cursor_close        0      0      0     ",
      "54": "cte_set             0      0      0     ",
      "55": "body                0      0      0     ",
      "56": "ret                 0      0      0     "
    }
  }
}]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] limit 1 offset 0
[0]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] limit 1 offset 1
[1]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] limit 1 offset 2
[2]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] limit 1 offset 3
[3]
# test: select from expr limit offset #2
explain select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] limit 2 offset 0
[{
  "bytecode": {
    "coordinator": {
      "00": "set                 0      0      0     ",
      "01": "int                 1      -      0     # 0",
      "02": "cntr_init           0      1      1     ",
      "03": "int                 1      -      0     # 2",
      "04": "cntr_init           0      0      1     ",
      "05": "int                 1      -      0     # 0",
      "06": "push                1      0      0     ",
      "07": "int                 1      -      0     # 1",
      "08": "push                1      0      0     ",
      "09": "int                 1      -      0     # 2",
      "10": "push                1      0      0     ",
      "11": "int                 1      -      0     # 3",
      "12": "push                1      0      0     ",
      "13": "int                 1      -      0     # 4",
      "14": "push                1      0      0     ",
      "15": "int                 1      -      0     # 5",
      "16": "push                1      0      0     ",
      "17": "int                 1      -      0     # 6",
      "18": "push                1      0      0     ",
      "19": "int                 1      -      0     # 7",
      "20": "push                1      0      0     ",
      "21": "int                 1      -      0     # 8",
      "22": "push                1      0      0     ",
      "23": "int                 1      -      0     # 9",
      "24": "push                1      0      0     ",
      "25": "int                 1      -      0     # 10",
      "26": "push                1      0      0     ",
      "27": "int                 1      -      0     # 11",
      "28": "push                1      0      0     ",
      "29": "int                 1      -      0     # 12",
      "30": "push                1      0      0     ",
      "31": "int                 1      -      0     # 13",
      "32": "push                1      0      0     ",
      "33": "int                 1      -      0     # 14",
      "34": "push                1      0      0     ",
      "35": "int                 1      -      0     # 15",
      "36": "push                1      0      0     ",
      "37": "int                 1      -      0     # 16",
      "38": "push                1      0      0     ",
      "39": "int                 1      -      0     # 17",
      "40": "push                1      0      0     ",
      "41": "int                 1      -      0     # 18",
      "42": "push                1      0      0     ",
      "43": "int                 1      -      0     # 19",
      "44": "push                1      0      0     ",
      "45": "array               1      20     0     ",
      "46": "cursor_open_expr    0      1      48    ",
      "47": "jmp                 53     0      0     ",
      "48": "cntr_gte            0      1      52    ",
      "49": "cntr_lte            0      0      47    ",
      "50": "cursor_read         2      0      0     ",
      "51": "set_add             0      2      0     ",
      "52": "cursor_next         0      48     0     ",
      "53": "cursor_close        0      0      0     ",
      "54": "cte_set             0      0      0     ",
      "55": "body                0      0      0     ",
      "56": "ret                 0      0      0     "
    }
  }
}]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] limit 2 offset 0
[0, 1]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] limit 2 offset 1
[1, 2]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] limit 2 offset 2
[2, 3]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] limit 2 offset 3
[3, 4]
# test: select from expr limit offset #3
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] limit 0 offset 0
[]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] limit 0 offset 1
[]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] limit 0 offset 3
[]
# test: select from expr offset
explain select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] offset 1
[{
  "bytecode": {
    "coordinator": {
      "00": "set                 0      0      0     ",
      "01": "int                 1      -      0     # 1",
      "02": "cntr_init           0      1      1     ",
      "03": "int                 1      -      0     # 0",
      "04": "push                1      0      0     ",
      "05": "int                 1      -      0     # 1",
      "06": "push                1      0      0     ",
      "07": "int                 1      -      0     # 2",
      "08": "push                1      0      0     ",
      "09": "int                 1      -      0     # 3",
      "10": "push                1      0      0     ",
      "11": "int                 1      -      0     # 4",
      "12": "push                1      0      0     ",
      "13": "int                 1      -      0     # 5",
      "14": "push                1      0      0     ",
      "15": "int                 1      -      0     # 6",
      "16": "push                1      0      0     ",
      "17": "int                 1      -      0     # 7",
      "18": "push                1      0      0     ",
      "19": "int                 1      -      0     # 8",
      "20": "push                1      0      0     ",
      "21": "int                 1      -      0     # 9",
      "22": "push                1      0      0     ",
      "23": "int                 1      -      0     # 10",
      "24": "push                1      0      0     ",
      "25": "int                 1      -      0     # 11",
      "26": "push                1      0      0     ",
      "27": "int                 1      -      0     # 12",
      "28": "push                1      0      0     ",
      "29": "int                 1      -      0     # 13",
      "30": "push                1      0      0     ",
      "31": "int                 1      -      0     # 14",
      "32": "push                1      0      0     ",
      "33": "int                 1      -      0     # 15",
      "34": "push                1      0      0     ",
      "35": "int                 1      -      0     # 16",
      "36": "push                1      0      0     ",
      "37": "int                 1      -      0     # 17",
      "38": "push                1      0      0     ",
      "39": "int                 1      -      0     # 18",
      "40": "push                1      0      0     ",
      "41": "int                 1      -      0     # 19",
      "42": "push                1      0      0     ",
      "43": "array               1      20     0     ",
      "44": "cursor_open_expr    0      1      46    ",
      "45": "jmp                 50     0      0     ",
      "46": "cntr_gte            0      1      49    ",
      "47": "cursor_read         2      0      0     ",
      "48": "set_add             0      2      0     ",
      "49": "cursor_next         0      46     0     ",
      "50": "cursor_close        0      0      0     ",
      "51": "cte_set             0      0      0     ",
      "52": "body                0      0      0     ",
      "53": "ret                 0      0      0     "
    }
  }
}]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] offset 1
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] offset 2
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] offset 3
[3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] offset 4
[4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] offset 0
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
select * from [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] offset -1
{"code": 1, "msg": "LIMIT/OFFSET: positive integer value expected"}
disconnect S0
close E0
