#

open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3485 }]
connect E0 S0 localhost:3485

# test: error
select error("error test")

# test: type
select 1::type
select "Hi"::type
select [1,2,3]::type
select {}::type
select (select * from [1,2,3])::type

# test: random
select random()::type
select public.random()::type

# test: random uuid
select random_uuid()::size

# test: md5
select md5("hello world")

# test: sha1
select sha1("hello world")

# test: base64
select "hello world"::encode("base64")
select "hello world"::encode("base64")::decode("base64")

select "{\"alg\":\"HS256\",\"typ\":\"JWT\"}"::encode("base64");
select decode("eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9", "base64")

select "{\"sub\":\"123456\",\"name\":\"test\",\"iat\":1516239022}"::encode("base64")
select "{\"sub\":\"123456\",\"name\":\"test\",\"iat\":1516239022}"::encode("base64")::decode("base64")
# without =
select "eyJzdWIiOiIxMjM0NTYiLCJuYW1lIjoidGVzdCIsImlhdCI6MTUxNjIzOTAyMn0"::decode("base64")

select system.config()::string::encode("base64")::decode("base64") = system.config()::string

# test: serial
select serial("public", "abc")
create table test (id int primary key serial)
insert into test () values (), (), ()
select serial("public", "test")
drop table test

disconnect S0
close E0
