open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3485 }]
connect E0 S0 127.0.0.1:3485
# test: alter table statement parsing
alter
{"msg": "alter ⟵ USER|SCHEMA|TABLE|INDEX|PROCEDURE expected"}
alter table
{"msg": "alter table ⟵ name expected"}
alter table 123
{"msg": "alter table ❰123❱ ⟵ name expected"}
alter table if
{"msg": "alter table if ⟵ EXISTS expected"}
alter table if ex
{"msg": "alter table if ❰ex❱ ⟵ EXISTS expected"}
alter table if exists
{"msg": "alter table if exists ⟵ name expected"}
alter table if exists 123
{"msg": "alter table if exists ❰123❱ ⟵ name expected"}
# test: alter table if exists
alter table test rename to test2
{"msg": "table 'test': not exists"}
alter table if exists test rename to test2
# test: alter table no command
create table test (id int primary key)
alter table test
{"msg": "alter table test ⟵ 'RENAME | ADD | DROP | SET | UNSET' expected"}
# test: rename
alter table test rename
{"msg": "alter table test rename ⟵ TO expected"}
alter table test rename to
{"msg": "alter table test rename to ⟵ name expected"}
alter table test rename to asf junk
{"msg": "alter table test rename to asf ❰junk❱ ⟵ ; expected"}
alter table test rename to abc
select system.table('abc').name
["abc"]
# test: rename table exists
create table test (id int primary key)
alter table abc rename to test
{"msg": "table 'test': already exists"}
drop table test
# test: rename schema not exists
alter table abc rename to test.test
{"msg": "schema 'test': not exists"}
# test: rename schema system
alter table abc rename to system.test
{"msg": "system schema <system> cannot be used to create objects"}
# test: rename schema
alter table abc rename to public.test
select system.table('abc').name
[null]
select system.table('test').name
["test"]
create schema test
alter table public.test rename to test.test
alter table test.test rename to public.test
select system.table('test').name
["test"]
drop table test
# test: set identity
create table test (id serial primary key, data int default 0)
insert into test () values ()
insert into test () values ()
insert into test () values ()
select * from test
[[0, 0], [1, 0], [2, 0]]
alter table test set
{"msg": "alter table test set ⟵ 'IDENTITY | LOGGED | UNLOGGED | COLUMN DEFAULT | COLUMN AS' expected"}
alter table test set identity 
{"msg": "alter table test set identity  ⟵ TO expected"}
alter table test set identity 123
{"msg": "alter table test set identity ❰123❱ ⟵ TO expected"}
alter table test set identity =
{"msg": "alter table test set identity ❰=❱ ⟵ TO expected"}
alter table test set identity to
{"msg": "alter table test set identity to ⟵ int expected"}
alter table test set identity to "123"
{"msg": "alter table test set identity to ❰\"123\"❱ ⟵ int expected"}
alter table test set identity to 0
insert into test () values ()
{"msg": "index 'primary': unique key constraint violation"}
insert into test () values ()
{"msg": "index 'primary': unique key constraint violation"}
insert into test () values ()
{"msg": "index 'primary': unique key constraint violation"}
insert into test () values ()
select * from test
[[0, 0], [1, 0], [2, 0], [3, 0]]
alter table test set identity to 0
insert into test () values ()
{"msg": "index 'primary': unique key constraint violation"}
select * from test
[[0, 0], [1, 0], [2, 0], [3, 0]]
drop table test
# test: set identity if exists
alter table if exists test set identity to 0
alter table test set identity to 0
{"msg": "table 'test': not exists"}
# test: set unlogged
create table test (id int primary key)
select system.table('test').unlogged
[false]
alter table test set unlogged
select system.table('test').unlogged
[true]
# test: set logged
alter table test set logged
select system.table('test').unlogged
[false]
drop table test
# test: rename column parsing
alter table rename
{"msg": "alter table ❰rename❱ ⟵ name expected"}
alter table test rename
{"msg": "alter table test rename ⟵ TO expected"}
alter table test rename column
{"msg": "alter table test rename column ⟵ name expected"}
alter table test rename column 1
{"msg": "alter table test rename column ❰1❱ ⟵ name expected"}
alter table test rename column data
{"msg": "alter table test rename column data ⟵ TO expected"}
alter table test rename column data
{"msg": "alter table test rename column data ⟵ TO expected"}
alter table test rename column data to
{"msg": "alter table test rename column data to ⟵ name expected"}
alter table test rename column data to 1
{"msg": "alter table test rename column data to ❰1❱ ⟵ name expected"}
# test: rename column
create table test (id serial primary key, data int default 0)
select system.table('test').columns
[[{
  "name": "id",
  "type": 2,
  "type_size": 8,
  "constraints": {
    "not_null": true,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": true,
    "as_stored": "",
    "as_resolved": ""
  }
}, {
  "name": "data",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": false,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": 0,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}]]
alter table test rename column data to data2
select system.table('test').columns
[[{
  "name": "id",
  "type": 2,
  "type_size": 8,
  "constraints": {
    "not_null": true,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": true,
    "as_stored": "",
    "as_resolved": ""
  }
}, {
  "name": "data2",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": false,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": 0,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}]]
select data2 from test
[]
drop table test
# test: rename column #2
create table test (id int primary key)
insert into test values (1),(2),(3)
select system.table('test').columns
[[{
  "name": "id",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": true,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}]]
alter table test rename column id to id2
select system.table('test').columns
[[{
  "name": "id2",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": true,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}]]
select * from test
[1, 2, 3]
select id2 from test
[1, 2, 3]
drop table test
# test: rename column (already exists)
create table test (id serial primary key, data int default 0)
select system.table('test').columns
[[{
  "name": "id",
  "type": 2,
  "type_size": 8,
  "constraints": {
    "not_null": true,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": true,
    "as_stored": "",
    "as_resolved": ""
  }
}, {
  "name": "data",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": false,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": 0,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}]]
alter table test rename column data to data
{"msg": "table 'test': column 'data' already exists"}
select system.table('test').columns
[[{
  "name": "id",
  "type": 2,
  "type_size": 8,
  "constraints": {
    "not_null": true,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": true,
    "as_stored": "",
    "as_resolved": ""
  }
}, {
  "name": "data",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": false,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": 0,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}]]
drop table test
# test: add column parsing
create table test (id int primary key)
alter table
{"msg": "alter table ⟵ name expected"}
alter table test
{"msg": "alter table test ⟵ 'RENAME | ADD | DROP | SET | UNSET' expected"}
alter table test add
{"msg": "alter table test add ⟵ COLUMN expected"}
alter table test add 1
{"msg": "alter table test add ❰1❱ ⟵ COLUMN expected"}
alter table test add column
{"msg": "alter table test add column ⟵ name expected"}
drop table test
# test: add column already exists
create table test (id int primary key, data int)
alter table test add column data int
{"msg": "table 'test': column 'data' already exists"}
drop table test
# test: add column primary key
create table test (id int primary key)
alter table test add column data int primary key
{"msg": "alter table test add column data int ❰primary❱ ⟵ PRIMARY KEY clause is not supported in this command"}
drop table test
# test: add column (empty table)
create table test (id int primary key)
select system.table('test').columns
[[{
  "name": "id",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": true,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}]]
alter table test add column data int
select system.table('test').columns
[[{
  "name": "id",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": true,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}, {
  "name": "data",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": false,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}]]
insert into test values (1,1), (2,2), (3,3)
select data from test
[1, 2, 3]
drop table test
# test: add column (null by default)
create table test (id int primary key)
insert into test values (1),(2),(3)
alter table test add column data int
select system.table('test').columns
[[{
  "name": "id",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": true,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}, {
  "name": "data",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": false,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}]]
select data from test
[null, null, null]
insert into test values (4,4), (5,5), (6,6)
select data from test
[null, null, null, 4, 5, 6]
drop table test
# test: add column (not null without default) (not supported)
create table test (id int primary key)
insert into test values (1),(2),(3)
alter table test add column data int not null
{"msg": "alter table test add column data int not null ⟵ NOT NULL currently not supported with ALTER"}
select system.table('test').columns
[[{
  "name": "id",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": true,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}]]
drop table test
# test: add column (default)
create table test (id int primary key)
insert into test values (1),(2),(3)
alter table test add column data int default 123
select system.table('test').columns
[[{
  "name": "id",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": true,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}, {
  "name": "data",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": false,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": 123,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}]]
select data from test
[null, null, null]
insert into test values (4,4), (5,5), (6,6)
select data from test
[null, null, null, 4, 5, 6]
insert into test (id) values (7), (8), (9)
select data from test
[null, null, null, 4, 5, 6, 123, 123, 123]
drop table test
# test: add column (default not null) (not supported)
create table test (id int primary key)
insert into test values (1),(2),(3)
alter table test add column data int not null default 123
{"msg": "alter table test add column data int not null default 123 ⟵ NOT NULL currently not supported with ALTER"}
select system.table('test').columns
[[{
  "name": "id",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": true,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}]]
drop table test
# test: add column (serial)
create table test (id int primary key)
insert into test values (1),(2),(3)
alter table test add column data serial
select system.table('test').columns
[[{
  "name": "id",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": true,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}, {
  "name": "data",
  "type": 2,
  "type_size": 8,
  "constraints": {
    "not_null": false,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": true,
    "as_stored": "",
    "as_resolved": ""
  }
}]]
select data from test
[null, null, null]
insert into test (id) values (4), (5), (6)
select data from test
[null, null, null, 0, 1, 2]
drop table test
# test: drop column parsing
create table test (id int primary key)
alter table
{"msg": "alter table ⟵ name expected"}
alter table test
{"msg": "alter table test ⟵ 'RENAME | ADD | DROP | SET | UNSET' expected"}
alter table test drop
{"msg": "alter table test drop ⟵ COLUMN expected"}
alter table test drop column
{"msg": "alter table test drop column ⟵ name expected"}
alter table test drop column 1
{"msg": "alter table test drop column ❰1❱ ⟵ name expected"}
drop table test
# test: drop column (not exists)
create table test (id int primary key)
alter table test drop column data
{"msg": "table 'test': column 'data' not exists"}
drop table test
# test: drop column (primary key)
create table test (id int primary key)
alter table test drop column id
{"msg": "table 'test': column 'id' is a key"}
drop table test
# test: drop column (secondary key)
create table test (id int primary key, data int)
create index i on test (data)
alter table test drop column data
{"msg": "table 'test': column 'data' is a key"}
drop table test
# test: drop column (empty)
create table test (id int primary key, a int)
select system.table('test').columns
[[{
  "name": "id",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": true,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}, {
  "name": "a",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": false,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}]]
alter table test drop column a
select system.table('test').columns
[[{
  "name": "id",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": true,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}]]
drop table test
# test: drop column (empty, reorder)
create table test (id int primary key, a int, b int)
select system.table('test').columns
[[{
  "name": "id",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": true,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}, {
  "name": "a",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": false,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}, {
  "name": "b",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": false,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}]]
alter table test drop column a
select system.table('test').columns
[[{
  "name": "id",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": true,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}, {
  "name": "b",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": false,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}]]
drop table test
# test: drop column
create table test (id int primary key, a text, b int)
select system.table('test').columns
[[{
  "name": "id",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": true,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}, {
  "name": "a",
  "type": 4,
  "type_size": 0,
  "constraints": {
    "not_null": false,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}, {
  "name": "b",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": false,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}]]
insert into test values (1,"id",1), (2,"a",2), (3,"b",3)
select * from test
[[1, "id", 1], [2, "a", 2], [3, "b", 3]]
select a from test
["id", "a", "b"]
select b from test
[1, 2, 3]
alter table test drop column a
select system.table('test').columns
[[{
  "name": "id",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": true,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}, {
  "name": "b",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": false,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}]]
select * from test
[[1, 1], [2, 2], [3, 3]]
select a from test
{"msg": "select ❰a❱ ⟵ column test.a not found"}
select b from test
[1, 2, 3]
select system.table('test').columns
[[{
  "name": "id",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": true,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}, {
  "name": "b",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": false,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}]]
alter table test drop column b
select system.table('test').columns
[[{
  "name": "id",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": true,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}]]
select * from test
[1, 2, 3]
select id from test
[1, 2, 3]
select a from test
{"msg": "select ❰a❱ ⟵ column test.a not found"}
select b from test
{"msg": "select ❰b❱ ⟵ column test.b not found"}
drop table test
# test: drop column (key order)
create table test (a text, b int, id int primary key)
select system.table('test').columns
[[{
  "name": "a",
  "type": 4,
  "type_size": 0,
  "constraints": {
    "not_null": false,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}, {
  "name": "b",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": false,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}, {
  "name": "id",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": true,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}]]
insert into test values ("id",1, 1), ("a",2, 2), ("b",3, 3)
select * from test
[["id", 1, 1], ["a", 2, 2], ["b", 3, 3]]
select id from test
[1, 2, 3]
select a from test
["id", "a", "b"]
select b from test
[1, 2, 3]
alter table test drop column a
select system.table('test').columns
[[{
  "name": "b",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": false,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}, {
  "name": "id",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": true,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}]]
select * from test
[[1, 1], [2, 2], [3, 3]]
select id from test
[1, 2, 3]
select a from test
{"msg": "select ❰a❱ ⟵ column test.a not found"}
select b from test
[1, 2, 3]
select system.table('test').columns
[[{
  "name": "b",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": false,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}, {
  "name": "id",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": true,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}]]
alter table test drop column b
select system.table('test').columns
[[{
  "name": "id",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": true,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}]]
select * from test
[1, 2, 3]
select id from test
[1, 2, 3]
select a from test
{"msg": "select ❰a❱ ⟵ column test.a not found"}
select b from test
{"msg": "select ❰b❱ ⟵ column test.b not found"}
drop table test
# test: drop column (unref keys)
create table test (id int primary key, b int)
create index i on test (b)
alter table test drop column b
{"msg": "table 'test': column 'b' is a key"}
drop index i on test
alter table test drop column b
drop table test
# test: set default
create table test (id int primary key, data int)
alter table test set column data default 0
insert into test (id) values (0)
select * from test
[[0, 0]]
select system.table('test').columns
[[{
  "name": "id",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": true,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}, {
  "name": "data",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": false,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": 0,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}]]
# test: unset default
alter table test unset column data default
insert into test (id) values (1)
select * from test
[[0, 0], [1, null]]
select system.table('test').columns
[[{
  "name": "id",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": true,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}, {
  "name": "data",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": false,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}]]
# test: set identity
alter table test set column data as identity
insert into test (id) values (2)
select * from test
[[0, 0], [1, null], [2, 2]]
select system.table('test').columns
[[{
  "name": "id",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": true,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}, {
  "name": "data",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": false,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": true,
    "as_stored": "",
    "as_resolved": ""
  }
}]]
# test: unset identity
alter table test unset column data as identity
select system.table('test').columns
[[{
  "name": "id",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": true,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}, {
  "name": "data",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": false,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}]]
# test: set stored
alter table test set column data as (1 + 1) stored
insert into test (id) values (3)
select * from test
[[0, 0], [1, null], [2, 2], [3, 2]]
select system.table('test').columns
[[{
  "name": "id",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": true,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}, {
  "name": "data",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": false,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "1 + 1",
    "as_resolved": ""
  }
}]]
# test: unset stored
alter table test unset column data as stored
insert into test (id) values (4)
select * from test
[[0, 0], [1, null], [2, 2], [3, 2], [4, null]]
select system.table('test').columns
[[{
  "name": "id",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": true,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}, {
  "name": "data",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": false,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}]]
# test: set resolved
alter table test set column data default 0
alter table test set column data as (data + 1) resolved
insert into test (id) values (5)
insert into test (id) values (5)
insert into test (id) values (5)
select * from test
[[0, 0], [1, null], [2, 2], [3, 2], [4, null], [5, 2]]
select system.table('test').columns
[[{
  "name": "id",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": true,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}, {
  "name": "data",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": false,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": 0,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": "data + 1"
  }
}]]
# test: unset resolved
alter table test unset column data as resolved
insert into test (id) values (5)
{"msg": "index 'primary': unique key constraint violation"}
select * from test
[[0, 0], [1, null], [2, 2], [3, 2], [4, null], [5, 2]]
select system.table('test').columns
[[{
  "name": "id",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": true,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": null,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}, {
  "name": "data",
  "type": 2,
  "type_size": 4,
  "constraints": {
    "not_null": false,
    "random": false,
    "random_modulo": 9223372036854775807,
    "default": 0,
    "as_identity": false,
    "as_stored": "",
    "as_resolved": ""
  }
}]]
drop table test
disconnect S0
close E0
