open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3485 }];
connect E0 S0 127.0.0.1:3485;
# test: int
explain select 0;
[{
  "main": {
    "00": "int                 0      -      0     # 0",
    "01": "ret                 0      0      -     "
  },
  "access": []
}]
select 0;
[0]
select 1234;
[1234]
explain select -1234;
[{
  "main": {
    "00": "int                 0      -      0     # -1234",
    "01": "ret                 0      0      -     "
  },
  "access": []
}]
select -1234;
[-1234]
# test: int limits
select 4294967295;
[4294967295]
select -4294967295;
[-4294967295]
select 9223372036854775807;
[9223372036854775807]
select -9223372036854775807;
[-9223372036854775807]
# test: int overflow
select -92233720368547758077;
{"msg": "select  ⟵ int overflow"}
select 18446744073709551615;
{"msg": "select  ⟵ int overflow"}
select 184467440737095516155;
{"msg": "select  ⟵ int overflow"}
# test: int = bool
select 1 = true;
[true]
select 1 = false;
[false]
explain select 1 = true;
[{
  "main": {
    "00": "int                 0      -      0     # 1",
    "01": "bool                1      1      0     ",
    "02": "equii               2      0      1     ",
    "03": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int = int
select 1 = 1;
[true]
select 1 = 123;
[false]
select 1 = 0;
[false]
explain select 1 = 18;
[{
  "main": {
    "00": "int                 0      -      0     # 1",
    "01": "int                 1      -      0     # 18",
    "02": "equii               2      0      1     ",
    "03": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int = double
select 1 = 1.0;
[true]
select 1 = 12.3;
[false]
select 1 = 0.14;
[false]
explain select 1 = 1.0000;
[{
  "main": {
    "00": "int                 0      -      0     # 1",
    "01": "double              1      0      0     # 1",
    "02": "equif               2      0      1     ",
    "03": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int = timestamp
select 0 = '1970-01-01 00:00:00'::timestamp;
[true]
explain select 0 = '1970-01-01 00:00:00'::timestamp;
[{
  "main": {
    "00": "int                 0      -      0     # 0",
    "01": "push_string         0      0      0     # 1970-01-01 00:00:00",
    "02": "call                1      -      1     # public.timestamp()",
    "03": "equii               2      0      1     ",
    "04": "ret                 2      0      -     "
  },
  "access": []
}]
select 0 = current_timestamp;
[false]
# test: int = null
select 1 = null;
[null]
explain select 1 = null;
[{
  "main": {
    "00": "int                 0      -      0     # 1",
    "01": "null                1      0      0     ",
    "02": "nullop              2      0      1     ",
    "03": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int = unsupported
select 1 = [1,2,3];
{"msg": "select 1 = ❰[❱ ⟵ operation int = json is not supported"}
select 1 = [1,2,3]::vector;
{"msg": "select 1 = [1,2,3]❰::❱ ⟵ operation int = vector is not supported"}
# test: int <> bool
select 1 <> true;
[false]
select 1 <> false;
[true]
explain select 1 <> true;
[{
  "main": {
    "00": "int                 0      -      0     # 1",
    "01": "bool                1      1      0     ",
    "02": "equii               2      0      1     ",
    "03": "not                 0      2      0     ",
    "04": "ret                 0      0      -     "
  },
  "access": []
}]
# test: int <> int
select 1 <> 1;
[false]
select 1 <> 123;
[true]
select 1 <> 0;
[true]
explain select 1 <> 18;
[{
  "main": {
    "00": "int                 0      -      0     # 1",
    "01": "int                 1      -      0     # 18",
    "02": "equii               2      0      1     ",
    "03": "not                 0      2      0     ",
    "04": "ret                 0      0      -     "
  },
  "access": []
}]
# test: int <> double
select 1 <> 1.0;
[false]
select 1 <> 12.3;
[true]
select 1 <> 0.14;
[true]
explain select 1 <> 1.0000;
[{
  "main": {
    "00": "int                 0      -      0     # 1",
    "01": "double              1      0      0     # 1",
    "02": "equif               2      0      1     ",
    "03": "not                 0      2      0     ",
    "04": "ret                 0      0      -     "
  },
  "access": []
}]
# test: int <> timestamp
select 0 <> '1970-01-01 00:00:00'::timestamp;
[false]
explain select 0 <> '1970-01-01 00:00:00'::timestamp;
[{
  "main": {
    "00": "int                 0      -      0     # 0",
    "01": "push_string         0      0      0     # 1970-01-01 00:00:00",
    "02": "call                1      -      1     # public.timestamp()",
    "03": "equii               2      0      1     ",
    "04": "not                 0      2      0     ",
    "05": "ret                 0      0      -     "
  },
  "access": []
}]
select 0 <> current_timestamp;
[true]
# test: int <> null
select 1 <> null;
[null]
explain select 1 <> null;
[{
  "main": {
    "00": "int                 0      -      0     # 1",
    "01": "null                1      0      0     ",
    "02": "nullop              2      0      1     ",
    "03": "not                 0      2      0     ",
    "04": "ret                 0      0      -     "
  },
  "access": []
}]
# test: int <> unsupported
select 1 <> [1,2,3];
{"msg": "select 1 <> ❰[❱ ⟵ operation int = json is not supported"}
select 1 <> [1,2,3]::vector;
{"msg": "select 1 <> [1,2,3]❰::❱ ⟵ operation int = vector is not supported"}
# test: int >= int
select 1 >= 0;
[true]
select 1 >= 1;
[true]
select 1 >= 2;
[false]
select -1 >= -0;
[false]
select -1 >= 0;
[false]
select -1 >= -10;
[true]
select -11 >= -10;
[false]
explain select -1 >= -10;
[{
  "main": {
    "00": "int                 0      -      0     # -1",
    "01": "int                 1      -      0     # -10",
    "02": "gteii               2      0      1     ",
    "03": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int >= double
select 1 >= 0.11;
[true]
select 1 >= 1.11;
[false]
explain select 1 >= 1.11;
[{
  "main": {
    "00": "int                 0      -      0     # 1",
    "01": "double              1      0      0     # 1.11",
    "02": "gteif               2      0      1     ",
    "03": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int >= timestamp
select 1 >= current_timestamp;
[false]
select 0 >= '1970-01-01 00:00:00'::timestamp;
[true]
explain select 0 >= '1970-01-01 00:00:00'::timestamp;
[{
  "main": {
    "00": "int                 0      -      0     # 0",
    "01": "push_string         0      0      0     # 1970-01-01 00:00:00",
    "02": "call                1      -      1     # public.timestamp()",
    "03": "gteii               2      0      1     ",
    "04": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int >= null
select 1 >= null;
[null]
explain select 1 >= null;
[{
  "main": {
    "00": "int                 0      -      0     # 1",
    "01": "null                1      0      0     ",
    "02": "nullop              2      0      1     ",
    "03": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int >= unsupported
explain select 1 >= [];
{"msg": "explain select 1 >= ❰[❱ ⟵ operation int >= json is not supported"}
# test: int > int
select 1 > 0;
[true]
select 1 > 1;
[false]
select 1 > 2;
[false]
select -1 > -0;
[false]
select -1 > 0;
[false]
select -1 > -10;
[true]
select -11 > -10;
[false]
explain select -1 > -10;
[{
  "main": {
    "00": "int                 0      -      0     # -1",
    "01": "int                 1      -      0     # -10",
    "02": "gtii                2      0      1     ",
    "03": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int > double
select 1 > 0.11;
[true]
select 1 > 1.11;
[false]
explain select 1 > 1.11;
[{
  "main": {
    "00": "int                 0      -      0     # 1",
    "01": "double              1      0      0     # 1.11",
    "02": "gtif                2      0      1     ",
    "03": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int > timestamp
select 1 > current_timestamp;
[false]
select 0 > '1970-01-01 00:00:00'::timestamp;
[false]
explain select 0 > '1970-01-01 00:00:00'::timestamp;
[{
  "main": {
    "00": "int                 0      -      0     # 0",
    "01": "push_string         0      0      0     # 1970-01-01 00:00:00",
    "02": "call                1      -      1     # public.timestamp()",
    "03": "gtii                2      0      1     ",
    "04": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int > null
select 1 > null;
[null]
explain select 1 > null;
[{
  "main": {
    "00": "int                 0      -      0     # 1",
    "01": "null                1      0      0     ",
    "02": "nullop              2      0      1     ",
    "03": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int > unsupported
explain select 1 > [];
{"msg": "explain select 1 > ❰[❱ ⟵ operation int > json is not supported"}
# test: int <= int
select 1 <= 0;
[false]
select 1 <= 1;
[true]
select 1 <= 2;
[true]
select -1 <= -0;
[true]
select -1 <= 0;
[true]
select -1 <= -10;
[false]
select -11 <= -10;
[true]
explain select -1 <= -10;
[{
  "main": {
    "00": "int                 0      -      0     # -1",
    "01": "int                 1      -      0     # -10",
    "02": "lteii               2      0      1     ",
    "03": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int <= double
select 1 <= 0.11;
[false]
select 1 <= 1.11;
[true]
explain select 1 <= 1.11;
[{
  "main": {
    "00": "int                 0      -      0     # 1",
    "01": "double              1      0      0     # 1.11",
    "02": "lteif               2      0      1     ",
    "03": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int <= timestamp
select 1 <= current_timestamp;
[true]
select 0 <= '1970-01-01 00:00:00'::timestamp;
[true]
explain select 0 <= '1970-01-01 00:00:00'::timestamp;
[{
  "main": {
    "00": "int                 0      -      0     # 0",
    "01": "push_string         0      0      0     # 1970-01-01 00:00:00",
    "02": "call                1      -      1     # public.timestamp()",
    "03": "lteii               2      0      1     ",
    "04": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int <= null
select 1 <= null;
[null]
explain select 1 <= null;
[{
  "main": {
    "00": "int                 0      -      0     # 1",
    "01": "null                1      0      0     ",
    "02": "nullop              2      0      1     ",
    "03": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int <= unsupported
explain select 1 <= [];
{"msg": "explain select 1 <= ❰[❱ ⟵ operation int <= json is not supported"}
# test: int < int
select 1 < 0;
[false]
select 1 < 1;
[false]
select 1 < 2;
[true]
select -1 < -0;
[true]
select -1 < 0;
[true]
select -1 < -10;
[false]
select -11 < -10;
[true]
explain select -1 < -10;
[{
  "main": {
    "00": "int                 0      -      0     # -1",
    "01": "int                 1      -      0     # -10",
    "02": "ltii                2      0      1     ",
    "03": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int < double
select 1 < 0.11;
[false]
select 1 < 1.11;
[true]
explain select 1 < 1.11;
[{
  "main": {
    "00": "int                 0      -      0     # 1",
    "01": "double              1      0      0     # 1.11",
    "02": "ltif                2      0      1     ",
    "03": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int < timestamp
select 1 < current_timestamp;
[true]
select 0 < '1970-01-01 00:00:00'::timestamp;
[false]
explain select 0 < '1970-01-01 00:00:00'::timestamp;
[{
  "main": {
    "00": "int                 0      -      0     # 0",
    "01": "push_string         0      0      0     # 1970-01-01 00:00:00",
    "02": "call                1      -      1     # public.timestamp()",
    "03": "ltii                2      0      1     ",
    "04": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int < null
select 1 < null;
[null]
explain select 1 < null;
[{
  "main": {
    "00": "int                 0      -      0     # 1",
    "01": "null                1      0      0     ",
    "02": "nullop              2      0      1     ",
    "03": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int < unsupported
explain select 1 < [];
{"msg": "explain select 1 < ❰[❱ ⟵ operation int < json is not supported"}
# test: int + int
select 1 + 1;
[2]
explain select 1 + 1;
[{
  "main": {
    "00": "int                 0      -      0     # 1",
    "01": "int                 1      -      0     # 1",
    "02": "addii               2      0      1     ",
    "03": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int + int (overflow)
select 1 + 4294967295;
[4294967296]
select 1 + -4294967295;
[-4294967294]
select 1 + 9223372036854775807;
{"msg": "int + int overflow"}
select 1 + -9223372036854775807;
[-9223372036854775806]
# test: int + double
select 1 + 1.5;
[2.5]
explain select 1 + 1.5;
[{
  "main": {
    "00": "int                 0      -      0     # 1",
    "01": "double              1      0      0     # 1.5",
    "02": "addif               2      0      1     ",
    "03": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int + null
select 1 + null;
[null]
# test: int + unsupported
select 1 + [];
{"msg": "select 1 + ❰[❱ ⟵ operation int + json is not supported"}
# test: int - int
select 1 - 1;
[0]
explain select 1 - 1;
[{
  "main": {
    "00": "int                 0      -      0     # 1",
    "01": "int                 1      -      0     # 1",
    "02": "subii               2      0      1     ",
    "03": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int - int (overflow)
select 1 - 4294967295;
[-4294967294]
select 1 - -4294967295;
[4294967296]
select 1 - 9223372036854775807;
[-9223372036854775806]
select 1 - -9223372036854775807;
{"msg": "int - int overflow"}
# test: int - double
select 1 - 1.5;
[-0.5]
explain select 1 - 1.5;
[{
  "main": {
    "00": "int                 0      -      0     # 1",
    "01": "double              1      0      0     # 1.5",
    "02": "subif               2      0      1     ",
    "03": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int - null
select 1 - null;
[null]
# test: int - unsupported
select 1 - [];
{"msg": "select 1 - ❰[❱ ⟵ operation int - json is not supported"}
# test: int * int
select 2 * 2;
[4]
explain select 2 * 2;
[{
  "main": {
    "00": "int                 0      -      0     # 2",
    "01": "int                 1      -      0     # 2",
    "02": "mulii               2      0      1     ",
    "03": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int * int (overflow)
select 4 * 4294967295;
[17179869180]
select 4 * -4294967295;
[-17179869180]
select 10 * 9223372036854775807;
{"msg": "int * int overflow"}
select 10 * -9223372036854775807;
{"msg": "int * int overflow"}
# test: int * double
select 2 * 1.5;
[3]
explain select 2 * 1.5;
[{
  "main": {
    "00": "int                 0      -      0     # 2",
    "01": "double              1      0      0     # 1.5",
    "02": "mulif               2      0      1     ",
    "03": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int * null
select 1 * null;
[null]
# test: int * unsupported
select 1 * [];
{"msg": "select 1 * ❰[❱ ⟵ operation int * json is not supported"}
# test: int / int
select 2 / 2;
[1]
explain select 2 / 2;
[{
  "main": {
    "00": "int                 0      -      0     # 2",
    "01": "int                 1      -      0     # 2",
    "02": "divii               2      0      1     ",
    "03": "ret                 2      0      -     "
  },
  "access": []
}]
select 2 / 0;
{"msg": "zero division"}
select 4 / 4294967295;
[0]
# test: int / double
select 35 / 1.5;
[23.3333]
explain select 35 / 1.5;
[{
  "main": {
    "00": "int                 0      -      0     # 35",
    "01": "double              1      0      0     # 1.5",
    "02": "divif               2      0      1     ",
    "03": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int / null
select 1 * null;
[null]
# test: int / unsupported
select 1 * [];
{"msg": "select 1 * ❰[❱ ⟵ operation int * json is not supported"}
# test: int % int
select 8 % 3;
[2]
explain select 8 % 3;
[{
  "main": {
    "00": "int                 0      -      0     # 8",
    "01": "int                 1      -      0     # 3",
    "02": "modii               2      0      1     ",
    "03": "ret                 2      0      -     "
  },
  "access": []
}]
select 8 % 0;
{"msg": "zero division"}
# test: int % null
select 1 % null;
[null]
# test: int % unsupported
select 1 % [];
{"msg": "select 1 % ❰[❱ ⟵ operation int % json is not supported"}
# test: int | int
select 60 | 13;
[61]
explain select 60 | 13;
[{
  "main": {
    "00": "int                 0      -      0     # 60",
    "01": "int                 1      -      0     # 13",
    "02": "borii               2      0      1     ",
    "03": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int | null
select 60 | null;
[null]
explain select 60 | null;
[{
  "main": {
    "00": "int                 0      -      0     # 60",
    "01": "null                1      0      0     ",
    "02": "nullop              2      0      1     ",
    "03": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int | unsupported
select 60 | [];
{"msg": "select 60 | ❰[❱ ⟵ operation int | json is not supported"}
# test: int & int
select 60 & 13;
[12]
explain select 60 & 13;
[{
  "main": {
    "00": "int                 0      -      0     # 60",
    "01": "int                 1      -      0     # 13",
    "02": "bandii              2      0      1     ",
    "03": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int & null
select 60 & null;
[null]
explain select 60 & null;
[{
  "main": {
    "00": "int                 0      -      0     # 60",
    "01": "null                1      0      0     ",
    "02": "nullop              2      0      1     ",
    "03": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int & unsupported
select 60 & [];
{"msg": "select 60 & ❰[❱ ⟵ operation int & json is not supported"}
# test: int ^ int
select 60 ^ 13;
[49]
explain select 60 ^ 13;
[{
  "main": {
    "00": "int                 0      -      0     # 60",
    "01": "int                 1      -      0     # 13",
    "02": "bxorii              2      0      1     ",
    "03": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int ^ null
select 60 ^ null;
[null]
explain select 60 ^ null;
[{
  "main": {
    "00": "int                 0      -      0     # 60",
    "01": "null                1      0      0     ",
    "02": "nullop              2      0      1     ",
    "03": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int ^ unsupported
select 60 ^ [];
{"msg": "select 60 ^ ❰[❱ ⟵ operation int ^ json is not supported"}
# test: int << int
select 60 << 2;
[240]
explain select 60 << 2;
[{
  "main": {
    "00": "int                 0      -      0     # 60",
    "01": "int                 1      -      0     # 2",
    "02": "bshlii              2      0      1     ",
    "03": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int << null
select 60 << null;
[null]
# test: int << unsupported
select 60 << [];
{"msg": "select 60 << ❰[❱ ⟵ operation int << json is not supported"}
# test: int >> int
select 60 >> 2;
[15]
explain select 60 >> 2;
[{
  "main": {
    "00": "int                 0      -      0     # 60",
    "01": "int                 1      -      0     # 2",
    "02": "bshrii              2      0      1     ",
    "03": "ret                 2      0      -     "
  },
  "access": []
}]
# test: int >> null
select 60 >> null;
[null]
# test: int >> unsupported
select 60 >> [];
{"msg": "select 60 >> ❰[❱ ⟵ operation int >> json is not supported"}
# test: ~int
select ~10;
[-11]
# test: -int
select -18;
[-18]
explain select -18;
[{
  "main": {
    "00": "int                 0      -      0     # -18",
    "01": "ret                 0      0      -     "
  },
  "access": []
}]
disconnect S0;
close E0;
