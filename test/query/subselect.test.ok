open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3485 }]
connect E0 S0 localhost:3485
# test: select (select const)
select (select 0)
[0]
select (select 1234)
[1234]
select (select null)
[null]
select (select "hello")
["hello"]
# test: select (select expr)
select (select 1 + 1)
[2]
select (select 2 * 2)
[4]
select (select 8 * 8)
[64]
select (select 64 / ( 4 + 4 ))
[8]
select (select 64 / 0)
{"code": 1, "msg": "zero division"}
select (select 64 % 0)
{"code": 1, "msg": "zero division"}
select (select 1 + 1) + (select 2)
[4]
# test: select (select [])
select (select [])
[]
select (select [1])
[1]
select (select [1,2,3])
[1, 2, 3]
select (select [1,2,3])[1]
[2]
# test: select (select function())
select system.schemas()
[{
  "name": "system",
  "system": true,
  "create": false
}, {
  "name": "public",
  "system": true,
  "create": true
}]
select (select system.schemas())
[{
  "name": "system",
  "system": true,
  "create": false
}, {
  "name": "public",
  "system": true,
  "create": true
}]
# test: select (select {})
select (select {})
[{
}]
select (select {"a": 1})
[{
  "a": 1
}]
select (select {"a": 1, "b": null})
[{
  "a": 1,
  "b": null
}]
select (select {"a": 1, "b": null}).a
[1]
# test: select (select *) from expr
explain select (select *) from [1,2,3]
{"code": 1, "msg": "<*> no FROM clause defined"}
select (select *) from [1,2,3]
{"code": 1, "msg": "<*> no FROM clause defined"}
# test: select (select alias.*) from expr
explain select (select t.*) from [1,2,3] t
["
bytecode [coordinator]
--------
 0                 set        0      0      0
 1                 int        1      1      0
 2                push        1      0      0
 3                 int        1      2      0
 4                push        1      0      0
 5                 int        1      3      0
 6                push        1      0      0
 7               array        1      3      0
 8    cursor_open_expr        0      1     10
 9                 jmp       13      0      0
10         cursor_read        2      0      0
11             set_add        0      2      0
12         cursor_next        0     10      0
13        cursor_close        0      0      0
14             cte_set        0      0      0
15                body        0      0      0
16                 ret        0      0      0

"]
select (select t.*) from [1,2,3] t
[1, 2, 3]
select (select t.*) from [1,2,3]
{"code": 1, "msg": "<t> target not found"}
# test: select (select alias.**) from expr
select (select t.**) from {"a": 1, "b": 2} t
["a", "b"]
select (select t.**) from {"a": 1, "b": 2}
{"code": 1, "msg": "<t> target not found"}
# test: select (select *) from shared
create shared table test (id int primary key)
[]
insert into test values (1)
[]
insert into test values (2)
[]
insert into test values (3)
[]
select (select *) from test
{"code": 1, "msg": "<*> no FROM clause defined"}
select (select test.*) from test
[[1], [2], [3]]
# test: select (select target.*) from shared
explain select (select test.*) from test
["
bytecode [coordinator]
--------
 0          send_first        0      0      0
 1                recv        0      0      0
 2                bool        0      0      0
 3                push        0      0      0
 4          merge_recv        0     -1     -1
 5             cte_set        0      0      0
 6                body        0      0      0
 7                 ret        0      0      0


bytecode [node]
--------
 0                 set        0      0      0
 1             int_min        1      0      0
 2                push        1      0      0
 3         cursor_open        0      0      5      # public.test (primary)
 4                 jmp        8      0      0
 5         cursor_read        1      0      0
 6             set_add        0      1      0
 7         cursor_next        0      5      0
 8        cursor_close        0      0      0
 9              result        0      0      0
10                 ret        0      0      0

"]
select (select test.*) from test
[[1], [2], [3]]
# test: select (select alias.*) from shared
select (select t.*) from test t
[[1], [2], [3]]
select (select t.*) from test
{"code": 1, "msg": "<t> target not found"}
select (select t) from test t
{"code": 1, "msg": "<t> target column cannot be found"}
# test: select (select target.column) from shared
explain select (select test.id) from test
["
bytecode [coordinator]
--------
 0          send_first        0      0      0
 1                recv        0      0      0
 2                bool        0      0      0
 3                push        0      0      0
 4          merge_recv        0     -1     -1
 5             cte_set        0      0      0
 6                body        0      0      0
 7                 ret        0      0      0


bytecode [node]
--------
 0                 set        0      0      0
 1             int_min        1      0      0
 2                push        1      0      0
 3         cursor_open        0      0      5      # public.test (primary)
 4                 jmp        8      0      0
 5          cursor_idx        1      0      0
 6             set_add        0      1      0
 7         cursor_next        0      5      0
 8        cursor_close        0      0      0
 9              result        0      0      0
10                 ret        0      0      0

"]
select (select test.id) from test
[1, 2, 3]
select (select id) from test
{"code": 1, "msg": "<id> target column cannot be found"}
# test: select (select alias.column) from shared
explain select (select t.id) from test t
["
bytecode [coordinator]
--------
 0          send_first        0      0      0
 1                recv        0      0      0
 2                bool        0      0      0
 3                push        0      0      0
 4          merge_recv        0     -1     -1
 5             cte_set        0      0      0
 6                body        0      0      0
 7                 ret        0      0      0


bytecode [node]
--------
 0                 set        0      0      0
 1             int_min        1      0      0
 2                push        1      0      0
 3         cursor_open        0      0      5      # public.test (primary)
 4                 jmp        8      0      0
 5          cursor_idx        1      0      0
 6             set_add        0      1      0
 7         cursor_next        0      5      0
 8        cursor_close        0      0      0
 9              result        0      0      0
10                 ret        0      0      0

"]
select (select t.id) from test
{"code": 1, "msg": "<t> target cannot be found"}
select (select t.id) from test t
[1, 2, 3]
drop table test
[]
create shared table test (obj object, primary key(obj.data.id int))
[]
insert into test {"data": {"id": 1}}
[]
insert into test {"data": {"id": 2}}
[]
insert into test {"data": {"id": 3}}
[]
# test: select (select target.path) from shared
select (select test) from test
{"code": 1, "msg": "<test> target column cannot be found"}
select (select test.obj) from test
[{
  "data": {
    "id": 1
  }
}, {
  "data": {
    "id": 2
  }
}, {
  "data": {
    "id": 3
  }
}]
select (select test.obj.data) from test
[{
  "id": 1
}, {
  "id": 2
}, {
  "id": 3
}]
select (select test.obj.data.id) from test
[1, 2, 3]
# test: select (select alias.path) from shared
select (select t) from test t
{"code": 1, "msg": "<t> target column cannot be found"}
select (select t.obj) from test t
[{
  "data": {
    "id": 1
  }
}, {
  "data": {
    "id": 2
  }
}, {
  "data": {
    "id": 3
  }
}]
select (select t.obj.data) from test t
[{
  "id": 1
}, {
  "id": 2
}, {
  "id": 3
}]
select (select t.obj.data.id) from test t
[1, 2, 3]
# test: select (select from outer column) from shared
select t.obj from test t
[{
  "data": {
    "id": 1
  }
}, {
  "data": {
    "id": 2
  }
}, {
  "data": {
    "id": 3
  }
}]
select (select ** from t.obj) from test t
{"code": 1, "msg": "<t.obj> table or view is not found"}
select (select **, * from (t.obj.data)) from test t
[[["id", 1]], [["id", 2]], [["id", 3]]]
drop table test
[]
# test: select from (select const)
select * from (select 0)
{"code": 1, "msg": "FROM: array, map or data type expected, but got int"}
select * from (select null)
{"code": 1, "msg": "FROM: array, map or data type expected, but got null"}
# test: select from (select [])
select * from (select [])
[]
select * from (select [1])
[1]
select * from (select [1,2,3])
[1, 2, 3]
# test: select from (select function())
select * from system.schemas()
[{
  "name": "system",
  "system": true,
  "create": false
}, {
  "name": "public",
  "system": true,
  "create": true
}]
select * from (select system.schemas())
[{
  "name": "system",
  "system": true,
  "create": false
}, {
  "name": "public",
  "system": true,
  "create": true
}]
# test: select from (select {})
select * from (select {})
[]
select * from (select {"a": 1})
[1]
select * from (select {"a": 1, "b": null})
[1, null]
# test: select from (select expr) alias
select alias.* from (select [1,2,3]) alias
[1, 2, 3]
select alias from (select [1,2,3]) alias
{"code": 1, "msg": "column alias: row or map expected, but got int"}
select alias from (select alias.*) alias
{"code": 1, "msg": "*: not in active scan"}
select alias from (select alias) alias
{"code": 1, "msg": "<alias> target column cannot be found"}
select (select 123 from alias) from (select alias) alias
{"code": 1, "msg": "<alias> table or view is not found"}
select (select 123 from [1,2,3] alias) from (select alias) alias
{"code": 1, "msg": "<alias> target is redefined, please use different alias for the target"}
# test: select * from (select from shared)
create shared table test (id int primary key)
[]
insert into test values (1)
[]
insert into test values (2)
[]
insert into test values (3)
[]
select * from (select * from test)
[[1], [2], [3]]
explain select * from (select * from test)
["
bytecode [coordinator]
--------
 0          send_first        0      0      0
 1             recv_to        0      0      0
 2             cte_set        0      0      0
 3                body        0      0      0
 4                 ret        0      0      0


bytecode [node]
--------
 0                 set        0      0      0
 1                 set        1      0      0
 2             int_min        2      0      0
 3                push        2      0      0
 4         cursor_open        0      0      6      # public.test (primary)
 5                 jmp        9      0      0
 6         cursor_read        2      0      0
 7             set_add        1      2      0
 8         cursor_next        0      6      0
 9        cursor_close        0      0      0
10    cursor_open_expr        1      1     12
11                 jmp       15      0      0
12         cursor_read        2      1      0
13             set_add        0      2      0
14         cursor_next        1     12      0
15        cursor_close        1      0      0
16              result        0      0      0
17                 ret        0      0      0

"]
# test: select target.* from (select from shared)
select test.* from (select * from test)
{"code": 1, "msg": "*: not in active scan"}
select test from (select * from test)
{"code": 1, "msg": "column test: row or map expected, but got array"}
# test: select alias.* from (select from shared)
select alias from (select * from test) alias
{"code": 1, "msg": "column alias: row or map expected, but got array"}
select alias.* from (select * from test) alias
[[1], [2], [3]]
select alias.* from (select test.* from test) alias
[[1], [2], [3]]
select alias.* from (select x.* from test x) alias
[[1], [2], [3]]
select alias.* from (select alias.* from test alias) alias
{"code": 1, "msg": "<alias> target is redefined, please use different alias for the target"}
select alias.* from (select * from test) alias
[[1], [2], [3]]
drop table test
[]
create shared table test (obj object, primary key(obj.data.id int))
[]
insert into test {"data": {"id": 1}}
[]
insert into test {"data": {"id": 2}}
[]
insert into test {"data": {"id": 3}}
[]
# test: select target.path from (select from shared)
select obj from (select * from test)
{"code": 1, "msg": "column obj: row or map expected, but got array"}
select * from (select * from test) alias
[[{
  "data": {
    "id": 1
  }
}], [{
  "data": {
    "id": 2
  }
}], [{
  "data": {
    "id": 3
  }
}]]
select *[0] from (select * from test) alias
[{
  "data": {
    "id": 1
  }
}, {
  "data": {
    "id": 2
  }
}, {
  "data": {
    "id": 3
  }
}]
select alias.*[0] from (select * from test) alias
[{
  "data": {
    "id": 1
  }
}, {
  "data": {
    "id": 2
  }
}, {
  "data": {
    "id": 3
  }
}]
select alias.*[0].data.id from (select * from test) alias
[1, 2, 3]
drop table test
[]
# test: select (select *) from view
create shared table test (id int primary key)
[]
create view test_view as select [1,2,3]
[]
explain select (select *) from test_view
{"code": 1, "msg": "<*> no FROM clause defined"}
select (select *) from test_view
{"code": 1, "msg": "<*> no FROM clause defined"}
# test: select (select alias.*) from view
explain select (select t.*) from test_view t
["
bytecode [coordinator]
--------
 0                 set        0      0      0
 1                 int        1      1      0
 2                push        1      0      0
 3                 int        1      2      0
 4                push        1      0      0
 5                 int        1      3      0
 6                push        1      0      0
 7               array        1      3      0
 8    cursor_open_expr        0      1     10
 9                 jmp       13      0      0
10         cursor_read        2      0      0
11             set_add        0      2      0
12         cursor_next        0     10      0
13        cursor_close        0      0      0
14             cte_set        0      0      0
15                body        0      0      0
16                 ret        0      0      0

"]
select (select t.*) from test_view t
[1, 2, 3]
select (select t.*) from test_view
{"code": 1, "msg": "<t> target not found"}
# test: select (select alias.**) from view
drop view test_view
[]
create view test_view as select {"a": 1, "b": 2}
[]
select (select t.**) from test_view t
["a", "b"]
select (select t.**) from test_view
{"code": 1, "msg": "<t> target not found"}
select ** from test_view
["a", "b"]
drop view test_view
[]
# test: select (select target.*) from shared view
insert into test values (1)
[]
insert into test values (2)
[]
insert into test values (3)
[]
create view test_view as select * from test
[]
explain select * from test_view
["
bytecode [coordinator]
--------
 0          send_first        0      0      0
 1             recv_to        0      0      0
 2             cte_set        0      0      0
 3                body        0      0      0
 4                 ret        0      0      0


bytecode [node]
--------
 0                 set        0      0      0
 1                 set        1      0      0
 2             int_min        2      0      0
 3                push        2      0      0
 4         cursor_open        0      0      6      # public.test (primary)
 5                 jmp        9      0      0
 6         cursor_read        2      0      0
 7             set_add        1      2      0
 8         cursor_next        0      6      0
 9        cursor_close        0      0      0
10    cursor_open_expr        1      1     12
11                 jmp       15      0      0
12         cursor_read        2      1      0
13             set_add        0      2      0
14         cursor_next        1     12      0
15        cursor_close        1      0      0
16              result        0      0      0
17                 ret        0      0      0

"]
select * from test_view
[[1], [2], [3]]
drop view test_view
[]
drop table test
[]
# test: select (select from shared)
create shared table test (id int primary key)
[]
insert into test values (1)
[]
insert into test values (2)
[]
insert into test values (3)
[]
explain select (select * from test)
["
bytecode [coordinator]
--------
 0          send_first        0      0      0
 1             recv_to        0      0      0
 2             cte_set        0      0      0
 3                body        0      0      0
 4                 ret        0      0      0


bytecode [node]
--------
 0                 set        0      0      0
 1             int_min        1      0      0
 2                push        1      0      0
 3         cursor_open        0      0      5      # public.test (primary)
 4                 jmp        8      0      0
 5         cursor_read        1      0      0
 6             set_add        0      1      0
 7         cursor_next        0      5      0
 8        cursor_close        0      0      0
 9              result        0      0      0
10                 ret        0      0      0

"]
select (select * from test)
[[1], [2], [3]]
# test: select (select from shared) no result
select (select * from test where false)
[]
# test: select (select from shared) from shared
select (select * from test) from test
{"code": 1, "msg": "<test> target is redefined, please use different alias for the target"}
explain select (select i.* from test i) from test
["
bytecode [coordinator]
--------
 0          send_first        0      0      0
 1                recv        0      0      0
 2                bool        0      0      0
 3                push        0      0      0
 4          merge_recv        0     -1     -1
 5             cte_set        0      0      0
 6                body        0      0      0
 7                 ret        0      0      0


bytecode [node]
--------
 0                 set        0      0      0
 1             int_min        1      0      0
 2                push        1      0      0
 3         cursor_open        1      0      5      # public.test (primary)
 4                 jmp       16      0      0
 5                 set        1      0      0
 6             int_min        2      0      0
 7                push        2      0      0
 8         cursor_open        0     20     10      # public.test (primary)
 9                 jmp       13      0      0
10         cursor_read        2      0      0
11             set_add        1      2      0
12         cursor_next        0     10      0
13        cursor_close        0      0      0
14             set_add        0      1      0
15         cursor_next        1      5      0
16        cursor_close        1      0      0
17              result        0      0      0
18                 ret        0      0      0

"]
# test: select (select from shared) from shared #2
explain select (select i.* from test i where test.id = i.id) from test
["
bytecode [coordinator]
--------
 0          send_first        0      0      0
 1                recv        0      0      0
 2                bool        0      0      0
 3                push        0      0      0
 4          merge_recv        0     -1     -1
 5             cte_set        0      0      0
 6                body        0      0      0
 7                 ret        0      0      0


bytecode [node]
--------
 0                 set        0      0      0
 1             int_min        1      0      0
 2                push        1      0      0
 3         cursor_open        1      0      5      # public.test (primary)
 4                 jmp       20      0      0
 5                 set        1      0      0
 6             int_min        2      0      0
 7                push        2      0      0
 8         cursor_open        0     20     10      # public.test (primary)
 9                 jmp       17      0      0
10          cursor_idx        2      1      0
11          cursor_idx        3      0      0
12                 equ        4      2      3
13                jntr       16      4      0
14         cursor_read        2      0      0
15             set_add        1      2      0
16         cursor_next        0     10      0
17        cursor_close        0      0      0
18             set_add        0      1      0
19         cursor_next        1      5      0
20        cursor_close        1      0      0
21              result        0      0      0
22                 ret        0      0      0

"]
select (select i.* from test i where test.id = i.id) from test
[[[1]], [[2]], [[3]]]
# test: select (select from shared) from shared #3
create shared table a (id int primary key serial, data int default 0)
[]
create shared table b (id int primary key serial, data int default 1)
[]
insert into a () values (), (), ()
[]
insert into b () values (), (), ()
[]
explain select (select * from b where a.id = b.id) from a
["
bytecode [coordinator]
--------
 0          send_first        0      0      0
 1                recv        0      0      0
 2                bool        0      0      0
 3                push        0      0      0
 4          merge_recv        0     -1     -1
 5             cte_set        0      0      0
 6                body        0      0      0
 7                 ret        0      0      0


bytecode [node]
--------
 0                 set        0      0      0
 1             int_min        1      0      0
 2                push        1      0      0
 3         cursor_open        1      0      5      # public.a (primary)
 4                 jmp       20      0      0
 5                 set        1      0      0
 6             int_min        2      0      0
 7                push        2      0      0
 8         cursor_open        0     17     10      # public.b (primary)
 9                 jmp       17      0      0
10          cursor_idx        2      1      0
11          cursor_idx        3      0      0
12                 equ        4      2      3
13                jntr       16      4      0
14         cursor_read        2      0      0
15             set_add        1      2      0
16         cursor_next        0     10      0
17        cursor_close        0      0      0
18             set_add        0      1      0
19         cursor_next        1      5      0
20        cursor_close        1      0      0
21              result        0      0      0
22                 ret        0      0      0

"]
select (select * from b where a.id = b.id) from a
[[[0, 1]], [[1, 1]], [[2, 1]]]
select (select a.*, b.* from b where a.id = b.id) from a
[[[[0, 0], [0, 1]]], [[[1, 0], [1, 1]]], [[[2, 0], [2, 1]]]]
# test: select from table where (select from shared)
explain select * from a where (select true from b where a.id = b.id)
["
bytecode [coordinator]
--------
 0          send_first        0      0      0
 1                recv        0      0      0
 2                bool        0      0      0
 3                push        0      0      0
 4          merge_recv        0     -1     -1
 5             cte_set        0      0      0
 6                body        0      0      0
 7                 ret        0      0      0


bytecode [node]
--------
 0                 set        0      0      0
 1             int_min        1      0      0
 2                push        1      0      0
 3         cursor_open        0      0      5      # public.a (primary)
 4                 jmp       22      0      0
 5                 set        1      0      0
 6             int_min        2      0      0
 7                push        2      0      0
 8         cursor_open        1     17     10      # public.b (primary)
 9                 jmp       17      0      0
10          cursor_idx        2      0      0
11          cursor_idx        3      1      0
12                 equ        4      2      3
13                jntr       16      4      0
14                bool        2      1      0
15             set_add        1      2      0
16         cursor_next        1     10      0
17        cursor_close        1      0      0
18                jntr       21      1      0
19         cursor_read        1      0      0
20             set_add        0      1      0
21         cursor_next        0      5      0
22        cursor_close        0      0      0
23              result        0      0      0
24                 ret        0      0      0

"]
select * from a where (select true from b where a.id = b.id)
[[0, 0], [1, 0], [2, 0]]
drop table a
[]
drop table b
[]
drop table test
[]
# test: select set operations
create shared table a (id int primary key serial, data int default 0)
[]
create shared table b (id int primary key serial, data int default 1)
[]
explain select length(select * from a)
["
bytecode [coordinator]
--------
 0          send_first        0      0      0
 1             recv_to        0      0      0
 2             cte_set        0      0      0
 3                body        0      0      0
 4                 ret        0      0      0


bytecode [node]
--------
 0                 set        0      0      0
 1             int_min        1      0      0
 2                push        1      0      0
 3         cursor_open        0      0      5      # public.a (primary)
 4                 jmp        8      0      0
 5         cursor_read        1      0      0
 6             set_add        0      1      0
 7         cursor_next        0      5      0
 8        cursor_close        0      0      0
 9                push        0      0      0
10                call        0      -      1      # public.length()
11              result        0      0      0
12                 ret        0      0      0

"]
select length(select * from a)
[0]
explain select (select * from a)[0]
["
bytecode [coordinator]
--------
 0          send_first        0      0      0
 1             recv_to        0      0      0
 2             cte_set        0      0      0
 3                body        0      0      0
 4                 ret        0      0      0


bytecode [node]
--------
 0                 set        0      0      0
 1             int_min        1      0      0
 2                push        1      0      0
 3         cursor_open        0      0      5      # public.a (primary)
 4                 jmp        8      0      0
 5         cursor_read        1      0      0
 6             set_add        0      1      0
 7         cursor_next        0      5      0
 8        cursor_close        0      0      0
 9                 int        1      0      0
10                 idx        2      0      1
11              result        2      0      0
12                 ret        0      0      0

"]
select (select * from a)[0]
{"code": 1, "msg": "[]: map or array expected"}
explain select (select a.* from a) + (select b.* from b)
["
bytecode [coordinator]
--------
 0          send_first        0      0      0
 1             recv_to        0      0      0
 2             cte_set        0      0      0
 3                body        0      0      0
 4                 ret        0      0      0


bytecode [node]
--------
 0                 set        0      0      0
 1             int_min        1      0      0
 2                push        1      0      0
 3         cursor_open        0      0      5      # public.a (primary)
 4                 jmp        8      0      0
 5         cursor_read        1      0      0
 6             set_add        0      1      0
 7         cursor_next        0      5      0
 8        cursor_close        0      0      0
 9                 set        1      0      0
10             int_min        2      0      0
11                push        2      0      0
12         cursor_open        1     17     14      # public.b (primary)
13                 jmp       17      0      0
14         cursor_read        2      1      0
15             set_add        1      2      0
16         cursor_next        1     14      0
17        cursor_close        1      0      0
18                 add        2      0      1
19              result        2      0      0
20                 ret        0      0      0

"]
select (select a.* from a) + (select b.* from b)
{"code": 1, "msg": "bad + expression types"}
drop table a
[]
drop table b
[]
disconnect S0
close E0
