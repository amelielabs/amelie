open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3485 }], "backends": 3
connect E0 S0 localhost:3485
# test: select from shared group by empty
create shared table test (id int primary key, data int)
explain select * from test group by id
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "group_merge_recv    0      0      0     ",
      "03": "set                 1      0      0     ",
      "04": "cursor_open_expr    1      0      6     ",
      "05": "jmp                 9      0      0     ",
      "06": "cursor_read         2      1      0     ",
      "07": "set_add             1      2      0     ",
      "08": "cursor_next         1      6      0     ",
      "09": "cursor_close        1      0      0     ",
      "10": "cte_set             0      1      0     ",
      "11": "body                0      0      0     ",
      "12": "ret                 0      0      0     "
    },
    "node": {
      "00": "group               0      1      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 9      0      0     ",
      "05": "cursor_idx          1      0      0     ",
      "06": "push                1      0      0     ",
      "07": "group_write         0      0      0     ",
      "08": "cursor_next         0      5      0     ",
      "09": "cursor_close        0      0      0     ",
      "10": "result              0      0      0     ",
      "11": "ret                 0      0      0     "
    }
  }
}]
select * from test group by id
[]
# test: select from shared group by
insert into test values (0, 0)
insert into test values (1, 0)
insert into test values (2, 1)
insert into test values (3, 1)
insert into test values (4, 2)
select * from test
[[0, 0], [1, 0], [2, 1], [3, 1], [4, 2]]
explain select * from test group by id
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "group_merge_recv    0      0      0     ",
      "03": "set                 1      0      0     ",
      "04": "cursor_open_expr    1      0      6     ",
      "05": "jmp                 9      0      0     ",
      "06": "cursor_read         2      1      0     ",
      "07": "set_add             1      2      0     ",
      "08": "cursor_next         1      6      0     ",
      "09": "cursor_close        1      0      0     ",
      "10": "cte_set             0      1      0     ",
      "11": "body                0      0      0     ",
      "12": "ret                 0      0      0     "
    },
    "node": {
      "00": "group               0      1      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 9      0      0     ",
      "05": "cursor_idx          1      0      0     ",
      "06": "push                1      0      0     ",
      "07": "group_write         0      0      0     ",
      "08": "cursor_next         0      5      0     ",
      "09": "cursor_close        0      0      0     ",
      "10": "result              0      0      0     ",
      "11": "ret                 0      0      0     "
    }
  }
}]
select * from test group by id
[0, 1, 2, 3, 4]
explain select * from test group by data
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "group_merge_recv    0      0      0     ",
      "03": "set                 1      0      0     ",
      "04": "cursor_open_expr    1      0      6     ",
      "05": "jmp                 9      0      0     ",
      "06": "cursor_read         2      1      0     ",
      "07": "set_add             1      2      0     ",
      "08": "cursor_next         1      6      0     ",
      "09": "cursor_close        1      0      0     ",
      "10": "cte_set             0      1      0     ",
      "11": "body                0      0      0     ",
      "12": "ret                 0      0      0     "
    },
    "node": {
      "00": "group               0      1      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 9      0      0     ",
      "05": "cursor_idx          1      0      1     ",
      "06": "push                1      0      0     ",
      "07": "group_write         0      0      0     ",
      "08": "cursor_next         0      5      0     ",
      "09": "cursor_close        0      0      0     ",
      "10": "result              0      0      0     ",
      "11": "ret                 0      0      0     "
    }
  }
}]
select * from test group by data
[0, 1, 2]
# test: select from shared group by keys only
select data from test group by id
{"msg": "<data> only GROUP BY keys can be selected"}
# test: select from shared group by column
select id from test group by id
[0, 1, 2, 3, 4]
select data from test group by data
[0, 1, 2]
# test: select from shared group by column, column
select id, data from test group by id, data
[[0, 0], [2, 1], [1, 0], [4, 2], [3, 1]]
select id, data from test group by data, id
[[0, 0], [2, 1], [1, 0], [4, 2], [3, 1]]
# test: select expr from shared group by
select id, 100 + id from test group by id
[[0, 100], [1, 101], [2, 102], [3, 103], [4, 104]]
# test: select from (select from shared  group by)
explain select * from (select * from test group by id)
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv_to             0      0      0     ",
      "02": "cte_set             0      0      0     ",
      "03": "body                0      0      0     ",
      "04": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "set                 1      0      0     ",
      "02": "group               2      1      0     ",
      "03": "int_min             3      0      0     ",
      "04": "push                3      0      0     ",
      "05": "cursor_open         0      0      7     # public.test (primary)",
      "06": "jmp                 11     0      0     ",
      "07": "cursor_idx          3      0      0     ",
      "08": "push                3      0      0     ",
      "09": "group_write         2      0      0     ",
      "10": "cursor_next         0      7      0     ",
      "11": "cursor_close        0      0      0     ",
      "12": "cursor_open_expr    1      2      14    ",
      "13": "jmp                 17     0      0     ",
      "14": "cursor_read         3      1      0     ",
      "15": "set_add             1      3      0     ",
      "16": "cursor_next         1      14     0     ",
      "17": "cursor_close        1      0      0     ",
      "18": "cursor_open_expr    2      1      20    ",
      "19": "jmp                 23     0      0     ",
      "20": "cursor_read         2      2      0     ",
      "21": "set_add             0      2      0     ",
      "22": "cursor_next         2      20     0     ",
      "23": "cursor_close        2      0      0     ",
      "24": "result              0      0      0     ",
      "25": "ret                 0      0      0     "
    }
  }
}]
select * from (select * from test group by id)
[0, 1, 2, 3, 4]
select 100 + * from (select * from test group by id)
[100, 101, 102, 103, 104]
select * from (select id, 100 + id from test group by id)
[[0, 100], [1, 101], [2, 102], [3, 103], [4, 104]]
# test: select from shared group by limit
explain select id from test group by id limit 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "group_merge_recv    0      0      0     ",
      "03": "set                 1      0      0     ",
      "04": "int                 2      -      0     # 1",
      "05": "cntr_init           1      0      2     ",
      "06": "cursor_open_expr    1      0      8     ",
      "07": "jmp                 12     0      0     ",
      "08": "cntr_lte            1      0      7     ",
      "09": "group_read          2      1      0     ",
      "10": "set_add             1      2      0     ",
      "11": "cursor_next         1      8      0     ",
      "12": "cursor_close        1      0      0     ",
      "13": "cte_set             0      1      0     ",
      "14": "body                0      0      0     ",
      "15": "ret                 0      0      0     "
    },
    "node": {
      "00": "group               0      1      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 9      0      0     ",
      "05": "cursor_idx          1      0      0     ",
      "06": "push                1      0      0     ",
      "07": "group_write         0      0      0     ",
      "08": "cursor_next         0      5      0     ",
      "09": "cursor_close        0      0      0     ",
      "10": "result              0      0      0     ",
      "11": "ret                 0      0      0     "
    }
  }
}]
select id from test group by id limit 2
[0, 1]
select id from test group by id limit 3
[0, 1, 2]
select id from test group by id limit 4
[0, 1, 2, 3]
# test: select from shared group by limit/offset
explain select id from test group by id limit 1 offset 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "group_merge_recv    0      0      0     ",
      "03": "set                 1      0      0     ",
      "04": "int                 2      -      0     # 1",
      "05": "cntr_init           1      1      2     ",
      "06": "int                 2      -      0     # 1",
      "07": "cntr_init           1      0      2     ",
      "08": "cursor_open_expr    1      0      10    ",
      "09": "jmp                 15     0      0     ",
      "10": "cntr_gte            1      1      14    ",
      "11": "cntr_lte            1      0      9     ",
      "12": "group_read          2      1      0     ",
      "13": "set_add             1      2      0     ",
      "14": "cursor_next         1      10     0     ",
      "15": "cursor_close        1      0      0     ",
      "16": "cte_set             0      1      0     ",
      "17": "body                0      0      0     ",
      "18": "ret                 0      0      0     "
    },
    "node": {
      "00": "group               0      1      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 9      0      0     ",
      "05": "cursor_idx          1      0      0     ",
      "06": "push                1      0      0     ",
      "07": "group_write         0      0      0     ",
      "08": "cursor_next         0      5      0     ",
      "09": "cursor_close        0      0      0     ",
      "10": "result              0      0      0     ",
      "11": "ret                 0      0      0     "
    }
  }
}]
select id from test group by id limit 1 offset 1
[1]
select id from test group by id limit 1 offset 2
[2]
select id from test group by id limit 1 offset 3
[3]
select id from test group by id limit 1 offset 4
[4]
# test: select from shared group by offset
explain select id from test group by id offset 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "group_merge_recv    0      0      0     ",
      "03": "set                 1      0      0     ",
      "04": "int                 2      -      0     # 1",
      "05": "cntr_init           1      1      2     ",
      "06": "cursor_open_expr    1      0      8     ",
      "07": "jmp                 12     0      0     ",
      "08": "cntr_gte            1      1      11    ",
      "09": "group_read          2      1      0     ",
      "10": "set_add             1      2      0     ",
      "11": "cursor_next         1      8      0     ",
      "12": "cursor_close        1      0      0     ",
      "13": "cte_set             0      1      0     ",
      "14": "body                0      0      0     ",
      "15": "ret                 0      0      0     "
    },
    "node": {
      "00": "group               0      1      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 9      0      0     ",
      "05": "cursor_idx          1      0      0     ",
      "06": "push                1      0      0     ",
      "07": "group_write         0      0      0     ",
      "08": "cursor_next         0      5      0     ",
      "09": "cursor_close        0      0      0     ",
      "10": "result              0      0      0     ",
      "11": "ret                 0      0      0     "
    }
  }
}]
select id from test group by id offset 1
[1, 2, 3, 4]
select id from test group by id offset 2
[2, 3, 4]
select id from test group by id offset 3
[3, 4]
select id from test group by id offset 4
[4]
# test: select from (select from shared group by limit)
explain select * from (select id from test group by id limit 1)
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv_to             0      0      0     ",
      "02": "cte_set             0      0      0     ",
      "03": "body                0      0      0     ",
      "04": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "set                 1      0      0     ",
      "02": "group               2      1      0     ",
      "03": "int_min             3      0      0     ",
      "04": "push                3      0      0     ",
      "05": "cursor_open         0      0      7     # public.test (primary)",
      "06": "jmp                 11     0      0     ",
      "07": "cursor_idx          3      0      0     ",
      "08": "push                3      0      0     ",
      "09": "group_write         2      0      0     ",
      "10": "cursor_next         0      7      0     ",
      "11": "cursor_close        0      0      0     ",
      "12": "int                 3      -      0     # 1",
      "13": "cntr_init           1      0      3     ",
      "14": "cursor_open_expr    1      2      16    ",
      "15": "jmp                 20     0      0     ",
      "16": "cntr_lte            1      0      15    ",
      "17": "group_read          3      1      0     ",
      "18": "set_add             1      3      0     ",
      "19": "cursor_next         1      16     0     ",
      "20": "cursor_close        1      0      0     ",
      "21": "cursor_open_expr    2      1      23    ",
      "22": "jmp                 26     0      0     ",
      "23": "cursor_read         2      2      0     ",
      "24": "set_add             0      2      0     ",
      "25": "cursor_next         2      23     0     ",
      "26": "cursor_close        2      0      0     ",
      "27": "result              0      0      0     ",
      "28": "ret                 0      0      0     "
    }
  }
}]
select * from (select id from test group by id limit 1)
[0]
select * from (select id from test group by id limit 2)
[0, 1]
select * from (select id from test group by id limit 3)
[0, 1, 2]
select * from (select id from test group by id limit 4)
[0, 1, 2, 3]
# test: select from (select from shared group by limit/offset)
explain select * from (select id from test group by id limit 1 offset 1)
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv_to             0      0      0     ",
      "02": "cte_set             0      0      0     ",
      "03": "body                0      0      0     ",
      "04": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "set                 1      0      0     ",
      "02": "group               2      1      0     ",
      "03": "int_min             3      0      0     ",
      "04": "push                3      0      0     ",
      "05": "cursor_open         0      0      7     # public.test (primary)",
      "06": "jmp                 11     0      0     ",
      "07": "cursor_idx          3      0      0     ",
      "08": "push                3      0      0     ",
      "09": "group_write         2      0      0     ",
      "10": "cursor_next         0      7      0     ",
      "11": "cursor_close        0      0      0     ",
      "12": "int                 3      -      0     # 1",
      "13": "cntr_init           1      1      3     ",
      "14": "int                 3      -      0     # 1",
      "15": "cntr_init           1      0      3     ",
      "16": "cursor_open_expr    1      2      18    ",
      "17": "jmp                 23     0      0     ",
      "18": "cntr_gte            1      1      22    ",
      "19": "cntr_lte            1      0      17    ",
      "20": "group_read          3      1      0     ",
      "21": "set_add             1      3      0     ",
      "22": "cursor_next         1      18     0     ",
      "23": "cursor_close        1      0      0     ",
      "24": "cursor_open_expr    2      1      26    ",
      "25": "jmp                 29     0      0     ",
      "26": "cursor_read         2      2      0     ",
      "27": "set_add             0      2      0     ",
      "28": "cursor_next         2      26     0     ",
      "29": "cursor_close        2      0      0     ",
      "30": "result              0      0      0     ",
      "31": "ret                 0      0      0     "
    }
  }
}]
select * from (select id from test group by id limit 1 offset 1)
[1]
select * from (select id from test group by id limit 1 offset 2)
[2]
select * from (select id from test group by id limit 1 offset 3)
[3]
select * from (select id from test group by id limit 1 offset 4)
[4]
# test: select from (select from shared group by offset)
explain select * from (select id from test group by id offset 1)
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv_to             0      0      0     ",
      "02": "cte_set             0      0      0     ",
      "03": "body                0      0      0     ",
      "04": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "set                 1      0      0     ",
      "02": "group               2      1      0     ",
      "03": "int_min             3      0      0     ",
      "04": "push                3      0      0     ",
      "05": "cursor_open         0      0      7     # public.test (primary)",
      "06": "jmp                 11     0      0     ",
      "07": "cursor_idx          3      0      0     ",
      "08": "push                3      0      0     ",
      "09": "group_write         2      0      0     ",
      "10": "cursor_next         0      7      0     ",
      "11": "cursor_close        0      0      0     ",
      "12": "int                 3      -      0     # 1",
      "13": "cntr_init           1      1      3     ",
      "14": "cursor_open_expr    1      2      16    ",
      "15": "jmp                 20     0      0     ",
      "16": "cntr_gte            1      1      19    ",
      "17": "group_read          3      1      0     ",
      "18": "set_add             1      3      0     ",
      "19": "cursor_next         1      16     0     ",
      "20": "cursor_close        1      0      0     ",
      "21": "cursor_open_expr    2      1      23    ",
      "22": "jmp                 26     0      0     ",
      "23": "cursor_read         2      2      0     ",
      "24": "set_add             0      2      0     ",
      "25": "cursor_next         2      23     0     ",
      "26": "cursor_close        2      0      0     ",
      "27": "result              0      0      0     ",
      "28": "ret                 0      0      0     "
    }
  }
}]
select * from (select id from test group by id offset 1)
[1, 2, 3, 4]
select * from (select id from test group by id offset 2)
[2, 3, 4]
select * from (select id from test group by id offset 3)
[3, 4]
select * from (select id from test group by id offset 4)
[4]
# test: select from shared group by having
explain select id from test group by id having id >= 3
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "group_merge_recv    0      0      0     ",
      "03": "set                 1      0      0     ",
      "04": "cursor_open_expr    1      0      6     ",
      "05": "jmp                 13     0      0     ",
      "06": "group_read          2      1      0     ",
      "07": "int                 3      -      0     # 3",
      "08": "gte                 4      2      3     ",
      "09": "jntr                12     4      0     ",
      "10": "group_read          2      1      0     ",
      "11": "set_add             1      2      0     ",
      "12": "cursor_next         1      6      0     ",
      "13": "cursor_close        1      0      0     ",
      "14": "cte_set             0      1      0     ",
      "15": "body                0      0      0     ",
      "16": "ret                 0      0      0     "
    },
    "node": {
      "00": "group               0      1      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 9      0      0     ",
      "05": "cursor_idx          1      0      0     ",
      "06": "push                1      0      0     ",
      "07": "group_write         0      0      0     ",
      "08": "cursor_next         0      5      0     ",
      "09": "cursor_close        0      0      0     ",
      "10": "result              0      0      0     ",
      "11": "ret                 0      0      0     "
    }
  }
}]
select id from test group by id having id >= 3
[3, 4]
select id from test group by id having id = 0
[0]
select id from test group by id having id = 1
[1]
select id from test group by id having id = 2
[2]
select id from test group by id having id = 3
[3]
select id from test group by id having id = 4
[4]
select id from test group by id having id = 5
[]
select id from test group by id having id >= 1 and id <= 3
[1, 2, 3]
# test: select from shared group by having limit
explain select id from test group by id having id >= 1 limit 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "group_merge_recv    0      0      0     ",
      "03": "set                 1      0      0     ",
      "04": "int                 2      -      0     # 1",
      "05": "cntr_init           1      0      2     ",
      "06": "cursor_open_expr    1      0      8     ",
      "07": "jmp                 16     0      0     ",
      "08": "group_read          2      1      0     ",
      "09": "int                 3      -      0     # 1",
      "10": "gte                 4      2      3     ",
      "11": "jntr                15     4      0     ",
      "12": "cntr_lte            1      0      7     ",
      "13": "group_read          2      1      0     ",
      "14": "set_add             1      2      0     ",
      "15": "cursor_next         1      8      0     ",
      "16": "cursor_close        1      0      0     ",
      "17": "cte_set             0      1      0     ",
      "18": "body                0      0      0     ",
      "19": "ret                 0      0      0     "
    },
    "node": {
      "00": "group               0      1      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 9      0      0     ",
      "05": "cursor_idx          1      0      0     ",
      "06": "push                1      0      0     ",
      "07": "group_write         0      0      0     ",
      "08": "cursor_next         0      5      0     ",
      "09": "cursor_close        0      0      0     ",
      "10": "result              0      0      0     ",
      "11": "ret                 0      0      0     "
    }
  }
}]
select id from test group by id having id >= 1 limit 1
[1]
select id from test group by id having id >= 1 limit 2
[1, 2]
# test: select from shared group by having limit/offset
explain select id from test group by id having id >= 1 limit 1 offset 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "group_merge_recv    0      0      0     ",
      "03": "set                 1      0      0     ",
      "04": "int                 2      -      0     # 1",
      "05": "cntr_init           1      1      2     ",
      "06": "int                 2      -      0     # 1",
      "07": "cntr_init           1      0      2     ",
      "08": "cursor_open_expr    1      0      10    ",
      "09": "jmp                 19     0      0     ",
      "10": "group_read          2      1      0     ",
      "11": "int                 3      -      0     # 1",
      "12": "gte                 4      2      3     ",
      "13": "jntr                18     4      0     ",
      "14": "cntr_gte            1      1      18    ",
      "15": "cntr_lte            1      0      9     ",
      "16": "group_read          2      1      0     ",
      "17": "set_add             1      2      0     ",
      "18": "cursor_next         1      10     0     ",
      "19": "cursor_close        1      0      0     ",
      "20": "cte_set             0      1      0     ",
      "21": "body                0      0      0     ",
      "22": "ret                 0      0      0     "
    },
    "node": {
      "00": "group               0      1      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 9      0      0     ",
      "05": "cursor_idx          1      0      0     ",
      "06": "push                1      0      0     ",
      "07": "group_write         0      0      0     ",
      "08": "cursor_next         0      5      0     ",
      "09": "cursor_close        0      0      0     ",
      "10": "result              0      0      0     ",
      "11": "ret                 0      0      0     "
    }
  }
}]
select id from test group by id having id >= 1 limit 1 offset 1
[2]
select id from test group by id having id >= 1 limit 1 offset 2
[3]
select id from test group by id having id >= 1 limit 1 offset 3
[4]
# test: select from shared group by having offset
explain select id from test group by id having id >= 1 offset 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "group_merge_recv    0      0      0     ",
      "03": "set                 1      0      0     ",
      "04": "int                 2      -      0     # 1",
      "05": "cntr_init           1      1      2     ",
      "06": "cursor_open_expr    1      0      8     ",
      "07": "jmp                 16     0      0     ",
      "08": "group_read          2      1      0     ",
      "09": "int                 3      -      0     # 1",
      "10": "gte                 4      2      3     ",
      "11": "jntr                15     4      0     ",
      "12": "cntr_gte            1      1      15    ",
      "13": "group_read          2      1      0     ",
      "14": "set_add             1      2      0     ",
      "15": "cursor_next         1      8      0     ",
      "16": "cursor_close        1      0      0     ",
      "17": "cte_set             0      1      0     ",
      "18": "body                0      0      0     ",
      "19": "ret                 0      0      0     "
    },
    "node": {
      "00": "group               0      1      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 9      0      0     ",
      "05": "cursor_idx          1      0      0     ",
      "06": "push                1      0      0     ",
      "07": "group_write         0      0      0     ",
      "08": "cursor_next         0      5      0     ",
      "09": "cursor_close        0      0      0     ",
      "10": "result              0      0      0     ",
      "11": "ret                 0      0      0     "
    }
  }
}]
select id from test group by id having id >= 1 offset 1
[2, 3, 4]
select id from test group by id having id >= 1 offset 2
[3, 4]
select id from test group by id having id >= 1 offset 3
[4]
# test: select from (select from shared group by having)
explain select * from (select id from test group by id having id >= 3)
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv_to             0      0      0     ",
      "02": "cte_set             0      0      0     ",
      "03": "body                0      0      0     ",
      "04": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "set                 1      0      0     ",
      "02": "group               2      1      0     ",
      "03": "int_min             3      0      0     ",
      "04": "push                3      0      0     ",
      "05": "cursor_open         0      0      7     # public.test (primary)",
      "06": "jmp                 11     0      0     ",
      "07": "cursor_idx          3      0      0     ",
      "08": "push                3      0      0     ",
      "09": "group_write         2      0      0     ",
      "10": "cursor_next         0      7      0     ",
      "11": "cursor_close        0      0      0     ",
      "12": "cursor_open_expr    1      2      14    ",
      "13": "jmp                 21     0      0     ",
      "14": "group_read          3      1      0     ",
      "15": "int                 4      -      0     # 3",
      "16": "gte                 5      3      4     ",
      "17": "jntr                20     5      0     ",
      "18": "group_read          3      1      0     ",
      "19": "set_add             1      3      0     ",
      "20": "cursor_next         1      14     0     ",
      "21": "cursor_close        1      0      0     ",
      "22": "cursor_open_expr    2      1      24    ",
      "23": "jmp                 27     0      0     ",
      "24": "cursor_read         2      2      0     ",
      "25": "set_add             0      2      0     ",
      "26": "cursor_next         2      24     0     ",
      "27": "cursor_close        2      0      0     ",
      "28": "result              0      0      0     ",
      "29": "ret                 0      0      0     "
    }
  }
}]
select * from (select id from test group by id having id >= 3)
[3, 4]
# test: select from (select from shared group by having limit)
explain select * from (select id from test group by id having id >= 1 limit 1)
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv_to             0      0      0     ",
      "02": "cte_set             0      0      0     ",
      "03": "body                0      0      0     ",
      "04": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "set                 1      0      0     ",
      "02": "group               2      1      0     ",
      "03": "int_min             3      0      0     ",
      "04": "push                3      0      0     ",
      "05": "cursor_open         0      0      7     # public.test (primary)",
      "06": "jmp                 11     0      0     ",
      "07": "cursor_idx          3      0      0     ",
      "08": "push                3      0      0     ",
      "09": "group_write         2      0      0     ",
      "10": "cursor_next         0      7      0     ",
      "11": "cursor_close        0      0      0     ",
      "12": "int                 3      -      0     # 1",
      "13": "cntr_init           1      0      3     ",
      "14": "cursor_open_expr    1      2      16    ",
      "15": "jmp                 24     0      0     ",
      "16": "group_read          3      1      0     ",
      "17": "int                 4      -      0     # 1",
      "18": "gte                 5      3      4     ",
      "19": "jntr                23     5      0     ",
      "20": "cntr_lte            1      0      15    ",
      "21": "group_read          3      1      0     ",
      "22": "set_add             1      3      0     ",
      "23": "cursor_next         1      16     0     ",
      "24": "cursor_close        1      0      0     ",
      "25": "cursor_open_expr    2      1      27    ",
      "26": "jmp                 30     0      0     ",
      "27": "cursor_read         2      2      0     ",
      "28": "set_add             0      2      0     ",
      "29": "cursor_next         2      27     0     ",
      "30": "cursor_close        2      0      0     ",
      "31": "result              0      0      0     ",
      "32": "ret                 0      0      0     "
    }
  }
}]
select * from (select id from test group by id having id >= 1 limit 1)
[1]
select * from (select id from test group by id having id >= 1 limit 2)
[1, 2]
# test: select from (select from shared group by having limit/offset)
explain select * from (select id from test group by id having id >= 1 limit 1 offset 1)
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv_to             0      0      0     ",
      "02": "cte_set             0      0      0     ",
      "03": "body                0      0      0     ",
      "04": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "set                 1      0      0     ",
      "02": "group               2      1      0     ",
      "03": "int_min             3      0      0     ",
      "04": "push                3      0      0     ",
      "05": "cursor_open         0      0      7     # public.test (primary)",
      "06": "jmp                 11     0      0     ",
      "07": "cursor_idx          3      0      0     ",
      "08": "push                3      0      0     ",
      "09": "group_write         2      0      0     ",
      "10": "cursor_next         0      7      0     ",
      "11": "cursor_close        0      0      0     ",
      "12": "int                 3      -      0     # 1",
      "13": "cntr_init           1      1      3     ",
      "14": "int                 3      -      0     # 1",
      "15": "cntr_init           1      0      3     ",
      "16": "cursor_open_expr    1      2      18    ",
      "17": "jmp                 27     0      0     ",
      "18": "group_read          3      1      0     ",
      "19": "int                 4      -      0     # 1",
      "20": "gte                 5      3      4     ",
      "21": "jntr                26     5      0     ",
      "22": "cntr_gte            1      1      26    ",
      "23": "cntr_lte            1      0      17    ",
      "24": "group_read          3      1      0     ",
      "25": "set_add             1      3      0     ",
      "26": "cursor_next         1      18     0     ",
      "27": "cursor_close        1      0      0     ",
      "28": "cursor_open_expr    2      1      30    ",
      "29": "jmp                 33     0      0     ",
      "30": "cursor_read         2      2      0     ",
      "31": "set_add             0      2      0     ",
      "32": "cursor_next         2      30     0     ",
      "33": "cursor_close        2      0      0     ",
      "34": "result              0      0      0     ",
      "35": "ret                 0      0      0     "
    }
  }
}]
select * from (select id from test group by id having id >= 1 limit 1 offset 1)
[2]
select * from (select id from test group by id having id >= 1 limit 1 offset 2)
[3]
select * from (select id from test group by id having id >= 1 limit 1 offset 3)
[4]
# test: select from (select from shared group by having offset)
explain select * from (select id from test group by id having id >= 1 offset 1)
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv_to             0      0      0     ",
      "02": "cte_set             0      0      0     ",
      "03": "body                0      0      0     ",
      "04": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "set                 1      0      0     ",
      "02": "group               2      1      0     ",
      "03": "int_min             3      0      0     ",
      "04": "push                3      0      0     ",
      "05": "cursor_open         0      0      7     # public.test (primary)",
      "06": "jmp                 11     0      0     ",
      "07": "cursor_idx          3      0      0     ",
      "08": "push                3      0      0     ",
      "09": "group_write         2      0      0     ",
      "10": "cursor_next         0      7      0     ",
      "11": "cursor_close        0      0      0     ",
      "12": "int                 3      -      0     # 1",
      "13": "cntr_init           1      1      3     ",
      "14": "cursor_open_expr    1      2      16    ",
      "15": "jmp                 24     0      0     ",
      "16": "group_read          3      1      0     ",
      "17": "int                 4      -      0     # 1",
      "18": "gte                 5      3      4     ",
      "19": "jntr                23     5      0     ",
      "20": "cntr_gte            1      1      23    ",
      "21": "group_read          3      1      0     ",
      "22": "set_add             1      3      0     ",
      "23": "cursor_next         1      16     0     ",
      "24": "cursor_close        1      0      0     ",
      "25": "cursor_open_expr    2      1      27    ",
      "26": "jmp                 30     0      0     ",
      "27": "cursor_read         2      2      0     ",
      "28": "set_add             0      2      0     ",
      "29": "cursor_next         2      27     0     ",
      "30": "cursor_close        2      0      0     ",
      "31": "result              0      0      0     ",
      "32": "ret                 0      0      0     "
    }
  }
}]
select * from (select id from test group by id having id >= 1 offset 1)
[2, 3, 4]
select * from (select id from test group by id having id >= 1 offset 2)
[3, 4]
select * from (select id from test group by id having id >= 1 offset 3)
[4]
# test: select from shared group by order by
explain select id from test group by id order by id
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "group_merge_recv    0      0      0     ",
      "03": "set_ordered         1      20     0     ",
      "04": "cursor_open_expr    1      0      6     ",
      "05": "jmp                 11     0      0     ",
      "06": "group_read          2      1      0     ",
      "07": "group_read          3      1      0     ",
      "08": "push                3      0      0     ",
      "09": "set_add             1      2      0     ",
      "10": "cursor_next         1      6      0     ",
      "11": "cursor_close        1      0      0     ",
      "12": "set_sort            1      0      0     ",
      "13": "cte_set             0      1      0     ",
      "14": "body                0      0      0     ",
      "15": "ret                 0      0      0     "
    },
    "node": {
      "00": "group               0      1      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 9      0      0     ",
      "05": "cursor_idx          1      0      0     ",
      "06": "push                1      0      0     ",
      "07": "group_write         0      0      0     ",
      "08": "cursor_next         0      5      0     ",
      "09": "cursor_close        0      0      0     ",
      "10": "result              0      0      0     ",
      "11": "ret                 0      0      0     "
    }
  }
}]
select id from test group by id order by id
[0, 1, 2, 3, 4]
# test: select from shared group by order by keys only
select id from test group by id order by data
{"msg": "<data> only GROUP BY keys can be selected"}
# test: select from shared group by order by desc
explain select id from test group by id order by id desc
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "group_merge_recv    0      0      0     ",
      "03": "set_ordered         1      20     0     ",
      "04": "cursor_open_expr    1      0      6     ",
      "05": "jmp                 11     0      0     ",
      "06": "group_read          2      1      0     ",
      "07": "group_read          3      1      0     ",
      "08": "push                3      0      0     ",
      "09": "set_add             1      2      0     ",
      "10": "cursor_next         1      6      0     ",
      "11": "cursor_close        1      0      0     ",
      "12": "set_sort            1      0      0     ",
      "13": "cte_set             0      1      0     ",
      "14": "body                0      0      0     ",
      "15": "ret                 0      0      0     "
    },
    "node": {
      "00": "group               0      1      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 9      0      0     ",
      "05": "cursor_idx          1      0      0     ",
      "06": "push                1      0      0     ",
      "07": "group_write         0      0      0     ",
      "08": "cursor_next         0      5      0     ",
      "09": "cursor_close        0      0      0     ",
      "10": "result              0      0      0     ",
      "11": "ret                 0      0      0     "
    }
  }
}]
select id from test group by id order by id desc
[4, 3, 2, 1, 0]
# test: select from (select from shared group by order by)
explain select * from (select id from test group by id order by id desc)
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv_to             0      0      0     ",
      "02": "cte_set             0      0      0     ",
      "03": "body                0      0      0     ",
      "04": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "set_ordered         1      0      0     ",
      "02": "group               2      1      0     ",
      "03": "int_min             3      0      0     ",
      "04": "push                3      0      0     ",
      "05": "cursor_open         0      3      7     # public.test (primary)",
      "06": "jmp                 11     0      0     ",
      "07": "cursor_idx          3      0      0     ",
      "08": "push                3      0      0     ",
      "09": "group_write         2      0      0     ",
      "10": "cursor_next         0      7      0     ",
      "11": "cursor_close        0      0      0     ",
      "12": "cursor_open_expr    1      2      14    ",
      "13": "jmp                 19     0      0     ",
      "14": "group_read          3      1      0     ",
      "15": "group_read          4      1      0     ",
      "16": "push                4      0      0     ",
      "17": "set_add             1      3      0     ",
      "18": "cursor_next         1      14     0     ",
      "19": "cursor_close        1      0      0     ",
      "20": "set_sort            1      0      0     ",
      "21": "bool                2      0      0     ",
      "22": "push                2      0      0     ",
      "23": "merge               2      1      -1    ",
      "24": "cursor_open_expr    2      2      26    ",
      "25": "jmp                 29     0      0     ",
      "26": "cursor_read         1      2      0     ",
      "27": "set_add             0      1      0     ",
      "28": "cursor_next         2      26     0     ",
      "29": "cursor_close        2      0      0     ",
      "30": "result              0      0      0     ",
      "31": "ret                 0      0      0     "
    }
  }
}]
select * from (select id from test group by id order by id desc)
[4, 3, 2, 1, 0]
# test: select from shared group by order by asc limit
explain select id from test group by id order by id asc limit 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "group_merge_recv    0      0      0     ",
      "03": "set_ordered         1      20     0     ",
      "04": "cursor_open_expr    1      0      6     ",
      "05": "jmp                 11     0      0     ",
      "06": "group_read          2      1      0     ",
      "07": "group_read          3      1      0     ",
      "08": "push                3      0      0     ",
      "09": "set_add             1      2      0     ",
      "10": "cursor_next         1      6      0     ",
      "11": "cursor_close        1      0      0     ",
      "12": "set_sort            1      0      0     ",
      "13": "bool                0      0      0     ",
      "14": "push                0      0      0     ",
      "15": "int                 0      -      0     # 1",
      "16": "merge               2      1      0     ",
      "17": "cte_set             0      2      0     ",
      "18": "body                0      0      0     ",
      "19": "ret                 0      0      0     "
    },
    "node": {
      "00": "group               0      1      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 9      0      0     ",
      "05": "cursor_idx          1      0      0     ",
      "06": "push                1      0      0     ",
      "07": "group_write         0      0      0     ",
      "08": "cursor_next         0      5      0     ",
      "09": "cursor_close        0      0      0     ",
      "10": "result              0      0      0     ",
      "11": "ret                 0      0      0     "
    }
  }
}]
select id from test group by id order by id asc limit 1
[0]
select id from test group by id order by id asc limit 2
[0, 1]
select id from test group by id order by id asc limit 3
[0, 1, 2]
# test: select from shared group by order by asc limit/offset
explain select id from test group by id order by id asc limit 1 offset 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "group_merge_recv    0      0      0     ",
      "03": "set_ordered         1      20     0     ",
      "04": "cursor_open_expr    1      0      6     ",
      "05": "jmp                 11     0      0     ",
      "06": "group_read          2      1      0     ",
      "07": "group_read          3      1      0     ",
      "08": "push                3      0      0     ",
      "09": "set_add             1      2      0     ",
      "10": "cursor_next         1      6      0     ",
      "11": "cursor_close        1      0      0     ",
      "12": "set_sort            1      0      0     ",
      "13": "bool                0      0      0     ",
      "14": "push                0      0      0     ",
      "15": "int                 0      -      0     # 1",
      "16": "int                 2      -      0     # 1",
      "17": "merge               3      1      0     ",
      "18": "cte_set             0      3      0     ",
      "19": "body                0      0      0     ",
      "20": "ret                 0      0      0     "
    },
    "node": {
      "00": "group               0      1      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 9      0      0     ",
      "05": "cursor_idx          1      0      0     ",
      "06": "push                1      0      0     ",
      "07": "group_write         0      0      0     ",
      "08": "cursor_next         0      5      0     ",
      "09": "cursor_close        0      0      0     ",
      "10": "result              0      0      0     ",
      "11": "ret                 0      0      0     "
    }
  }
}]
select id from test group by id order by id asc limit 1 offset 1
[1]
select id from test group by id order by id asc limit 1 offset 2
[2]
select id from test group by id order by id asc limit 1 offset 3
[3]
# test: select from shared group by order by asc offset
explain select id from test group by id order by id asc offset 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "group_merge_recv    0      0      0     ",
      "03": "set_ordered         1      20     0     ",
      "04": "cursor_open_expr    1      0      6     ",
      "05": "jmp                 11     0      0     ",
      "06": "group_read          2      1      0     ",
      "07": "group_read          3      1      0     ",
      "08": "push                3      0      0     ",
      "09": "set_add             1      2      0     ",
      "10": "cursor_next         1      6      0     ",
      "11": "cursor_close        1      0      0     ",
      "12": "set_sort            1      0      0     ",
      "13": "bool                0      0      0     ",
      "14": "push                0      0      0     ",
      "15": "int                 0      -      0     # 1",
      "16": "merge               2      1      -1    ",
      "17": "cte_set             0      2      0     ",
      "18": "body                0      0      0     ",
      "19": "ret                 0      0      0     "
    },
    "node": {
      "00": "group               0      1      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 9      0      0     ",
      "05": "cursor_idx          1      0      0     ",
      "06": "push                1      0      0     ",
      "07": "group_write         0      0      0     ",
      "08": "cursor_next         0      5      0     ",
      "09": "cursor_close        0      0      0     ",
      "10": "result              0      0      0     ",
      "11": "ret                 0      0      0     "
    }
  }
}]
select id from test group by id order by id asc offset 1
[1, 2, 3, 4]
select id from test group by id order by id asc offset 2
[2, 3, 4]
select id from test group by id order by id asc offset 3
[3, 4]
# test: select from shared group by order by desc limit
explain select id from test group by id order by id desc limit 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "group_merge_recv    0      0      0     ",
      "03": "set_ordered         1      20     0     ",
      "04": "cursor_open_expr    1      0      6     ",
      "05": "jmp                 11     0      0     ",
      "06": "group_read          2      1      0     ",
      "07": "group_read          3      1      0     ",
      "08": "push                3      0      0     ",
      "09": "set_add             1      2      0     ",
      "10": "cursor_next         1      6      0     ",
      "11": "cursor_close        1      0      0     ",
      "12": "set_sort            1      0      0     ",
      "13": "bool                0      0      0     ",
      "14": "push                0      0      0     ",
      "15": "int                 0      -      0     # 1",
      "16": "merge               2      1      0     ",
      "17": "cte_set             0      2      0     ",
      "18": "body                0      0      0     ",
      "19": "ret                 0      0      0     "
    },
    "node": {
      "00": "group               0      1      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 9      0      0     ",
      "05": "cursor_idx          1      0      0     ",
      "06": "push                1      0      0     ",
      "07": "group_write         0      0      0     ",
      "08": "cursor_next         0      5      0     ",
      "09": "cursor_close        0      0      0     ",
      "10": "result              0      0      0     ",
      "11": "ret                 0      0      0     "
    }
  }
}]
select id from test group by id order by id desc limit 1
[4]
select id from test group by id order by id desc limit 2
[4, 3]
select id from test group by id order by id desc limit 3
[4, 3, 2]
# test: select from shared group by order by desc limit/offset
explain select id from test group by id order by id desc limit 1 offset 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "group_merge_recv    0      0      0     ",
      "03": "set_ordered         1      20     0     ",
      "04": "cursor_open_expr    1      0      6     ",
      "05": "jmp                 11     0      0     ",
      "06": "group_read          2      1      0     ",
      "07": "group_read          3      1      0     ",
      "08": "push                3      0      0     ",
      "09": "set_add             1      2      0     ",
      "10": "cursor_next         1      6      0     ",
      "11": "cursor_close        1      0      0     ",
      "12": "set_sort            1      0      0     ",
      "13": "bool                0      0      0     ",
      "14": "push                0      0      0     ",
      "15": "int                 0      -      0     # 1",
      "16": "int                 2      -      0     # 1",
      "17": "merge               3      1      0     ",
      "18": "cte_set             0      3      0     ",
      "19": "body                0      0      0     ",
      "20": "ret                 0      0      0     "
    },
    "node": {
      "00": "group               0      1      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 9      0      0     ",
      "05": "cursor_idx          1      0      0     ",
      "06": "push                1      0      0     ",
      "07": "group_write         0      0      0     ",
      "08": "cursor_next         0      5      0     ",
      "09": "cursor_close        0      0      0     ",
      "10": "result              0      0      0     ",
      "11": "ret                 0      0      0     "
    }
  }
}]
select id from test group by id order by id desc limit 1 offset 1
[3]
select id from test group by id order by id desc limit 1 offset 2
[2]
select id from test group by id order by id desc limit 1 offset 3
[1]
# test: select from shared group by order by desc offset
explain select id from test group by id order by id desc offset 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "group_merge_recv    0      0      0     ",
      "03": "set_ordered         1      20     0     ",
      "04": "cursor_open_expr    1      0      6     ",
      "05": "jmp                 11     0      0     ",
      "06": "group_read          2      1      0     ",
      "07": "group_read          3      1      0     ",
      "08": "push                3      0      0     ",
      "09": "set_add             1      2      0     ",
      "10": "cursor_next         1      6      0     ",
      "11": "cursor_close        1      0      0     ",
      "12": "set_sort            1      0      0     ",
      "13": "bool                0      0      0     ",
      "14": "push                0      0      0     ",
      "15": "int                 0      -      0     # 1",
      "16": "merge               2      1      -1    ",
      "17": "cte_set             0      2      0     ",
      "18": "body                0      0      0     ",
      "19": "ret                 0      0      0     "
    },
    "node": {
      "00": "group               0      1      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 9      0      0     ",
      "05": "cursor_idx          1      0      0     ",
      "06": "push                1      0      0     ",
      "07": "group_write         0      0      0     ",
      "08": "cursor_next         0      5      0     ",
      "09": "cursor_close        0      0      0     ",
      "10": "result              0      0      0     ",
      "11": "ret                 0      0      0     "
    }
  }
}]
select id from test group by id order by id desc offset 0
[4, 3, 2, 1, 0]
select id from test group by id order by id desc offset 1
[3, 2, 1, 0]
select id from test group by id order by id desc offset 2
[2, 1, 0]
select id from test group by id order by id desc offset 3
[1, 0]
# test: select from (select from shared group by order by asc limit)
explain select * from (select id from test group by id order by id asc limit 1)
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv_to             0      0      0     ",
      "02": "cte_set             0      0      0     ",
      "03": "body                0      0      0     ",
      "04": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "set_ordered         1      0      0     ",
      "02": "group               2      1      0     ",
      "03": "int_min             3      0      0     ",
      "04": "push                3      0      0     ",
      "05": "cursor_open         0      3      7     # public.test (primary)",
      "06": "jmp                 11     0      0     ",
      "07": "cursor_idx          3      0      0     ",
      "08": "push                3      0      0     ",
      "09": "group_write         2      0      0     ",
      "10": "cursor_next         0      7      0     ",
      "11": "cursor_close        0      0      0     ",
      "12": "cursor_open_expr    1      2      14    ",
      "13": "jmp                 19     0      0     ",
      "14": "group_read          3      1      0     ",
      "15": "group_read          4      1      0     ",
      "16": "push                4      0      0     ",
      "17": "set_add             1      3      0     ",
      "18": "cursor_next         1      14     0     ",
      "19": "cursor_close        1      0      0     ",
      "20": "set_sort            1      0      0     ",
      "21": "bool                2      0      0     ",
      "22": "push                2      0      0     ",
      "23": "int                 2      -      0     # 1",
      "24": "merge               3      1      2     ",
      "25": "cursor_open_expr    2      3      27    ",
      "26": "jmp                 30     0      0     ",
      "27": "cursor_read         1      2      0     ",
      "28": "set_add             0      1      0     ",
      "29": "cursor_next         2      27     0     ",
      "30": "cursor_close        2      0      0     ",
      "31": "result              0      0      0     ",
      "32": "ret                 0      0      0     "
    }
  }
}]
select * from (select id from test group by id order by id asc limit 0)
[]
select * from (select id from test group by id order by id asc limit 1)
[0]
select * from (select id from test group by id order by id asc limit 2)
[0, 1]
select * from (select id from test group by id order by id asc limit 3)
[0, 1, 2]
# test: select from (select from shared group by order by asc limit/offset)
explain select * from (select id from test group by id order by id asc limit 1 offset 1)
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv_to             0      0      0     ",
      "02": "cte_set             0      0      0     ",
      "03": "body                0      0      0     ",
      "04": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "set_ordered         1      0      0     ",
      "02": "group               2      1      0     ",
      "03": "int_min             3      0      0     ",
      "04": "push                3      0      0     ",
      "05": "cursor_open         0      3      7     # public.test (primary)",
      "06": "jmp                 11     0      0     ",
      "07": "cursor_idx          3      0      0     ",
      "08": "push                3      0      0     ",
      "09": "group_write         2      0      0     ",
      "10": "cursor_next         0      7      0     ",
      "11": "cursor_close        0      0      0     ",
      "12": "cursor_open_expr    1      2      14    ",
      "13": "jmp                 19     0      0     ",
      "14": "group_read          3      1      0     ",
      "15": "group_read          4      1      0     ",
      "16": "push                4      0      0     ",
      "17": "set_add             1      3      0     ",
      "18": "cursor_next         1      14     0     ",
      "19": "cursor_close        1      0      0     ",
      "20": "set_sort            1      0      0     ",
      "21": "bool                2      0      0     ",
      "22": "push                2      0      0     ",
      "23": "int                 2      -      0     # 1",
      "24": "int                 3      -      0     # 1",
      "25": "merge               4      1      2     ",
      "26": "cursor_open_expr    2      4      28    ",
      "27": "jmp                 31     0      0     ",
      "28": "cursor_read         1      2      0     ",
      "29": "set_add             0      1      0     ",
      "30": "cursor_next         2      28     0     ",
      "31": "cursor_close        2      0      0     ",
      "32": "result              0      0      0     ",
      "33": "ret                 0      0      0     "
    }
  }
}]
select * from (select id from test group by id order by id asc limit 1 offset 1)
[1]
select * from (select id from test group by id order by id asc limit 1 offset 2)
[2]
select * from (select id from test group by id order by id asc limit 1 offset 3)
[3]
# test: select from (select from shared group by order by asc offset)
explain select * from (select id from test group by id order by id asc offset 1)
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv_to             0      0      0     ",
      "02": "cte_set             0      0      0     ",
      "03": "body                0      0      0     ",
      "04": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "set_ordered         1      0      0     ",
      "02": "group               2      1      0     ",
      "03": "int_min             3      0      0     ",
      "04": "push                3      0      0     ",
      "05": "cursor_open         0      3      7     # public.test (primary)",
      "06": "jmp                 11     0      0     ",
      "07": "cursor_idx          3      0      0     ",
      "08": "push                3      0      0     ",
      "09": "group_write         2      0      0     ",
      "10": "cursor_next         0      7      0     ",
      "11": "cursor_close        0      0      0     ",
      "12": "cursor_open_expr    1      2      14    ",
      "13": "jmp                 19     0      0     ",
      "14": "group_read          3      1      0     ",
      "15": "group_read          4      1      0     ",
      "16": "push                4      0      0     ",
      "17": "set_add             1      3      0     ",
      "18": "cursor_next         1      14     0     ",
      "19": "cursor_close        1      0      0     ",
      "20": "set_sort            1      0      0     ",
      "21": "bool                2      0      0     ",
      "22": "push                2      0      0     ",
      "23": "int                 2      -      0     # 1",
      "24": "merge               3      1      -1    ",
      "25": "cursor_open_expr    2      3      27    ",
      "26": "jmp                 30     0      0     ",
      "27": "cursor_read         1      2      0     ",
      "28": "set_add             0      1      0     ",
      "29": "cursor_next         2      27     0     ",
      "30": "cursor_close        2      0      0     ",
      "31": "result              0      0      0     ",
      "32": "ret                 0      0      0     "
    }
  }
}]
select * from (select id from test group by id order by id asc offset 0)
[0, 1, 2, 3, 4]
select * from (select id from test group by id order by id asc offset 1)
[1, 2, 3, 4]
select * from (select id from test group by id order by id asc offset 2)
[2, 3, 4]
select * from (select id from test group by id order by id asc offset 3)
[3, 4]
# test: select from (select from shared group by order by desc limit)
explain select * from (select id from test group by id order by id desc limit 1)
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv_to             0      0      0     ",
      "02": "cte_set             0      0      0     ",
      "03": "body                0      0      0     ",
      "04": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "set_ordered         1      0      0     ",
      "02": "group               2      1      0     ",
      "03": "int_min             3      0      0     ",
      "04": "push                3      0      0     ",
      "05": "cursor_open         0      3      7     # public.test (primary)",
      "06": "jmp                 11     0      0     ",
      "07": "cursor_idx          3      0      0     ",
      "08": "push                3      0      0     ",
      "09": "group_write         2      0      0     ",
      "10": "cursor_next         0      7      0     ",
      "11": "cursor_close        0      0      0     ",
      "12": "cursor_open_expr    1      2      14    ",
      "13": "jmp                 19     0      0     ",
      "14": "group_read          3      1      0     ",
      "15": "group_read          4      1      0     ",
      "16": "push                4      0      0     ",
      "17": "set_add             1      3      0     ",
      "18": "cursor_next         1      14     0     ",
      "19": "cursor_close        1      0      0     ",
      "20": "set_sort            1      0      0     ",
      "21": "bool                2      0      0     ",
      "22": "push                2      0      0     ",
      "23": "int                 2      -      0     # 1",
      "24": "merge               3      1      2     ",
      "25": "cursor_open_expr    2      3      27    ",
      "26": "jmp                 30     0      0     ",
      "27": "cursor_read         1      2      0     ",
      "28": "set_add             0      1      0     ",
      "29": "cursor_next         2      27     0     ",
      "30": "cursor_close        2      0      0     ",
      "31": "result              0      0      0     ",
      "32": "ret                 0      0      0     "
    }
  }
}]
select * from (select id from test group by id order by id desc limit 0)
[]
select * from (select id from test group by id order by id desc limit 1)
[4]
select * from (select id from test group by id order by id desc limit 2)
[4, 3]
select * from (select id from test group by id order by id desc limit 3)
[4, 3, 2]
# test: select from (select from shared group by order by desc limit/offset)
explain select * from (select id from test group by id order by id desc limit 1 offset 1)
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv_to             0      0      0     ",
      "02": "cte_set             0      0      0     ",
      "03": "body                0      0      0     ",
      "04": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "set_ordered         1      0      0     ",
      "02": "group               2      1      0     ",
      "03": "int_min             3      0      0     ",
      "04": "push                3      0      0     ",
      "05": "cursor_open         0      3      7     # public.test (primary)",
      "06": "jmp                 11     0      0     ",
      "07": "cursor_idx          3      0      0     ",
      "08": "push                3      0      0     ",
      "09": "group_write         2      0      0     ",
      "10": "cursor_next         0      7      0     ",
      "11": "cursor_close        0      0      0     ",
      "12": "cursor_open_expr    1      2      14    ",
      "13": "jmp                 19     0      0     ",
      "14": "group_read          3      1      0     ",
      "15": "group_read          4      1      0     ",
      "16": "push                4      0      0     ",
      "17": "set_add             1      3      0     ",
      "18": "cursor_next         1      14     0     ",
      "19": "cursor_close        1      0      0     ",
      "20": "set_sort            1      0      0     ",
      "21": "bool                2      0      0     ",
      "22": "push                2      0      0     ",
      "23": "int                 2      -      0     # 1",
      "24": "int                 3      -      0     # 1",
      "25": "merge               4      1      2     ",
      "26": "cursor_open_expr    2      4      28    ",
      "27": "jmp                 31     0      0     ",
      "28": "cursor_read         1      2      0     ",
      "29": "set_add             0      1      0     ",
      "30": "cursor_next         2      28     0     ",
      "31": "cursor_close        2      0      0     ",
      "32": "result              0      0      0     ",
      "33": "ret                 0      0      0     "
    }
  }
}]
select * from (select id from test group by id order by id desc limit 1 offset 1)
[3]
select * from (select id from test group by id order by id desc limit 1 offset 2)
[2]
select * from (select id from test group by id order by id desc limit 1 offset 3)
[1]
# test: select from (select from shared group by order by desc offset)
explain select * from (select id from test group by id order by id desc offset 1)
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv_to             0      0      0     ",
      "02": "cte_set             0      0      0     ",
      "03": "body                0      0      0     ",
      "04": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "set_ordered         1      0      0     ",
      "02": "group               2      1      0     ",
      "03": "int_min             3      0      0     ",
      "04": "push                3      0      0     ",
      "05": "cursor_open         0      3      7     # public.test (primary)",
      "06": "jmp                 11     0      0     ",
      "07": "cursor_idx          3      0      0     ",
      "08": "push                3      0      0     ",
      "09": "group_write         2      0      0     ",
      "10": "cursor_next         0      7      0     ",
      "11": "cursor_close        0      0      0     ",
      "12": "cursor_open_expr    1      2      14    ",
      "13": "jmp                 19     0      0     ",
      "14": "group_read          3      1      0     ",
      "15": "group_read          4      1      0     ",
      "16": "push                4      0      0     ",
      "17": "set_add             1      3      0     ",
      "18": "cursor_next         1      14     0     ",
      "19": "cursor_close        1      0      0     ",
      "20": "set_sort            1      0      0     ",
      "21": "bool                2      0      0     ",
      "22": "push                2      0      0     ",
      "23": "int                 2      -      0     # 1",
      "24": "merge               3      1      -1    ",
      "25": "cursor_open_expr    2      3      27    ",
      "26": "jmp                 30     0      0     ",
      "27": "cursor_read         1      2      0     ",
      "28": "set_add             0      1      0     ",
      "29": "cursor_next         2      27     0     ",
      "30": "cursor_close        2      0      0     ",
      "31": "result              0      0      0     ",
      "32": "ret                 0      0      0     "
    }
  }
}]
select * from (select id from test group by id order by id desc offset 0)
[4, 3, 2, 1, 0]
select * from (select id from test group by id order by id desc offset 1)
[3, 2, 1, 0]
select * from (select id from test group by id order by id desc offset 2)
[2, 1, 0]
select * from (select id from test group by id order by id desc offset 3)
[1, 0]
# test: select from shared group by having order by
explain select data from test where data > 0 group by data having data >= 1 order by data
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "group_merge_recv    0      0      0     ",
      "03": "set_ordered         1      20     0     ",
      "04": "cursor_open_expr    1      0      6     ",
      "05": "jmp                 15     0      0     ",
      "06": "group_read          2      1      0     ",
      "07": "int                 3      -      0     # 1",
      "08": "gte                 4      2      3     ",
      "09": "jntr                14     4      0     ",
      "10": "group_read          2      1      0     ",
      "11": "group_read          3      1      0     ",
      "12": "push                3      0      0     ",
      "13": "set_add             1      2      0     ",
      "14": "cursor_next         1      6      0     ",
      "15": "cursor_close        1      0      0     ",
      "16": "set_sort            1      0      0     ",
      "17": "cte_set             0      1      0     ",
      "18": "body                0      0      0     ",
      "19": "ret                 0      0      0     "
    },
    "node": {
      "00": "group               0      1      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 13     0      0     ",
      "05": "cursor_idx          1      0      1     ",
      "06": "int                 2      -      0     # 0",
      "07": "gt                  3      1      2     ",
      "08": "jntr                12     3      0     ",
      "09": "cursor_idx          1      0      1     ",
      "10": "push                1      0      0     ",
      "11": "group_write         0      0      0     ",
      "12": "cursor_next         0      5      0     ",
      "13": "cursor_close        0      0      0     ",
      "14": "result              0      0      0     ",
      "15": "ret                 0      0      0     "
    }
  }
}]
select data from test where data > 0 group by data having data >= 1 order by data
[1, 2]
# test: select from shared group by having order by limit
explain select data from test where data > 0 group by data having data >= 1 order by data limit 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "group_merge_recv    0      0      0     ",
      "03": "set_ordered         1      20     0     ",
      "04": "cursor_open_expr    1      0      6     ",
      "05": "jmp                 15     0      0     ",
      "06": "group_read          2      1      0     ",
      "07": "int                 3      -      0     # 1",
      "08": "gte                 4      2      3     ",
      "09": "jntr                14     4      0     ",
      "10": "group_read          2      1      0     ",
      "11": "group_read          3      1      0     ",
      "12": "push                3      0      0     ",
      "13": "set_add             1      2      0     ",
      "14": "cursor_next         1      6      0     ",
      "15": "cursor_close        1      0      0     ",
      "16": "set_sort            1      0      0     ",
      "17": "bool                0      0      0     ",
      "18": "push                0      0      0     ",
      "19": "int                 0      -      0     # 1",
      "20": "merge               2      1      0     ",
      "21": "cte_set             0      2      0     ",
      "22": "body                0      0      0     ",
      "23": "ret                 0      0      0     "
    },
    "node": {
      "00": "group               0      1      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 13     0      0     ",
      "05": "cursor_idx          1      0      1     ",
      "06": "int                 2      -      0     # 0",
      "07": "gt                  3      1      2     ",
      "08": "jntr                12     3      0     ",
      "09": "cursor_idx          1      0      1     ",
      "10": "push                1      0      0     ",
      "11": "group_write         0      0      0     ",
      "12": "cursor_next         0      5      0     ",
      "13": "cursor_close        0      0      0     ",
      "14": "result              0      0      0     ",
      "15": "ret                 0      0      0     "
    }
  }
}]
select data from test where data > 0 group by data having data >= 1 order by data limit 1
[1]
# test: select from shared group by having order by limit/offset
explain select data from test where data > 0 group by data having data >= 1 order by data limit 1 offset 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "group_merge_recv    0      0      0     ",
      "03": "set_ordered         1      20     0     ",
      "04": "cursor_open_expr    1      0      6     ",
      "05": "jmp                 15     0      0     ",
      "06": "group_read          2      1      0     ",
      "07": "int                 3      -      0     # 1",
      "08": "gte                 4      2      3     ",
      "09": "jntr                14     4      0     ",
      "10": "group_read          2      1      0     ",
      "11": "group_read          3      1      0     ",
      "12": "push                3      0      0     ",
      "13": "set_add             1      2      0     ",
      "14": "cursor_next         1      6      0     ",
      "15": "cursor_close        1      0      0     ",
      "16": "set_sort            1      0      0     ",
      "17": "bool                0      0      0     ",
      "18": "push                0      0      0     ",
      "19": "int                 0      -      0     # 1",
      "20": "int                 2      -      0     # 1",
      "21": "merge               3      1      0     ",
      "22": "cte_set             0      3      0     ",
      "23": "body                0      0      0     ",
      "24": "ret                 0      0      0     "
    },
    "node": {
      "00": "group               0      1      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 13     0      0     ",
      "05": "cursor_idx          1      0      1     ",
      "06": "int                 2      -      0     # 0",
      "07": "gt                  3      1      2     ",
      "08": "jntr                12     3      0     ",
      "09": "cursor_idx          1      0      1     ",
      "10": "push                1      0      0     ",
      "11": "group_write         0      0      0     ",
      "12": "cursor_next         0      5      0     ",
      "13": "cursor_close        0      0      0     ",
      "14": "result              0      0      0     ",
      "15": "ret                 0      0      0     "
    }
  }
}]
select data from test where data > 0 group by data having data >= 1 order by data limit 1 offset 1
[2]
# test: select from shared group by having order by offset
explain select data from test where data > 0 group by data having data >= 1 order by data offset 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "group_merge_recv    0      0      0     ",
      "03": "set_ordered         1      20     0     ",
      "04": "cursor_open_expr    1      0      6     ",
      "05": "jmp                 15     0      0     ",
      "06": "group_read          2      1      0     ",
      "07": "int                 3      -      0     # 1",
      "08": "gte                 4      2      3     ",
      "09": "jntr                14     4      0     ",
      "10": "group_read          2      1      0     ",
      "11": "group_read          3      1      0     ",
      "12": "push                3      0      0     ",
      "13": "set_add             1      2      0     ",
      "14": "cursor_next         1      6      0     ",
      "15": "cursor_close        1      0      0     ",
      "16": "set_sort            1      0      0     ",
      "17": "bool                0      0      0     ",
      "18": "push                0      0      0     ",
      "19": "int                 0      -      0     # 1",
      "20": "merge               2      1      -1    ",
      "21": "cte_set             0      2      0     ",
      "22": "body                0      0      0     ",
      "23": "ret                 0      0      0     "
    },
    "node": {
      "00": "group               0      1      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 13     0      0     ",
      "05": "cursor_idx          1      0      1     ",
      "06": "int                 2      -      0     # 0",
      "07": "gt                  3      1      2     ",
      "08": "jntr                12     3      0     ",
      "09": "cursor_idx          1      0      1     ",
      "10": "push                1      0      0     ",
      "11": "group_write         0      0      0     ",
      "12": "cursor_next         0      5      0     ",
      "13": "cursor_close        0      0      0     ",
      "14": "result              0      0      0     ",
      "15": "ret                 0      0      0     "
    }
  }
}]
select data from test where data > 0 group by data having data >= 1 order by data offset 1
[2]
# test: select from (select from shared group by having order by)
explain select * from (select data from test where data > 0 group by data having data >= 1 order by data)
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv_to             0      0      0     ",
      "02": "cte_set             0      0      0     ",
      "03": "body                0      0      0     ",
      "04": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "set_ordered         1      0      0     ",
      "02": "group               2      1      0     ",
      "03": "int_min             3      0      0     ",
      "04": "push                3      0      0     ",
      "05": "cursor_open         0      3      7     # public.test (primary)",
      "06": "jmp                 15     0      0     ",
      "07": "cursor_idx          3      0      1     ",
      "08": "int                 4      -      0     # 0",
      "09": "gt                  5      3      4     ",
      "10": "jntr                14     5      0     ",
      "11": "cursor_idx          3      0      1     ",
      "12": "push                3      0      0     ",
      "13": "group_write         2      0      0     ",
      "14": "cursor_next         0      7      0     ",
      "15": "cursor_close        0      0      0     ",
      "16": "cursor_open_expr    1      2      18    ",
      "17": "jmp                 27     0      0     ",
      "18": "group_read          3      1      0     ",
      "19": "int                 4      -      0     # 1",
      "20": "gte                 5      3      4     ",
      "21": "jntr                26     5      0     ",
      "22": "group_read          3      1      0     ",
      "23": "group_read          4      1      0     ",
      "24": "push                4      0      0     ",
      "25": "set_add             1      3      0     ",
      "26": "cursor_next         1      18     0     ",
      "27": "cursor_close        1      0      0     ",
      "28": "set_sort            1      0      0     ",
      "29": "bool                2      0      0     ",
      "30": "push                2      0      0     ",
      "31": "merge               2      1      -1    ",
      "32": "cursor_open_expr    2      2      34    ",
      "33": "jmp                 37     0      0     ",
      "34": "cursor_read         1      2      0     ",
      "35": "set_add             0      1      0     ",
      "36": "cursor_next         2      34     0     ",
      "37": "cursor_close        2      0      0     ",
      "38": "result              0      0      0     ",
      "39": "ret                 0      0      0     "
    }
  }
}]
select * from (select data from test where data > 0 group by data having data >= 1 order by data)
[1, 2]
# test: select from (select from shared group by having order by limit)
explain select * from (select data from test where data > 0 group by data having data >= 1 order by data limit 1)
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv_to             0      0      0     ",
      "02": "cte_set             0      0      0     ",
      "03": "body                0      0      0     ",
      "04": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "set_ordered         1      0      0     ",
      "02": "group               2      1      0     ",
      "03": "int_min             3      0      0     ",
      "04": "push                3      0      0     ",
      "05": "cursor_open         0      3      7     # public.test (primary)",
      "06": "jmp                 15     0      0     ",
      "07": "cursor_idx          3      0      1     ",
      "08": "int                 4      -      0     # 0",
      "09": "gt                  5      3      4     ",
      "10": "jntr                14     5      0     ",
      "11": "cursor_idx          3      0      1     ",
      "12": "push                3      0      0     ",
      "13": "group_write         2      0      0     ",
      "14": "cursor_next         0      7      0     ",
      "15": "cursor_close        0      0      0     ",
      "16": "cursor_open_expr    1      2      18    ",
      "17": "jmp                 27     0      0     ",
      "18": "group_read          3      1      0     ",
      "19": "int                 4      -      0     # 1",
      "20": "gte                 5      3      4     ",
      "21": "jntr                26     5      0     ",
      "22": "group_read          3      1      0     ",
      "23": "group_read          4      1      0     ",
      "24": "push                4      0      0     ",
      "25": "set_add             1      3      0     ",
      "26": "cursor_next         1      18     0     ",
      "27": "cursor_close        1      0      0     ",
      "28": "set_sort            1      0      0     ",
      "29": "bool                2      0      0     ",
      "30": "push                2      0      0     ",
      "31": "int                 2      -      0     # 1",
      "32": "merge               3      1      2     ",
      "33": "cursor_open_expr    2      3      35    ",
      "34": "jmp                 38     0      0     ",
      "35": "cursor_read         1      2      0     ",
      "36": "set_add             0      1      0     ",
      "37": "cursor_next         2      35     0     ",
      "38": "cursor_close        2      0      0     ",
      "39": "result              0      0      0     ",
      "40": "ret                 0      0      0     "
    }
  }
}]
select * from (select data from test where data > 0 group by data having data >= 1 order by data limit 1)
[1]
# test: select from (select from shared group by having order by desc limit)
explain select * from (select data from test where data > 0 group by data having data >= 1 order by data desc limit 1)
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv_to             0      0      0     ",
      "02": "cte_set             0      0      0     ",
      "03": "body                0      0      0     ",
      "04": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "set_ordered         1      0      0     ",
      "02": "group               2      1      0     ",
      "03": "int_min             3      0      0     ",
      "04": "push                3      0      0     ",
      "05": "cursor_open         0      3      7     # public.test (primary)",
      "06": "jmp                 15     0      0     ",
      "07": "cursor_idx          3      0      1     ",
      "08": "int                 4      -      0     # 0",
      "09": "gt                  5      3      4     ",
      "10": "jntr                14     5      0     ",
      "11": "cursor_idx          3      0      1     ",
      "12": "push                3      0      0     ",
      "13": "group_write         2      0      0     ",
      "14": "cursor_next         0      7      0     ",
      "15": "cursor_close        0      0      0     ",
      "16": "cursor_open_expr    1      2      18    ",
      "17": "jmp                 27     0      0     ",
      "18": "group_read          3      1      0     ",
      "19": "int                 4      -      0     # 1",
      "20": "gte                 5      3      4     ",
      "21": "jntr                26     5      0     ",
      "22": "group_read          3      1      0     ",
      "23": "group_read          4      1      0     ",
      "24": "push                4      0      0     ",
      "25": "set_add             1      3      0     ",
      "26": "cursor_next         1      18     0     ",
      "27": "cursor_close        1      0      0     ",
      "28": "set_sort            1      0      0     ",
      "29": "bool                2      0      0     ",
      "30": "push                2      0      0     ",
      "31": "int                 2      -      0     # 1",
      "32": "merge               3      1      2     ",
      "33": "cursor_open_expr    2      3      35    ",
      "34": "jmp                 38     0      0     ",
      "35": "cursor_read         1      2      0     ",
      "36": "set_add             0      1      0     ",
      "37": "cursor_next         2      35     0     ",
      "38": "cursor_close        2      0      0     ",
      "39": "result              0      0      0     ",
      "40": "ret                 0      0      0     "
    }
  }
}]
select * from (select data from test where data > 0 group by data having data >= 1 order by data desc limit 1)
[2]
# test: select from (select from shared group by having order by limit/offset)
explain select * from (select data from test where data > 0 group by data having data >= 1 order by data limit 1 offset 1)
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv_to             0      0      0     ",
      "02": "cte_set             0      0      0     ",
      "03": "body                0      0      0     ",
      "04": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "set_ordered         1      0      0     ",
      "02": "group               2      1      0     ",
      "03": "int_min             3      0      0     ",
      "04": "push                3      0      0     ",
      "05": "cursor_open         0      3      7     # public.test (primary)",
      "06": "jmp                 15     0      0     ",
      "07": "cursor_idx          3      0      1     ",
      "08": "int                 4      -      0     # 0",
      "09": "gt                  5      3      4     ",
      "10": "jntr                14     5      0     ",
      "11": "cursor_idx          3      0      1     ",
      "12": "push                3      0      0     ",
      "13": "group_write         2      0      0     ",
      "14": "cursor_next         0      7      0     ",
      "15": "cursor_close        0      0      0     ",
      "16": "cursor_open_expr    1      2      18    ",
      "17": "jmp                 27     0      0     ",
      "18": "group_read          3      1      0     ",
      "19": "int                 4      -      0     # 1",
      "20": "gte                 5      3      4     ",
      "21": "jntr                26     5      0     ",
      "22": "group_read          3      1      0     ",
      "23": "group_read          4      1      0     ",
      "24": "push                4      0      0     ",
      "25": "set_add             1      3      0     ",
      "26": "cursor_next         1      18     0     ",
      "27": "cursor_close        1      0      0     ",
      "28": "set_sort            1      0      0     ",
      "29": "bool                2      0      0     ",
      "30": "push                2      0      0     ",
      "31": "int                 2      -      0     # 1",
      "32": "int                 3      -      0     # 1",
      "33": "merge               4      1      2     ",
      "34": "cursor_open_expr    2      4      36    ",
      "35": "jmp                 39     0      0     ",
      "36": "cursor_read         1      2      0     ",
      "37": "set_add             0      1      0     ",
      "38": "cursor_next         2      36     0     ",
      "39": "cursor_close        2      0      0     ",
      "40": "result              0      0      0     ",
      "41": "ret                 0      0      0     "
    }
  }
}]
select * from (select data from test where data > 0 group by data having data >= 1 order by data limit 1 offset 1)
[2]
# test: select from (select from shared group by having order by offset)
explain select * from (select data from test where data > 0 group by data having data >= 1 order by data offset 1)
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv_to             0      0      0     ",
      "02": "cte_set             0      0      0     ",
      "03": "body                0      0      0     ",
      "04": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "set_ordered         1      0      0     ",
      "02": "group               2      1      0     ",
      "03": "int_min             3      0      0     ",
      "04": "push                3      0      0     ",
      "05": "cursor_open         0      3      7     # public.test (primary)",
      "06": "jmp                 15     0      0     ",
      "07": "cursor_idx          3      0      1     ",
      "08": "int                 4      -      0     # 0",
      "09": "gt                  5      3      4     ",
      "10": "jntr                14     5      0     ",
      "11": "cursor_idx          3      0      1     ",
      "12": "push                3      0      0     ",
      "13": "group_write         2      0      0     ",
      "14": "cursor_next         0      7      0     ",
      "15": "cursor_close        0      0      0     ",
      "16": "cursor_open_expr    1      2      18    ",
      "17": "jmp                 27     0      0     ",
      "18": "group_read          3      1      0     ",
      "19": "int                 4      -      0     # 1",
      "20": "gte                 5      3      4     ",
      "21": "jntr                26     5      0     ",
      "22": "group_read          3      1      0     ",
      "23": "group_read          4      1      0     ",
      "24": "push                4      0      0     ",
      "25": "set_add             1      3      0     ",
      "26": "cursor_next         1      18     0     ",
      "27": "cursor_close        1      0      0     ",
      "28": "set_sort            1      0      0     ",
      "29": "bool                2      0      0     ",
      "30": "push                2      0      0     ",
      "31": "int                 2      -      0     # 1",
      "32": "merge               3      1      -1    ",
      "33": "cursor_open_expr    2      3      35    ",
      "34": "jmp                 38     0      0     ",
      "35": "cursor_read         1      2      0     ",
      "36": "set_add             0      1      0     ",
      "37": "cursor_next         2      35     0     ",
      "38": "cursor_close        2      0      0     ",
      "39": "result              0      0      0     ",
      "40": "ret                 0      0      0     "
    }
  }
}]
select * from (select data from test where data > 0 group by data having data >= 1 order by data offset 1)
[2]
drop table test
disconnect S0
close E0
