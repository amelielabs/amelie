#

env_open E0 "cluster_shards": 3
connect E0 S0

# test: reference insert
create table test (id int primary key, data int default 0) reference
explain insert into test (id) values (1), (2), (3)
insert into test (id) values (1), (2), (3)

# test: reference delete
explain delete from test
delete from test
select * from test

# test: reference delete join expr
insert into test (id) values (1), (2), (3), (4)
explain delete from test, [1,2,3] e where test.id = e.*
delete from test, [1,2,3] e where test.id = e.*
select * from test

# test: reference delete join on expr join on expr
delete from test
insert into test (id) values (1), (2), (3), (4)
explain delete from test join [1,2,3] e on (test.id = e.*) join [3,2,1] e2 on (test.id = e2.*)
delete from test join [1,2,3] e on (test.id = e.*) join [3,2,1] e2 on (test.id = e2.*)
select * from test
delete from test

# test: reference delete join self
insert into test (id) values (1), (2), (3)
explain delete from test, test e where test.id = e.id

# test: reference update
explain update test set data = id
update test set data = id
select * from test

# test: reference update join expr
explain update test join [1,2,3] e on (test.id = e.*) set data = e.* * 2
update test join [1,2,3] e on (test.id = e.*) set data = e.* * 2
select * from test
update test set data = id

# test: reference update join self
explain update test join test e on (test.id = e.id) set data = e.id * 2

# test: reference upsert
explain insert into test (id) values (1), (2), (3) on conflict do update set data = data + 1
insert into test (id) values (1), (2), (3) on conflict do update set data = data + 1
select * from test
drop table test

# test: table insert
create table test (id int primary key, data int default 0)
explain insert into test (id) values (1), (2), (3)
insert into test (id) values (1), (2), (3)
select * from test

# test: table delete
explain delete from test
delete from test
select * from test

# test: table delete join expr
insert into test (id) values (1), (2), (3), (4)
explain delete from test, [1,2,3] e where test.id = e.*
delete from test, [1,2,3] e where test.id = e.*
select * from test

# test: table delete join on expr join on expr
delete from test
insert into test (id) values (1), (2), (3), (4)
explain delete from test join [1,2,3] e on (test.id = e.*) join [3,2,1] e2 on (test.id = e2.*)
delete from test join [1,2,3] e on (test.id = e.*) join [3,2,1] e2 on (test.id = e2.*)
select * from test
delete from test

# test: table delete join self
insert into test (id) values (1), (2), (3)
explain delete from test, test e where test.id = e.id

# test: table update
explain update test set data = id
update test set data = id
select * from test

# test: table update join self
explain update test join test e on (test.id = e.id) set data = e.id * 2

# test: table upsert
explain insert into test (id) values (1), (2), (3) on conflict do update set data = data + 1
insert into test (id) values (1), (2), (3) on conflict do update set data = data + 1
select * from test
drop table test

disconnect S0
env_close E0
