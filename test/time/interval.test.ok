open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3485 }]
connect E0 S0 localhost:3485
# test: year
select '1 year'::interval
["1 year"]
select '2 years'::interval
["2 years"]
select '2 year'::interval
["2 years"]
select '200 years'::interval
["200 years"]
select interval '200 years'
["200 years"]
# test: month
select '1 month'::interval
["1 month"]
select '1 months'::interval
["1 month"]
select '3 months'::interval
["3 months"]
select '5 years 3 months'::interval
["5 years 3 months"]
select '3 months 5 years'::interval
["5 years 3 months"]
select interval '3 months 5 years'
["5 years 3 months"]
# test: week
select '5 weeks'::interval
["35 days"]
select '5 week'::interval
["35 days"]
select '1 week'::interval
["7 days"]
select '1 year 3 weeks'::interval
["1 year 21 days"]
select '1 week 2 weeks 3 weeks'::interval
["42 days"]
select interval '1 week 2 weeks 3 weeks'
["42 days"]
# test: day
select '1 week 15 days'::interval
["22 days"]
select '15 days'::interval
["15 days"]
select '1 day'::interval
["1 day"]
select '15 years 10 days'::interval
["15 years 10 days"]
select '15 years 500 days'::interval
["15 years 500 days"]
select '15 years 6 days'::interval
["15 years 6 days"]
select '15 years 7 days'::interval
["15 years 7 days"]
select '15 years 8 days'::interval
["15 years 8 days"]
select '15 years 9 days'::interval
["15 years 9 days"]
select interval '15 years 9 days'
["15 years 9 days"]
# test: hour
select '15 years 28 hours'::interval
["15 years 28 hours"]
select '15 years 27 hours'::interval
["15 years 27 hours"]
select '15 years 26 hours'::interval
["15 years 26 hours"]
select '15 years 25 hours'::interval
["15 years 25 hours"]
select '15 years 24 hours'::interval
["15 years 24 hours"]
select '15 years 23 hours'::interval
["15 years 23 hours"]
select interval('15 years 23 hours')
["15 years 23 hours"]
select interval '15 years 23 hours'
["15 years 23 hours"]
# test: minute
select '15 years 70 minutes'::interval
["15 years 1 hour 10 minutes"]
select '15 years 1 minute'::interval
["15 years 1 minute"]
select '15 years 125 minutes'::interval
["15 years 2 hours 5 minutes"]
select '8 minutes'::interval
["8 minutes"]
select interval('8 minutes')
["8 minutes"]
select interval '8 minutes'
["8 minutes"]
# test: second
select '8 minutes 70 seconds'::interval
["9 minutes 10 seconds"]
select '8 minutes 60 seconds'::interval
["9 minutes"]
select '3 seconds'::interval
["3 seconds"]
# test: milliseconds
select '3 milliseconds'::interval
["3 ms"]
select '3 millisecond'::interval
["3 ms"]
select '3 ms'::interval
["3 ms"]
select '1 minute 3 ms'::interval
["1 minute 3 ms"]
# test: microseconds
select '3 microseconds'::interval
["3 us"]
select '3 microsecond'::interval
["3 us"]
select '3 us'::interval
["3 us"]
select '1 minute 3 ms 10 us'::interval
["1 minute 3 ms 10 us"]
select '50000 us'::interval
["50 ms"]
# test: convertion (string)
select '1 hour 5 minutes 6 seconds'::interval
["1 hour 5 minutes 6 seconds"]
select '1 hour 5 minutes 6 seconds'::interval::string
["1 hour 5 minutes 6 seconds"]
select '1 hour 5 minutes 6 seconds'::interval::string::interval
["1 hour 5 minutes 6 seconds"]
select '1 hour 5 minutes 6 seconds'::interval::string::interval::string
["1 hour 5 minutes 6 seconds"]
select interval('1 hour 5 minutes 6 seconds')::string::interval::string
["1 hour 5 minutes 6 seconds"]
select interval '1 hour 5 minutes 6 seconds' ::string::interval::string
["1 hour 5 minutes 6 seconds"]
select (interval '1 hour 5 minutes 6 seconds')::string::interval::string
["1 hour 5 minutes 6 seconds"]
# test: convertion (document)
select ['5 hours 6 seconds'::interval, '1 years'::interval]
["5 hours 6 seconds", "1 year"]
select {"key": "5 hours 6 second"::interval}
[{
  "key": "5 hours 6 seconds"
}]
# test: zero
select '0 hour'::interval
[""]
select '0 hour'::interval::string
[""]
select '0 hour'::interval::string::interval
[""]
select ''::interval::string::interval
[""]
# test: negative
select '-1 hour'::interval
["-1 hours"]
select '-1 hours'::interval
["-1 hours"]
select '-1 hour 10 minutes'::interval
["-50 minutes"]
select '-1 hour 10 minutes 5 seconds'::interval
["-49 minutes -55 seconds"]
select '-1 hour 10 minutes -5 seconds'::interval
["-50 minutes -5 seconds"]
# test: add
select  '1 hour'::interval + '2 hours'::interval
["3 hours"]
select ('1 hour'::interval + '2 hours'::interval)::string
["3 hours"]
select ('1 hour'::interval + '2 hours'::interval)::string::interval
["3 hours"]
select  '1 hour'::interval + '-2 hours'::interval
["-1 hours"]
select  '5 days 1 hour'::interval + '-2 hours'::interval
["5 days -1 hours"]
# test: sub
select  '1 hour'::interval - '2 hours'::interval
["-1 hours"]
select  '10 hour'::interval - '2 hours'::interval
["8 hours"]
select  '1 year 1 day 10 hour'::interval - '2 hours'::interval
["1 year 1 day 8 hours"]
select  '1 year 1 day 10 hour'::interval - '1 year 2 hours'::interval
["1 day 8 hours"]
# test: eq
select  '1 hour'::interval = '1 hours'::interval
[true]
select  '1 hour'::interval = '1 hours 10 seconds'::interval
[false]
# test: lte
select  '1 hour'::interval <= '1 hour'::interval
[true]
select  '60 minutes'::interval <= '1 hour'::interval
[true]
select  '10 hour'::interval <= '1 hour'::interval
[false]
# test: lt
select  '1 hour'::interval < '1 hour'::interval
[false]
select  '60 minutes'::interval < '1 hour'::interval
[false]
select  '59 minutes'::interval < '1 hour'::interval
[true]
select  '10 hour'::interval < '1 hour'::interval
[false]
# test: gte
select  '1 hour'::interval >= '1 hour'::interval
[true]
select  '60 minutes'::interval >= '1 hour'::interval
[true]
select  '59 minutes'::interval >= '1 hour'::interval
[false]
select  '61 minutes'::interval >= '1 hour'::interval
[true]
# test: gt
select  '1 hour'::interval > '1 hour'::interval
[false]
select  '60 minutes'::interval > '1 hour'::interval
[false]
select  '61 minutes'::interval > '1 hour'::interval
[true]
# test: between
select interval '1 hour' between interval '55 minutes' and interval '1 hour 10 minutes'
[true]
select interval '1 hour' between interval '55 minutes' and interval '55 minutes'
[false]
select interval '1 hour' not between interval '55 minutes' and interval '55 minutes'
[true]
# test: interval column
create table test (id int primary key, i interval)
[]
insert into test values (0, "1 year 1 day 10 hour")
{"code": 1, "msg": "column i: does not match data type interval"}
insert into test values (0, "1 year 1 day 10 hour"::interval)
{"code": 1, "msg": "expected ')'"}
insert into test values (0, interval "1 year 1 day 10 hour")
[]
insert into test values (1, interval "1 year 1 day 11 hour")
[]
insert into test values (2, interval "1 year 1 day 12 hour 500 us")
[]
select * from test
[[0, "1 year 1 day 10 hours"], [1, "1 year 1 day 11 hours"], [2, "1 year 1 day 12 hours 500 us"]]
select * from test where i > "1 year 1 day 10 hour"::interval
[[1, "1 year 1 day 11 hours"], [2, "1 year 1 day 12 hours 500 us"]]
explain select * from test where i > "1 year 1 day 10 hour"::interval
["
bytecode [coordinator]
--------
 0            send_all        0      0      0
 1                recv        0      0      0
 2                bool        0      0      0
 3                push        0      0      0
 4          merge_recv        0     -1     -1
 5             cte_set        0      0      0
 6                body        0      0      0
 7                 ret        0      0      0


bytecode [node]
--------
 0                 set        0      0      0
 1             int_min        1      0      0
 2                push        1      0      0
 3         cursor_open        0      0      5      # public.test (primary)
 4                 jmp       14      0      0
 5          cursor_idx        1      0      1
 6              string        2     20      0      # 1 year 1 day 10 hour
 7                push        2      0      0
 8                call        2      -      1      # public.interval()
 9                  gt        3      1      2
10                jntr       13      3      0
11         cursor_read        1      0      0
12             set_add        0      1      0
13         cursor_next        0      5      0
14        cursor_close        0      0      0
15              result        0      0      0
16                 ret        0      0      0

"]
select * from test where i = "1 year 1 day 12 hours 500 us"::interval
[[2, "1 year 1 day 12 hours 500 us"]]
drop table test
[]
# test: interval column (key)
create table test (id interval primary key)
{"code": 1, "msg": "<id> column key can be string, int or timestamp"}
disconnect S0
close E0
