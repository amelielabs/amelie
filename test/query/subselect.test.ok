open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3485 }]
connect E0 S0 localhost:3485
# test: select (select const)
select (select 0)
[[0]]
select (select 1234)
[[1234]]
select (select null)
[[null]]
select (select "hello")
[["hello"]]
# test: select (select expr)
select (select 1 + 1)
[[2]]
select (select 2 * 2)
[[4]]
select (select 8 * 8)
[[64]]
select (select 64 / ( 4 + 4 ))
[[8]]
select (select 64 / 0)
{"msg": "zero division"}
select (select 64 % 0)
{"msg": "zero division"}
# test: select (select [])
select (select [])
[[[]]]
select (select [1])
[[[1]]]
select (select [1,2,3])
[[[1, 2, 3]]]
# test: select (select function())
select system.schemas()
[{
  "system": {
    "name": "system",
    "system": true,
    "create": false
  },
  "public": {
    "name": "public",
    "system": true,
    "create": true
  }
}]
select (select system.schemas())
[[{
  "system": {
    "name": "system",
    "system": true,
    "create": false
  },
  "public": {
    "name": "public",
    "system": true,
    "create": true
  }
}]]
# test: select (select {})
select (select {})
[[{}]]
select (select {"a": 1})
[[{
  "a": 1
}]]
select (select {"a": 1, "b": null})
[[{
  "a": 1,
  "b": null
}]]
# test: select (select *) from shared
create shared table test (id int primary key)
insert into test values (1)
insert into test values (2)
insert into test values (3)
select (select *) from test
[[1], [2], [3]]
# test: select (select target.*) from shared
explain select (select test.*) from test
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      1      0     ",
      "01": "int                 1      -      0     # -2147483648",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 12     0      0     ",
      "05": "set                 1      1      0     ",
      "06": "cursor_readi32      2      0      0     ",
      "07": "push                2      0      0     ",
      "08": "set_add             1      0      0     ",
      "09": "push                1      0      0     ",
      "10": "set_add             0      0      0     ",
      "11": "cursor_next         0      5      0     ",
      "12": "cursor_close        0      0      0     ",
      "13": "result              0      0      0     ",
      "14": "ret                 0      0      0     "
    }
  }
}]
select (select test.*) from test
[[1], [2], [3]]
# test: select (select alias.*) from shared
select (select t.*) from test t
[[1], [2], [3]]
select (select t.*) from test
{"msg": "<t> target not found"}
select (select t) from test t
{"msg": "<t> target column cannot be found"}
# test: select (select target.column) from shared
explain select (select test.id) from test
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      1      0     ",
      "01": "int                 1      -      0     # -2147483648",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 12     0      0     ",
      "05": "set                 1      1      0     ",
      "06": "cursor_readi32      2      0      0     ",
      "07": "push                2      0      0     ",
      "08": "set_add             1      0      0     ",
      "09": "push                1      0      0     ",
      "10": "set_add             0      0      0     ",
      "11": "cursor_next         0      5      0     ",
      "12": "cursor_close        0      0      0     ",
      "13": "result              0      0      0     ",
      "14": "ret                 0      0      0     "
    }
  }
}]
select (select test.id) from test
[[1], [2], [3]]
select (select id) from test
{"msg": "<id> target column cannot be found"}
# test: select (select alias.column) from shared
explain select (select t.id) from test t
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      1      0     ",
      "01": "int                 1      -      0     # -2147483648",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 12     0      0     ",
      "05": "set                 1      1      0     ",
      "06": "cursor_readi32      2      0      0     ",
      "07": "push                2      0      0     ",
      "08": "set_add             1      0      0     ",
      "09": "push                1      0      0     ",
      "10": "set_add             0      0      0     ",
      "11": "cursor_next         0      5      0     ",
      "12": "cursor_close        0      0      0     ",
      "13": "result              0      0      0     ",
      "14": "ret                 0      0      0     "
    }
  }
}]
select (select t.id) from test
{"msg": "<t> target not found"}
select (select t.id) from test t
[[1], [2], [3]]
drop table test
# test: select (select target.path) from shared
create shared table test (id int primary key serial, data json)
insert into test (data) values({"data": {"id": 1}})
insert into test (data) values({"data": {"id": 2}})
insert into test (data) values({"data": {"id": 3}})
select (select test) from test
{"msg": "<test> target column cannot be found"}
select (select test.data) from test
[[{
  "data": {
    "id": 1
  }
}], [{
  "data": {
    "id": 2
  }
}], [{
  "data": {
    "id": 3
  }
}]]
select (select test.data.data) from test
[[{
  "id": 1
}], [{
  "id": 2
}], [{
  "id": 3
}]]
select (select test.data.data.id) from test
[[1], [2], [3]]
# test: select (select alias.path) from shared
select (select t) from test t
{"msg": "<t> target column cannot be found"}
select (select t.data) from test t
[[{
  "data": {
    "id": 1
  }
}], [{
  "data": {
    "id": 2
  }
}], [{
  "data": {
    "id": 3
  }
}]]
select (select t.data.data) from test t
[[{
  "id": 1
}], [{
  "id": 2
}], [{
  "id": 3
}]]
select (select t.data.data.id) from test t
[[1], [2], [3]]
drop table test
# test: select from (select const)
select * from (select 0)
{"msg": "FROM (SELECT) subquery has no target"}
select * from (select null)
{"msg": "FROM (SELECT) subquery has no target"}
select * from (select 1, 2)
{"msg": "FROM (SELECT) subquery has no target"}
# test: select * from (select from shared)
create shared table test (id int primary key)
insert into test values (1)
insert into test values (2)
insert into test values (3)
select * from (select * from test)
{"msg": "FROM (SELECT) subquery must have an alias"}
select * from (select * from test) t
[1, 2, 3]
explain select * from (select * from test) t
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv_to             0      0      0     ",
      "02": "cte_set             0      0      0     ",
      "03": "body                0      0      0     ",
      "04": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      1      0     ",
      "01": "set                 1      1      0     ",
      "02": "int                 2      -      0     # -2147483648",
      "03": "push                2      0      0     ",
      "04": "cursor_open         0      0      6     # public.test (primary)",
      "05": "jmp                 10     0      0     ",
      "06": "cursor_readi32      2      0      0     ",
      "07": "push                2      0      0     ",
      "08": "set_add             1      0      0     ",
      "09": "cursor_next         0      6      0     ",
      "10": "cursor_close        0      0      0     ",
      "11": "store_open          1      1      13    ",
      "12": "jmp                 17     0      0     ",
      "13": "store_read          2      1      0     ",
      "14": "push                2      0      0     ",
      "15": "set_add             0      0      0     ",
      "16": "store_next          1      13     0     ",
      "17": "store_open          1      1      0     ",
      "18": "result              0      0      0     ",
      "19": "ret                 0      0      0     "
    }
  }
}]
# test: select target.* from (select from shared)
select test.* from (select * from test)
{"msg": "FROM (SELECT) subquery must have an alias"}
select test.* from (select * from test) test
{"msg": "<test> target is redefined, please use different alias for the target"}
select test from (select * from test)
{"msg": "FROM (SELECT) subquery must have an alias"}
# test: select alias.* from (select from shared)
select alias from (select * from test) alias
{"msg": "<alias.alias> column not found"}
select alias.* from (select * from test) alias
[1, 2, 3]
select alias.* from (select test.* from test) alias
[1, 2, 3]
select alias.* from (select x.* from test x) alias
[1, 2, 3]
select alias.* from (select alias.* from test alias) alias
{"msg": "<alias> target is redefined, please use different alias for the target"}
select alias.* from (select * from test) alias
[1, 2, 3]
drop table test
create shared table test (id int primary key serial, obj json)
insert into test (obj) values({"data": {"id": 1}})
insert into test (obj) values({"data": {"id": 2}})
insert into test (obj) values({"data": {"id": 3}})
# test: select target.path from (select from shared)
select obj from (select * from test)
{"msg": "FROM (SELECT) subquery must have an alias"}
select * from (select * from test) alias
[[0, {
  "data": {
    "id": 1
  }
}], [1, {
  "data": {
    "id": 2
  }
}], [2, {
  "data": {
    "id": 3
  }
}]]
select obj from (select * from test) alias
[{
  "data": {
    "id": 1
  }
}, {
  "data": {
    "id": 2
  }
}, {
  "data": {
    "id": 3
  }
}]
select alias.* from (select * from test) alias
[[0, {
  "data": {
    "id": 1
  }
}], [1, {
  "data": {
    "id": 2
  }
}], [2, {
  "data": {
    "id": 3
  }
}]]
select alias.obj.data from (select * from test) alias
[{
  "id": 1
}, {
  "id": 2
}, {
  "id": 3
}]
select alias.obj.data.id from (select * from test) alias
[1, 2, 3]
drop table test
# test: select (select from shared)
create shared table test (id int primary key)
insert into test values (1)
insert into test values (2)
insert into test values (3)
explain select (select * from test)
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv_to             0      0      0     ",
      "02": "cte_set             0      0      0     ",
      "03": "body                0      0      0     ",
      "04": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      1      0     ",
      "01": "set                 1      1      0     ",
      "02": "int                 2      -      0     # -2147483648",
      "03": "push                2      0      0     ",
      "04": "cursor_open         0      0      6     # public.test (primary)",
      "05": "jmp                 10     0      0     ",
      "06": "cursor_readi32      2      0      0     ",
      "07": "push                2      0      0     ",
      "08": "set_add             1      0      0     ",
      "09": "cursor_next         0      6      0     ",
      "10": "cursor_close        0      0      0     ",
      "11": "push                1      0      0     ",
      "12": "set_add             0      0      0     ",
      "13": "result              0      0      0     ",
      "14": "ret                 0      0      0     "
    }
  }
}]
select (select * from test)
[[1, 2, 3]]
# test: select (select from shared) no result
select (select * from test where false)
[[]]
# test: select (select from shared) from shared
select (select * from test) from test
{"msg": "<test> target is redefined, please use different alias for the target"}
select (select * from test t) from test
[[1, 2, 3], [1, 2, 3], [1, 2, 3]]
explain select (select i.* from test i) from test
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      1      0     ",
      "01": "int                 1      -      0     # -2147483648",
      "02": "push                1      0      0     ",
      "03": "cursor_open         1      0      5     # public.test (primary)",
      "04": "jmp                 18     0      0     ",
      "05": "set                 1      1      0     ",
      "06": "int                 2      -      0     # -2147483648",
      "07": "push                2      0      0     ",
      "08": "cursor_open         0      20     10    # public.test (primary)",
      "09": "jmp                 14     0      0     ",
      "10": "cursor_readi32      2      0      0     ",
      "11": "push                2      0      0     ",
      "12": "set_add             1      0      0     ",
      "13": "cursor_next         0      10     0     ",
      "14": "cursor_close        0      0      0     ",
      "15": "push                1      0      0     ",
      "16": "set_add             0      0      0     ",
      "17": "cursor_next         1      5      0     ",
      "18": "cursor_close        1      0      0     ",
      "19": "result              0      0      0     ",
      "20": "ret                 0      0      0     "
    }
  }
}]
# test: select (select from shared) from shared #2
explain select (select i.* from test i where test.id = i.id) from test
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      1      0     ",
      "01": "int                 1      -      0     # -2147483648",
      "02": "push                1      0      0     ",
      "03": "cursor_open         1      0      5     # public.test (primary)",
      "04": "jmp                 22     0      0     ",
      "05": "set                 1      1      0     ",
      "06": "int                 2      -      0     # -2147483648",
      "07": "push                2      0      0     ",
      "08": "cursor_open         0      20     10    # public.test (primary)",
      "09": "jmp                 18     0      0     ",
      "10": "cursor_readi32      2      1      0     ",
      "11": "cursor_readi32      3      0      0     ",
      "12": "equii               4      2      3     ",
      "13": "jntr                17     4      0     ",
      "14": "cursor_readi32      2      0      0     ",
      "15": "push                2      0      0     ",
      "16": "set_add             1      0      0     ",
      "17": "cursor_next         0      10     0     ",
      "18": "cursor_close        0      0      0     ",
      "19": "push                1      0      0     ",
      "20": "set_add             0      0      0     ",
      "21": "cursor_next         1      5      0     ",
      "22": "cursor_close        1      0      0     ",
      "23": "result              0      0      0     ",
      "24": "ret                 0      0      0     "
    }
  }
}]
select (select i.* from test i where test.id = i.id) from test
[[1], [2], [3]]
# test: select (select from shared) from shared #3
create shared table a (id int primary key serial, data int default 0)
create shared table b (id int primary key serial, data int default 1)
insert into a () values (), (), ()
insert into b () values (), (), ()
explain select (select * from b where a.id = b.id) from a
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      1      0     ",
      "01": "int                 1      -      0     # -2147483648",
      "02": "push                1      0      0     ",
      "03": "cursor_open         1      0      5     # public.a (primary)",
      "04": "jmp                 24     0      0     ",
      "05": "set                 1      2      0     ",
      "06": "int                 2      -      0     # -2147483648",
      "07": "push                2      0      0     ",
      "08": "cursor_open         0      17     10    # public.b (primary)",
      "09": "jmp                 20     0      0     ",
      "10": "cursor_readi32      2      1      0     ",
      "11": "cursor_readi32      3      0      0     ",
      "12": "equii               4      2      3     ",
      "13": "jntr                19     4      0     ",
      "14": "cursor_readi32      2      0      0     ",
      "15": "push                2      0      0     ",
      "16": "cursor_readi32      2      0      1     ",
      "17": "push                2      0      0     ",
      "18": "set_add             1      0      0     ",
      "19": "cursor_next         0      10     0     ",
      "20": "cursor_close        0      0      0     ",
      "21": "push                1      0      0     ",
      "22": "set_add             0      0      0     ",
      "23": "cursor_next         1      5      0     ",
      "24": "cursor_close        1      0      0     ",
      "25": "result              0      0      0     ",
      "26": "ret                 0      0      0     "
    }
  }
}]
select (select * from b where a.id = b.id) from a
[[[0, 1]], [[1, 1]], [[2, 1]]]
select (select a.*, b.* from b where a.id = b.id) from a
[[[0, 0, 0, 1]], [[1, 0, 1, 1]], [[2, 0, 2, 1]]]
# test: select from table where (select from shared)
explain select * from a where (select true from b where a.id = b.id)
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      2      0     ",
      "01": "int                 1      -      0     # -2147483648",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.a (primary)",
      "04": "jmp                 26     0      0     ",
      "05": "set                 1      1      0     ",
      "06": "int                 2      -      0     # -2147483648",
      "07": "push                2      0      0     ",
      "08": "cursor_open         1      17     10    # public.b (primary)",
      "09": "jmp                 18     0      0     ",
      "10": "cursor_readi32      2      0      0     ",
      "11": "cursor_readi32      3      1      0     ",
      "12": "equii               4      2      3     ",
      "13": "jntr                17     4      0     ",
      "14": "bool                2      1      0     ",
      "15": "push                2      0      0     ",
      "16": "set_add             1      0      0     ",
      "17": "cursor_next         1      10     0     ",
      "18": "cursor_close        1      0      0     ",
      "19": "jntr                25     1      0     ",
      "20": "cursor_readi32      1      0      0     ",
      "21": "push                1      0      0     ",
      "22": "cursor_readi32      1      0      1     ",
      "23": "push                1      0      0     ",
      "24": "set_add             0      0      0     ",
      "25": "cursor_next         0      5      0     ",
      "26": "cursor_close        0      0      0     ",
      "27": "result              0      0      0     ",
      "28": "ret                 0      0      0     "
    }
  }
}]
select * from a where (select true from b where a.id = b.id)
[[0, 0], [1, 0], [2, 0]]
drop table a
drop table b
drop table test
# test: select set operations (unsupported)
create shared table a (id int primary key serial, data int default 0)
create shared table b (id int primary key serial, data int default 1)
explain select length(select * from a)
[{
  "bytecode": {
    "coordinator": {
      "00": "send_first          0      0      0     ",
      "01": "recv_to             0      0      0     ",
      "02": "cte_set             0      0      0     ",
      "03": "body                0      0      0     ",
      "04": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      1      0     ",
      "01": "set                 1      2      0     ",
      "02": "int                 2      -      0     # -2147483648",
      "03": "push                2      0      0     ",
      "04": "cursor_open         0      0      6     # public.a (primary)",
      "05": "jmp                 12     0      0     ",
      "06": "cursor_readi32      2      0      0     ",
      "07": "push                2      0      0     ",
      "08": "cursor_readi32      2      0      1     ",
      "09": "push                2      0      0     ",
      "10": "set_add             1      0      0     ",
      "11": "cursor_next         0      6      0     ",
      "12": "cursor_close        0      0      0     ",
      "13": "push                1      0      0     ",
      "14": "call                1      -      1     # public.length()",
      "15": "push                1      0      0     ",
      "16": "set_add             0      0      0     ",
      "17": "result              0      0      0     ",
      "18": "ret                 0      0      0     "
    }
  }
}]
select length(select * from a)
{"msg": "length(set): operation type is not supported"}
explain select (select * from a)[0]
{"msg": "unsupported operation: <set> [] <int>"}
select (select * from a)[0]
{"msg": "unsupported operation: <set> [] <int>"}
explain select (select a.* from a) + (select b.* from b)
{"msg": "unsupported operation: <set> + <set>"}
select (select a.* from a) + (select b.* from b)
{"msg": "unsupported operation: <set> + <set>"}
drop table a
drop table b
disconnect S0
close E0
