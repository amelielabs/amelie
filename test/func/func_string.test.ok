open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3485 }]
connect E0 S0 localhost:3485
# test: length/size
select ""::length
0
select ""::size
0
select "hello"::length
5
select "hello"::size
5
select null::size
0
select []::size
0
select [1,2,3]::size
3
select {}::size
0
select {"a": null}::size
1
select {"a": null, "b": null}::size
2
select (select * from [1,2,3])::size
3
# test: concat
select concat()
""
select concat(null)
""
select concat(null, null)
""
select concat("a", null)
"a"
select concat("a", null, "b")
"ab"
select concat("a", null, "b")
"ab"
select concat("a", null, "b", 3)
{"code": 1, "msg": "concat(): string argument expected"}
select concat("a", null, "b", 3::string)
"ab3"
select lambda list = list::concat(*::string) from [1,2,3]
["123"]
select (lambda list = list::concat(*::string))::size from [1,2,3]
[3]
# test: lower
select ""::lower
""
select "Hello World"::lower
"hello world"
select null::lower
{"code": 1, "msg": "lower(): incorrect type of 0 argument"}
# test: upper
select ""::upper
""
select "Hello World"::upper
"HELLO WORLD"
# test: substr
select substr("")
{"code": 1, "msg": "substr(): unexpected number of arguments"}
select substr("hi", 0)
{"code": 1, "msg": "substr(): position is out of bounds"}
select substr("hi", 1)
"hi"
select substr("hi", 2)
"i"
select substr("hi", 3)
{"code": 1, "msg": "substr(): position is out of bounds"}
select substr("hi", 1, 0)
""
select substr("hi", 1, 1)
"h"
select substr("hi", 1, 2)
"hi"
select substr("hi", 1, 3)
{"code": 1, "msg": "substr(): position is out of bounds"}
select "hello"::substr(2)
"ello"
select "hello"::substr(2, 1)
"e"
select "hello"::substr(2, 2)
"el"
select "hello"::substr(2, 3)
"ell"
select "hello"::substr(2, 4)
"ello"
select "hello"::substr(2, 5)
{"code": 1, "msg": "substr(): position is out of bounds"}
# test: strpos
select "hello"::strpos("")
0
select "hello"::strpos("h")
1
select "hello"::strpos("e")
2
select "hello"::strpos("l")
3
select "hello"::strpos("ll")
3
select "hello"::strpos("llo")
3
select "hello"::strpos("lloo")
0
select "hello"::strpos("lo")
4
select "hello"::strpos("o")
5
select substr("hello", "hello"::strpos("lo"), 2)
"lo"
# test: replace
select replace('The cat sat on the mat, mat, mat in the corner of the room.','mat','rug')
"The cat sat on the rug, rug, rug in the corner of the room."
select "hihi"::replace("hi", "hello ")
"hello hello "
select "hihellohi"::replace("hi", "")
"hello"
select "hihellohi"::replace("hello", "")
"hihi"
select "hihi"::replace("hi", "")
""
select "hihello"::replace("hello", "X")
"hiX"
select "hihell"::replace("hello", "X")
"hihell"
select "hihel"::replace("hello", "X")
"hihel"
select "hihe"::replace("hello", "X")
"hihe"
select "hih"::replace("hello", "X")
"hih"
select "hi"::replace("hello", "X")
"hi"
select "hellohi"::replace("hello", "X")
"Xhi"
select "hellhi"::replace("hello", "X")
"hellhi"
select "helhi"::replace("hello", "X")
"helhi"
select "hehi"::replace("hello", "X")
"hehi"
select "hhi"::replace("hello", "X")
"hhi"
select "hhi"::replace("", "X")
{"code": 1, "msg": "replace(): invalid from argument"}
# test: ltrim
select ""::ltrim()
""
select ""::ltrim("")
""
select ""::ltrim(null)
{"code": 1, "msg": "ltrim(): incorrect type of 1 argument"}
select "  	 123"::ltrim()
"123"
select "  123"::ltrim(" ")
"123"
select "  123  "::ltrim(" 1")
"23  "
select "$$123"::ltrim("$")
"123"
select "$$"::ltrim("$")
""
# test: rtrim
select ""::rtrim()
""
select ""::rtrim("")
""
select ""::rtrim(null)
{"code": 1, "msg": "rtrim(): incorrect type of 1 argument"}
select "  	 123"::rtrim()
"  	 123"
select "  123  "::rtrim(" ")
"  123"
select "  123  "::rtrim(" 13")
"  12"
select "$$123 $$"::rtrim("$")
"$$123 "
select "$$"::rtrim("$")
""
select "123$"::rtrim("$")
"123"
select "$"::rtrim("$")
""
select ""::rtrim("$")
""
# test: trim
select ""::trim()
""
select ""::trim("")
""
select ""::trim(null)
{"code": 1, "msg": "trim(): incorrect type of 1 argument"}
select "  	 123"::trim()
"123"
select "  123  "::trim(" ")
"123"
select "  123  "::trim(" 13")
"2"
select "$$123 $$"::trim("$")
"123 "
select "$$"::trim("$")
""
select "123$"::trim("$")
"123"
select "$"::trim("$")
""
select ""::trim("$")
""
disconnect S0
close E0
