#

open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3480 }], "shards": 3, "repl_reconnect_ms": 10
connect E0 S0 localhost:3480

# test: primary by default
show repl

# test: backup replica
backup E1 127.0.0.1:3480
close E1

open E1 "uuid": "00000000-0000-0000-0000-000000000001", "listen": [{ "host": "127.0.0.1", "port": 3481 }]
connect E1 S1 localhost:3481
switch S1

show uuid
show repl

# test: start replica
start repl

# test: promote (using self id)
promote "00000000-0000-0000-0000-000000000001"

# test: promote
promote "00000000-0000-0000-0000-000000000000"
show repl
show read_only

# test: create replica
switch S0
show replicas

create replica "00000000-0000-0000-0000-000000000001" "127.0.0.1:3481"
show replicas

# test: start primary
start repl

# test: wait for primary connect
watch system.replicas()[0].connected = true

# test: write
create table test (id int primary key)
insert into test 1,2,3

show lsn

# test: wait replica sync
watch system.replicas()[0].lsn = system.config().lsn

# test: stop replica
disconnect S1
close E1

# test: write (replica off)
insert into test 4
insert into test 5
insert into test 6

show lsn

# test: replica lag
show replicas

# test: replica disconnected
switch S0
watch system.replicas()[0].connected = false

# test: restart replica
open E1 "uuid": "00000000-0000-0000-0000-000000000001", "listen": [{ "host": "127.0.0.1", "port": 3481 }]
connect E1 S1 localhost:3481

# test: wait for primary reconnect
switch S0
watch system.replicas()[0].connected = true

# test: wait replica sync
watch system.replicas()[0].lsn = system.config().lsn
show replicas

# test: restart primary
disconnect S0
close E0

open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3480 }], "shards": 3, "repl_reconnect_ms": 10
connect E0 S0 localhost:3480

# test: wait for primary reconnect
switch S0
watch system.replicas()[0].connected = true

# test: write
insert into test 7
insert into test 8
insert into test 9

# test: wait replica sync
watch system.replicas()[0].lsn = system.config().lsn
show replicas

# test: ensure replica is read-only
switch S1

show read_only
show lsn
insert into test 10
show lsn

show psn
create table test2 (id int primary key)
show lsn
show psn

# test: replica read
select * from test
show repl
show lsn

# test: failover (promote replica to primary)
show repl
promote reset
show repl

# test: drop replica
switch S0
drop replica "00000000-0000-0000-0000-000000000001"
show replicas

# test: promote new primary
switch S0
promote "00000000-0000-0000-0000-000000000001"
show repl

# test: create replica
switch S1
create replica "00000000-0000-0000-0000-000000000000" "127.0.0.1:3480"

# test: wait for primary connect
watch system.replicas()[0].connected = true
watch system.replicas()[0].lsn = system.config().lsn

# test: write
insert into test 10
insert into test 11
insert into test 12

# test: wait replica sync
watch system.replicas()[0].lsn = system.config().lsn
show replicas
select * from test

disconnect S1
close E1

disconnect S0
close E0
