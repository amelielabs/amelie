env_open E0 "uuid": "00000000-0000-0000-0000-000000000000"
connect E0 S0
connect: on_connect
# test: create user statement parsing
create user
query: on_error
{"code": 1, "msg": "CREATE USER <name> expected"}
create user 123
query: on_error
{"code": 1, "msg": "CREATE USER <name> expected"}
create user if
query: on_error
{"code": 1, "msg": "IF <NOT> EXISTS expected"}
create user if not
query: on_error
{"code": 1, "msg": "IF NOT <EXISTS> expected"}
create user if not 123
query: on_error
{"code": 1, "msg": "IF NOT <EXISTS> expected"}
create user if not exists
query: on_error
{"code": 1, "msg": "CREATE USER <name> expected"}
create user test abc
query: on_error
{"code": 1, "msg": "unexpected clause at the end of command"}
# test: create user
create user test
show users
{"test": {"name": "test", "password": false}}
# test: create user if not exists
create user test
query: on_error
{"code": 1, "msg": "user 'test': already exists"}
create user if not exists test
# test: create user password
create user test2 password
query: on_error
{"code": 1, "msg": "CREATE USER PASSWORD <value> string expected"}
create user test2 password 123
query: on_error
{"code": 1, "msg": "CREATE USER PASSWORD <value> string expected"}
create user test2 password password
query: on_error
{"code": 1, "msg": "CREATE USER PASSWORD <value> string expected"}
create user test2 password "test" abc
query: on_error
{"code": 1, "msg": "unexpected clause at the end of command"}
create user test2 password "test"
show users
{"test": {"name": "test", "password": false}, "test2": {"name": "test2", "password": true}}
# test: drop user statment parsing
drop user
query: on_error
{"code": 1, "msg": "DROP USER <name> expected"}
drop user 123
query: on_error
{"code": 1, "msg": "DROP USER <name> expected"}
drop user if
query: on_error
{"code": 1, "msg": "IF <EXISTS> expected"}
drop user if exists
query: on_error
{"code": 1, "msg": "DROP USER <name> expected"}
drop user if exists 123
query: on_error
{"code": 1, "msg": "DROP USER <name> expected"}
drop user test abc
query: on_error
{"code": 1, "msg": "unexpected clause at the end of command"}
# test: drop user
drop user test
show users
{"test2": {"name": "test2", "password": true}}
# test: drop user if exists
drop user test
drop user if exists test
# test: alter user statment parsing
alter user
query: on_error
{"code": 1, "msg": "ALTER USER <name> expected"}
alter user 123
query: on_error
{"code": 1, "msg": "ALTER USER <name> expected"}
alter user test
query: on_error
{"code": 1, "msg": "ALTER USER <PASSWORD> expected"}
alter user test2
query: on_error
{"code": 1, "msg": "ALTER USER <PASSWORD> expected"}
alter user test2 passw
query: on_error
{"code": 1, "msg": "ALTER USER <PASSWORD> expected"}
alter user test2 password
query: on_error
{"code": 1, "msg": "ALTER USER PASSWORD <value> string expected"}
alter user test2 password 123
query: on_error
{"code": 1, "msg": "ALTER USER PASSWORD <value> string expected"}
alter user test2 password name
query: on_error
{"code": 1, "msg": "ALTER USER PASSWORD <value> string expected"}
alter user test2 password "abc" abc
query: on_error
{"code": 1, "msg": "unexpected clause at the end of command"}
# test: alter user
alter user test2 password "abc"
show users
{"test2": {"name": "test2", "password": true}}
# test: alter user unset password
alter user test2 password ""
show users
{"test2": {"name": "test2", "password": false}}
# test: alter user set password
alter user test2 password "abc"
show users
{"test2": {"name": "test2", "password": true}}
# test: recover
disconnect S0
env_close E0
env_open E0 "uuid": "00000000-0000-0000-0000-000000000000"
connect E0 S0
connect: on_connect
show users
{"test2": {"name": "test2", "password": true}}
drop user test2
show users
{}
disconnect S0
env_close E0
env_open E0 "uuid": "00000000-0000-0000-0000-000000000000"
connect E0 S0
connect: on_connect
show users
{}
disconnect S0
env_close E0
