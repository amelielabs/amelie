open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3485 }]
connect E0 S0 127.0.0.1:3485
# test: select var
explain declare x int; select x
[{
  "bytecode": {
    "frontend": {
      "00": "dup                 1      0      0     ",
      "01": "content             1      -      -     ",
      "02": "ret                 0      0      0     "
    }
  },
  "access": []
}]
declare x int; select x
[null]
# test: select var expr
explain declare x int := 0; select x
[{
  "bytecode": {
    "frontend": {
      "00": "int                 1      -      0     # 0",
      "01": "assign              0      1      0     ",
      "02": "free                1      0      0     ",
      "03": "dup                 1      0      0     ",
      "04": "content             1      -      -     ",
      "05": "ret                 0      0      0     "
    }
  },
  "access": []
}]
declare x int := 0; select x
[0]
explain declare x int := 0; select x; x:= 15; select x
[{
  "bytecode": {
    "frontend": {
      "00": "int                 1      -      0     # 0",
      "01": "assign              0      1      0     ",
      "02": "free                1      0      0     ",
      "03": "dup                 1      0      0     ",
      "04": "int                 2      -      0     # 15",
      "05": "assign              0      2      0     ",
      "06": "free                2      0      0     ",
      "07": "dup                 2      0      0     ",
      "08": "content             2      -      -     ",
      "09": "ret                 0      0      0     "
    }
  },
  "access": []
}]
declare x int := 0; select x; x:= 15; select x
[15]
# test: select into expr
explain declare x int; select 123 into x; select x
[{
  "bytecode": {
    "frontend": {
      "00": "int                 1      -      0     # 123",
      "01": "assign              0      1      0     ",
      "02": "free                1      0      0     ",
      "03": "dup                 1      0      0     ",
      "04": "content             1      -      -     ",
      "05": "ret                 0      0      0     "
    }
  },
  "access": []
}]
declare x int; select 123 into x; select x
[123]
explain declare x int; select 123 into x; select x; select 15 into x; select x
[{
  "bytecode": {
    "frontend": {
      "00": "int                 1      -      0     # 123",
      "01": "assign              0      1      0     ",
      "02": "free                1      0      0     ",
      "03": "dup                 1      0      0     ",
      "04": "int                 2      -      0     # 15",
      "05": "assign              0      2      0     ",
      "06": "free                2      0      0     ",
      "07": "dup                 2      0      0     ",
      "08": "content             2      -      -     ",
      "09": "ret                 0      0      0     "
    }
  },
  "access": []
}]
declare x int; select 123 into x; select x; select 15 into x; select x
[15]
# test: select from into (no recv)
create table test (id int primary key)
insert into test values (1), (2), (3)
explain declare x int; select id into x from test
[{
  "bytecode": {
    "frontend": {
      "00": "union               1      0      0     ",
      "01": "send_all            0      -      1     # public.test (last)",
      "02": "union_recv          1      0      0     ",
      "03": "union_set           1      0      -1    ",
      "04": "assign              0      1      0     ",
      "05": "free                1      0      0     ",
      "06": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; select id into x from test
# test: select from into / select var
explain declare x int; select id into x from test; select x
[{
  "bytecode": {
    "frontend": {
      "00": "union               1      0      0     ",
      "01": "send_all            0      -      1     # public.test (last)",
      "02": "union_recv          1      0      0     ",
      "03": "union_set           1      0      -1    ",
      "04": "assign              0      1      0     ",
      "05": "free                1      0      0     ",
      "06": "dup                 1      0      0     ",
      "07": "content             1      -      -     ",
      "08": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; select id into x from test; select x
[1]
# test: select from into / select expr / select var
explain declare x int; select id into x from test; select 123; select x
[{
  "bytecode": {
    "frontend": {
      "00": "union               1      0      0     ",
      "01": "send_all            0      -      1     # public.test (last)",
      "02": "int                 2      -      0     # 123",
      "03": "union_recv          1      0      0     ",
      "04": "union_set           1      0      -1    ",
      "05": "assign              0      1      0     ",
      "06": "free                1      0      0     ",
      "07": "dup                 1      0      0     ",
      "08": "content             1      -      -     ",
      "09": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; select id into x from test; select 123; select x
[1]
# test: select from into / select from / select var
explain declare x int; select id into x from test; select * from test; select x
[{
  "bytecode": {
    "frontend": {
      "00": "union               1      0      0     ",
      "01": "send_all            0      -      1     # public.test",
      "02": "union               2      0      0     ",
      "03": "send_all            9      -      2     # public.test (last)",
      "04": "union_recv          1      0      0     ",
      "05": "union_set           1      0      -1    ",
      "06": "assign              0      1      0     ",
      "07": "free                1      0      0     ",
      "08": "dup                 1      0      0     ",
      "09": "union_recv          2      0      0     ",
      "10": "union_set           2      0      -1    ",
      "11": "content             1      -      -     ",
      "12": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     ",
      "09": "set                 2      1      0     ",
      "10": "table_open_part     3      20     15    # public.test (primary)",
      "11": "table_readi32       4      3      0     ",
      "12": "push                4      0      0     ",
      "13": "set_add             2      0      0     ",
      "14": "table_next          3      11     0     ",
      "15": "free                3      0      0     ",
      "16": "result              2      0      0     ",
      "17": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; select id into x from test; select * from test; select x
[1]
# test: select from into / select expr / select from var
explain declare x int; select id into x from test; select 123; select * from x
[{
  "bytecode": {
    "frontend": {
      "00": "union               1      0      0     ",
      "01": "send_all            0      -      1     # public.test (last)",
      "02": "int                 2      -      0     # 123",
      "03": "union_recv          1      0      0     ",
      "04": "union_set           1      0      -1    ",
      "05": "assign              0      1      0     ",
      "06": "free                1      0      0     ",
      "07": "set                 1      1      0     ",
      "08": "dup                 3      0      0     ",
      "09": "push                3      0      0     ",
      "10": "set                 3      1      0     ",
      "11": "set_add             3      0      0     ",
      "12": "store_open          4      3      17    ",
      "13": "store_read          5      4      0     ",
      "14": "push                5      0      0     ",
      "15": "set_add             1      0      0     ",
      "16": "store_next          4      13     0     ",
      "17": "free                4      0      0     ",
      "18": "free                3      0      0     ",
      "19": "content             1      -      -     ",
      "20": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; select id into x from test; select 123; select * from x
[1]
# test: select from into / select from into
explain declare x int; select id into x from test; select 123 into x from test
[{
  "bytecode": {
    "frontend": {
      "00": "union               1      0      0     ",
      "01": "send_all            0      -      1     # public.test",
      "02": "union_recv          1      0      0     ",
      "03": "union_set           1      0      -1    ",
      "04": "assign              0      1      0     ",
      "05": "free                1      0      0     ",
      "06": "union               1      0      0     ",
      "07": "send_all            9      -      1     # public.test (last)",
      "08": "union_recv          1      0      0     ",
      "09": "union_set           1      0      -1    ",
      "10": "assign              0      1      0     ",
      "11": "free                1      0      0     ",
      "12": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     ",
      "09": "set                 1      1      0     ",
      "10": "table_open_part     2      20     15    # public.test (primary)",
      "11": "int                 3      -      0     # 123",
      "12": "push                3      0      0     ",
      "13": "set_add             1      0      0     ",
      "14": "table_next          2      11     0     ",
      "15": "free                2      0      0     ",
      "16": "result              1      0      0     ",
      "17": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; select id into x from test; select 123 into x from test
# test: select from into / select from into / select var
explain declare x int; select id into x from test; select 123 into x from test; select x
[{
  "bytecode": {
    "frontend": {
      "00": "union               1      0      0     ",
      "01": "send_all            0      -      1     # public.test",
      "02": "union_recv          1      0      0     ",
      "03": "union_set           1      0      -1    ",
      "04": "assign              0      1      0     ",
      "05": "free                1      0      0     ",
      "06": "union               1      0      0     ",
      "07": "send_all            9      -      1     # public.test (last)",
      "08": "union_recv          1      0      0     ",
      "09": "union_set           1      0      -1    ",
      "10": "assign              0      1      0     ",
      "11": "free                1      0      0     ",
      "12": "dup                 1      0      0     ",
      "13": "content             1      -      -     ",
      "14": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     ",
      "09": "set                 1      1      0     ",
      "10": "table_open_part     2      20     15    # public.test (primary)",
      "11": "int                 3      -      0     # 123",
      "12": "push                3      0      0     ",
      "13": "set_add             1      0      0     ",
      "14": "table_next          2      11     0     ",
      "15": "free                2      0      0     ",
      "16": "result              1      0      0     ",
      "17": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; select id into x from test; select 123 into x from test; select x
[123]
# test: select expr into / select from into
explain declare x int; select 123 into x; select id into x from test
[{
  "bytecode": {
    "frontend": {
      "00": "int                 1      -      0     # 123",
      "01": "assign              0      1      0     ",
      "02": "free                1      0      0     ",
      "03": "union               1      0      0     ",
      "04": "send_all            0      -      1     # public.test (last)",
      "05": "union_recv          1      0      0     ",
      "06": "union_set           1      0      -1    ",
      "07": "assign              0      1      0     ",
      "08": "free                1      0      0     ",
      "09": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; select 123 into x; select id into x from test
# test: select expr into / select from into / select var
explain declare x int; select 123 into x; select id into x from test; select x
[{
  "bytecode": {
    "frontend": {
      "00": "int                 1      -      0     # 123",
      "01": "assign              0      1      0     ",
      "02": "free                1      0      0     ",
      "03": "union               1      0      0     ",
      "04": "send_all            0      -      1     # public.test (last)",
      "05": "union_recv          1      0      0     ",
      "06": "union_set           1      0      -1    ",
      "07": "assign              0      1      0     ",
      "08": "free                1      0      0     ",
      "09": "dup                 1      0      0     ",
      "10": "content             1      -      -     ",
      "11": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; select 123 into x; select id into x from test; select x
[1]
# test: select from into / if / select var
explain declare x int; select id into x from test; if true then end; select x
[{
  "bytecode": {
    "frontend": {
      "00": "union               1      0      0     ",
      "01": "send_all            0      -      1     # public.test (last)",
      "02": "jmp                 4      0      0     ",
      "03": "jmp                 7      0      0     ",
      "04": "bool                2      1      0     ",
      "05": "jntr                7      2      0     ",
      "06": "jmp                 3      0      0     ",
      "07": "union_recv          1      0      0     ",
      "08": "union_set           1      0      -1    ",
      "09": "assign              0      1      0     ",
      "10": "free                1      0      0     ",
      "11": "dup                 1      0      0     ",
      "12": "content             1      -      -     ",
      "13": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; select id into x from test; if true then end; select x
[1]
# test: select from into / if var / select var
explain declare x int; select id into x from test; if x then end; select x
[{
  "bytecode": {
    "frontend": {
      "00": "union               1      0      0     ",
      "01": "send_all            0      -      1     # public.test (last)",
      "02": "union_recv          1      0      0     ",
      "03": "union_set           1      0      -1    ",
      "04": "assign              0      1      0     ",
      "05": "free                1      0      0     ",
      "06": "jmp                 8      0      0     ",
      "07": "jmp                 11     0      0     ",
      "08": "dup                 1      0      0     ",
      "09": "jntr                11     1      0     ",
      "10": "jmp                 7      0      0     ",
      "11": "dup                 1      0      0     ",
      "12": "content             1      -      -     ",
      "13": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; select id into x from test; if x then end; select x
[1]
# test: select from into / if then select var / select var
explain declare x int; select id into x from test; if true then select x; end; select x
[{
  "bytecode": {
    "frontend": {
      "00": "union               1      0      0     ",
      "01": "send_all            0      -      1     # public.test (last)",
      "02": "union_recv          1      0      0     ",
      "03": "union_set           1      0      -1    ",
      "04": "assign              0      1      0     ",
      "05": "free                1      0      0     ",
      "06": "jmp                 8      0      0     ",
      "07": "jmp                 12     0      0     ",
      "08": "bool                1      1      0     ",
      "09": "jntr                12     1      0     ",
      "10": "dup                 1      0      0     ",
      "11": "jmp                 7      0      0     ",
      "12": "dup                 2      0      0     ",
      "13": "content             2      -      -     ",
      "14": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; select id into x from test; if true then select x; end; select x
[1]
# test: select from into / if then var := / select var
explain declare x int; select id into x from test; if true then x := 7; end; select x
[{
  "bytecode": {
    "frontend": {
      "00": "union               1      0      0     ",
      "01": "send_all            0      -      1     # public.test (last)",
      "02": "union_recv          1      0      0     ",
      "03": "union_set           1      0      -1    ",
      "04": "assign              0      1      0     ",
      "05": "free                1      0      0     ",
      "06": "jmp                 8      0      0     ",
      "07": "jmp                 14     0      0     ",
      "08": "bool                1      1      0     ",
      "09": "jntr                14     1      0     ",
      "10": "int                 1      -      0     # 7",
      "11": "assign              0      1      0     ",
      "12": "free                1      0      0     ",
      "13": "jmp                 7      0      0     ",
      "14": "dup                 1      0      0     ",
      "15": "content             1      -      -     ",
      "16": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; select id into x from test; if true then x := 7; end; select x
[7]
# test: select from into / if then := var / select var
explain declare x int; declare y int; select id into x from test; if true then y := x; end; select x, y
[{
  "bytecode": {
    "frontend": {
      "00": "union               2      0      0     ",
      "01": "send_all            0      -      2     # public.test (last)",
      "02": "union_recv          2      0      0     ",
      "03": "union_set           2      0      -1    ",
      "04": "assign              0      2      0     ",
      "05": "free                2      0      0     ",
      "06": "jmp                 8      0      0     ",
      "07": "jmp                 14     0      0     ",
      "08": "bool                2      1      0     ",
      "09": "jntr                14     2      0     ",
      "10": "dup                 2      0      0     ",
      "11": "assign              1      2      0     ",
      "12": "free                2      0      0     ",
      "13": "jmp                 7      0      0     ",
      "14": "set                 2      2      0     ",
      "15": "dup                 3      0      0     ",
      "16": "push                3      0      0     ",
      "17": "dup                 3      1      0     ",
      "18": "push                3      0      0     ",
      "19": "set_add             2      0      0     ",
      "20": "content             2      -      -     ",
      "21": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 2      1      0     ",
      "01": "table_open_part     3      0      6     # public.test (primary)",
      "02": "table_readi32       4      3      0     ",
      "03": "push                4      0      0     ",
      "04": "set_add             2      0      0     ",
      "05": "table_next          3      2      0     ",
      "06": "free                3      0      0     ",
      "07": "result              2      0      0     ",
      "08": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; declare y int; select id into x from test; if true then y := x; end; select x, y
[[1, 1]]
# test: select from into / if .. else select var / select var
explain declare x int; select id into x from test; if false then else select x; end; select x
[{
  "bytecode": {
    "frontend": {
      "00": "union               1      0      0     ",
      "01": "send_all            0      -      1     # public.test (last)",
      "02": "union_recv          1      0      0     ",
      "03": "union_set           1      0      -1    ",
      "04": "assign              0      1      0     ",
      "05": "free                1      0      0     ",
      "06": "jmp                 8      0      0     ",
      "07": "jmp                 12     0      0     ",
      "08": "bool                1      0      0     ",
      "09": "jntr                11     1      0     ",
      "10": "jmp                 7      0      0     ",
      "11": "dup                 1      0      0     ",
      "12": "dup                 2      0      0     ",
      "13": "content             2      -      -     ",
      "14": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; select id into x from test; if false then else select x; end; select x
[1]
explain declare x int; select id into x from test; if false then select 1; else select x; end; select x
[{
  "bytecode": {
    "frontend": {
      "00": "union               1      0      0     ",
      "01": "send_all            0      -      1     # public.test (last)",
      "02": "union_recv          1      0      0     ",
      "03": "union_set           1      0      -1    ",
      "04": "assign              0      1      0     ",
      "05": "free                1      0      0     ",
      "06": "jmp                 8      0      0     ",
      "07": "jmp                 13     0      0     ",
      "08": "bool                1      0      0     ",
      "09": "jntr                12     1      0     ",
      "10": "int                 1      -      0     # 1",
      "11": "jmp                 7      0      0     ",
      "12": "dup                 2      0      0     ",
      "13": "dup                 3      0      0     ",
      "14": "content             3      -      -     ",
      "15": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; select id into x from test; if false then else select x; end; select x
[1]
# test: select from into / if .. else var := / select var
explain declare x int; select id into x from test; if false then else x := 7; end; select x
[{
  "bytecode": {
    "frontend": {
      "00": "union               1      0      0     ",
      "01": "send_all            0      -      1     # public.test (last)",
      "02": "union_recv          1      0      0     ",
      "03": "union_set           1      0      -1    ",
      "04": "assign              0      1      0     ",
      "05": "free                1      0      0     ",
      "06": "jmp                 8      0      0     ",
      "07": "jmp                 14     0      0     ",
      "08": "bool                1      0      0     ",
      "09": "jntr                11     1      0     ",
      "10": "jmp                 7      0      0     ",
      "11": "int                 1      -      0     # 7",
      "12": "assign              0      1      0     ",
      "13": "free                1      0      0     ",
      "14": "dup                 1      0      0     ",
      "15": "content             1      -      -     ",
      "16": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; select id into x from test; if false then else x := 7; end; select x
[7]
explain declare x int; select id into x from test; if false then select 1; else x := 7; end; select x
[{
  "bytecode": {
    "frontend": {
      "00": "union               1      0      0     ",
      "01": "send_all            0      -      1     # public.test (last)",
      "02": "union_recv          1      0      0     ",
      "03": "union_set           1      0      -1    ",
      "04": "assign              0      1      0     ",
      "05": "free                1      0      0     ",
      "06": "jmp                 8      0      0     ",
      "07": "jmp                 15     0      0     ",
      "08": "bool                1      0      0     ",
      "09": "jntr                12     1      0     ",
      "10": "int                 1      -      0     # 1",
      "11": "jmp                 7      0      0     ",
      "12": "int                 2      -      0     # 7",
      "13": "assign              0      2      0     ",
      "14": "free                2      0      0     ",
      "15": "dup                 2      0      0     ",
      "16": "content             2      -      -     ",
      "17": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; select id into x from test; if false then select 1; else x := 7; end; select x
[7]
# test: select from into / if .. else := var / select var
explain declare x int; declare y int; select id into x from test; if false then else y := x; end; select x, y
[{
  "bytecode": {
    "frontend": {
      "00": "union               2      0      0     ",
      "01": "send_all            0      -      2     # public.test (last)",
      "02": "union_recv          2      0      0     ",
      "03": "union_set           2      0      -1    ",
      "04": "assign              0      2      0     ",
      "05": "free                2      0      0     ",
      "06": "jmp                 8      0      0     ",
      "07": "jmp                 14     0      0     ",
      "08": "bool                2      0      0     ",
      "09": "jntr                11     2      0     ",
      "10": "jmp                 7      0      0     ",
      "11": "dup                 2      0      0     ",
      "12": "assign              1      2      0     ",
      "13": "free                2      0      0     ",
      "14": "set                 2      2      0     ",
      "15": "dup                 3      0      0     ",
      "16": "push                3      0      0     ",
      "17": "dup                 3      1      0     ",
      "18": "push                3      0      0     ",
      "19": "set_add             2      0      0     ",
      "20": "content             2      -      -     ",
      "21": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 2      1      0     ",
      "01": "table_open_part     3      0      6     # public.test (primary)",
      "02": "table_readi32       4      3      0     ",
      "03": "push                4      0      0     ",
      "04": "set_add             2      0      0     ",
      "05": "table_next          3      2      0     ",
      "06": "free                3      0      0     ",
      "07": "result              2      0      0     ",
      "08": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; declare y int; select id into x from test; if false then else y := x; end; select x, y
[[1, 1]]
explain declare x int; declare y int; select id into x from test; if false then select 1; else y := x; end; select x, y
[{
  "bytecode": {
    "frontend": {
      "00": "union               2      0      0     ",
      "01": "send_all            0      -      2     # public.test (last)",
      "02": "union_recv          2      0      0     ",
      "03": "union_set           2      0      -1    ",
      "04": "assign              0      2      0     ",
      "05": "free                2      0      0     ",
      "06": "jmp                 8      0      0     ",
      "07": "jmp                 15     0      0     ",
      "08": "bool                2      0      0     ",
      "09": "jntr                12     2      0     ",
      "10": "int                 2      -      0     # 1",
      "11": "jmp                 7      0      0     ",
      "12": "dup                 3      0      0     ",
      "13": "assign              1      3      0     ",
      "14": "free                3      0      0     ",
      "15": "set                 3      2      0     ",
      "16": "dup                 4      0      0     ",
      "17": "push                4      0      0     ",
      "18": "dup                 4      1      0     ",
      "19": "push                4      0      0     ",
      "20": "set_add             3      0      0     ",
      "21": "content             3      -      -     ",
      "22": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 2      1      0     ",
      "01": "table_open_part     3      0      6     # public.test (primary)",
      "02": "table_readi32       4      3      0     ",
      "03": "push                4      0      0     ",
      "04": "set_add             2      0      0     ",
      "05": "table_next          3      2      0     ",
      "06": "free                3      0      0     ",
      "07": "result              2      0      0     ",
      "08": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; declare y int; select id into x from test; if false then select 1; else y := x; end; select x, y
[[1, 1]]
# test: select from into / if if var / select var
explain declare x int; select id into x from test; if true then if x then end; end; select x
[{
  "bytecode": {
    "frontend": {
      "00": "union               1      0      0     ",
      "01": "send_all            0      -      1     # public.test (last)",
      "02": "union_recv          1      0      0     ",
      "03": "union_set           1      0      -1    ",
      "04": "assign              0      1      0     ",
      "05": "free                1      0      0     ",
      "06": "jmp                 8      0      0     ",
      "07": "jmp                 16     0      0     ",
      "08": "bool                1      1      0     ",
      "09": "jntr                16     1      0     ",
      "10": "jmp                 12     0      0     ",
      "11": "jmp                 15     0      0     ",
      "12": "dup                 1      0      0     ",
      "13": "jntr                15     1      0     ",
      "14": "jmp                 11     0      0     ",
      "15": "jmp                 7      0      0     ",
      "16": "dup                 1      0      0     ",
      "17": "content             1      -      -     ",
      "18": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; select id into x from test; if true then if x then end; end; select x
[1]
# test: select from into / if then if select var / select var
explain declare x int; select id into x from test; if true then if true then select x; end; end; select x
[{
  "bytecode": {
    "frontend": {
      "00": "union               1      0      0     ",
      "01": "send_all            0      -      1     # public.test (last)",
      "02": "union_recv          1      0      0     ",
      "03": "union_set           1      0      -1    ",
      "04": "assign              0      1      0     ",
      "05": "free                1      0      0     ",
      "06": "jmp                 8      0      0     ",
      "07": "jmp                 17     0      0     ",
      "08": "bool                1      1      0     ",
      "09": "jntr                17     1      0     ",
      "10": "jmp                 12     0      0     ",
      "11": "jmp                 16     0      0     ",
      "12": "bool                1      1      0     ",
      "13": "jntr                16     1      0     ",
      "14": "dup                 1      0      0     ",
      "15": "jmp                 11     0      0     ",
      "16": "jmp                 7      0      0     ",
      "17": "dup                 2      0      0     ",
      "18": "content             2      -      -     ",
      "19": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; select id into x from test; if true then if true then select x; end; end; select x
[1]
# test: select from into / if then if select into var / select var
explain declare x int; select id into x from test; if true then if true then select 123 into x; end; end; select x
[{
  "bytecode": {
    "frontend": {
      "00": "union               1      0      0     ",
      "01": "send_all            0      -      1     # public.test (last)",
      "02": "union_recv          1      0      0     ",
      "03": "union_set           1      0      -1    ",
      "04": "assign              0      1      0     ",
      "05": "free                1      0      0     ",
      "06": "jmp                 8      0      0     ",
      "07": "jmp                 19     0      0     ",
      "08": "bool                1      1      0     ",
      "09": "jntr                19     1      0     ",
      "10": "jmp                 12     0      0     ",
      "11": "jmp                 18     0      0     ",
      "12": "bool                1      1      0     ",
      "13": "jntr                18     1      0     ",
      "14": "int                 1      -      0     # 123",
      "15": "assign              0      1      0     ",
      "16": "free                1      0      0     ",
      "17": "jmp                 11     0      0     ",
      "18": "jmp                 7      0      0     ",
      "19": "dup                 1      0      0     ",
      "20": "content             1      -      -     ",
      "21": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; select id into x from test; if true then if true then select 123 into x; end; end; select x
[123]
explain declare x int; declare y int; select id into x from test; if true then if true then select 123 into y; x := x + y; end; end; select x
[{
  "bytecode": {
    "frontend": {
      "00": "union               2      0      0     ",
      "01": "send_all            0      -      2     # public.test (last)",
      "02": "union_recv          2      0      0     ",
      "03": "union_set           2      0      -1    ",
      "04": "assign              0      2      0     ",
      "05": "free                2      0      0     ",
      "06": "jmp                 8      0      0     ",
      "07": "jmp                 24     0      0     ",
      "08": "bool                2      1      0     ",
      "09": "jntr                24     2      0     ",
      "10": "jmp                 12     0      0     ",
      "11": "jmp                 23     0      0     ",
      "12": "bool                2      1      0     ",
      "13": "jntr                23     2      0     ",
      "14": "int                 2      -      0     # 123",
      "15": "assign              1      2      0     ",
      "16": "free                2      0      0     ",
      "17": "dup                 2      0      0     ",
      "18": "dup                 3      1      0     ",
      "19": "addii               4      2      3     ",
      "20": "assign              0      4      0     ",
      "21": "free                4      0      0     ",
      "22": "jmp                 11     0      0     ",
      "23": "jmp                 7      0      0     ",
      "24": "dup                 2      0      0     ",
      "25": "content             2      -      -     ",
      "26": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 2      1      0     ",
      "01": "table_open_part     3      0      6     # public.test (primary)",
      "02": "table_readi32       4      3      0     ",
      "03": "push                4      0      0     ",
      "04": "set_add             2      0      0     ",
      "05": "table_next          3      2      0     ",
      "06": "free                3      0      0     ",
      "07": "result              2      0      0     ",
      "08": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; declare y int; select id into x from test; if true then if true then select 123 into y; x := x + y; end; end; select x
[124]
# test: if select into var / select var
explain declare x int; if true then select * into x from test; end; select x
[{
  "bytecode": {
    "frontend": {
      "00": "jmp                 2      0      0     ",
      "01": "jmp                 11     0      0     ",
      "02": "bool                1      1      0     ",
      "03": "jntr                11     1      0     ",
      "04": "union               1      0      0     ",
      "05": "send_all            0      -      1     # public.test",
      "06": "union_recv          1      0      0     ",
      "07": "union_set           1      0      -1    ",
      "08": "assign              0      1      0     ",
      "09": "free                1      0      0     ",
      "10": "jmp                 1      0      0     ",
      "11": "close               0      0      0     ",
      "12": "dup                 1      0      0     ",
      "13": "content             1      -      -     ",
      "14": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; if true then select * into x from test; end; select x
[1]
# test: if select into var else select into var / select var
explain declare x int; if true then select id into x from test; else select 7 + id into x from test; end; select x
[{
  "bytecode": {
    "frontend": {
      "00": "jmp                 2      0      0     ",
      "01": "jmp                 17     0      0     ",
      "02": "bool                1      1      0     ",
      "03": "jntr                11     1      0     ",
      "04": "union               1      0      0     ",
      "05": "send_all            0      -      1     # public.test",
      "06": "union_recv          1      0      0     ",
      "07": "union_set           1      0      -1    ",
      "08": "assign              0      1      0     ",
      "09": "free                1      0      0     ",
      "10": "jmp                 1      0      0     ",
      "11": "union               1      0      0     ",
      "12": "send_all            9      -      1     # public.test",
      "13": "union_recv          1      0      0     ",
      "14": "union_set           1      0      -1    ",
      "15": "assign              0      1      0     ",
      "16": "free                1      0      0     ",
      "17": "close               0      0      0     ",
      "18": "dup                 1      0      0     ",
      "19": "content             1      -      -     ",
      "20": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     ",
      "09": "set                 1      1      0     ",
      "10": "table_open_part     2      20     17    # public.test (primary)",
      "11": "int                 3      -      0     # 7",
      "12": "table_readi32       4      2      0     ",
      "13": "addii               5      3      4     ",
      "14": "push                5      0      0     ",
      "15": "set_add             1      0      0     ",
      "16": "table_next          2      11     0     ",
      "17": "free                2      0      0     ",
      "18": "result              1      0      0     ",
      "19": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; if true then select id into x from test; else select 7 + id into x from test; end; select x
[1]
explain declare x int; if false then select id into x from test; else select 7 + id into x from test; end; select x
[{
  "bytecode": {
    "frontend": {
      "00": "jmp                 2      0      0     ",
      "01": "jmp                 17     0      0     ",
      "02": "bool                1      0      0     ",
      "03": "jntr                11     1      0     ",
      "04": "union               1      0      0     ",
      "05": "send_all            0      -      1     # public.test",
      "06": "union_recv          1      0      0     ",
      "07": "union_set           1      0      -1    ",
      "08": "assign              0      1      0     ",
      "09": "free                1      0      0     ",
      "10": "jmp                 1      0      0     ",
      "11": "union               1      0      0     ",
      "12": "send_all            9      -      1     # public.test",
      "13": "union_recv          1      0      0     ",
      "14": "union_set           1      0      -1    ",
      "15": "assign              0      1      0     ",
      "16": "free                1      0      0     ",
      "17": "close               0      0      0     ",
      "18": "dup                 1      0      0     ",
      "19": "content             1      -      -     ",
      "20": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     ",
      "09": "set                 1      1      0     ",
      "10": "table_open_part     2      20     17    # public.test (primary)",
      "11": "int                 3      -      0     # 7",
      "12": "table_readi32       4      2      0     ",
      "13": "addii               5      3      4     ",
      "14": "push                5      0      0     ",
      "15": "set_add             1      0      0     ",
      "16": "table_next          2      11     0     ",
      "17": "free                2      0      0     ",
      "18": "result              1      0      0     ",
      "19": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; if false then select id into x from test; else select 7 + id into x from test; end; select x
[8]
# test: select from into / if select into var else select into var / select var
explain declare x int; select id into x from test; if true then select 5 + id into x from test; else select 10 + id into x from test; end; select x
[{
  "bytecode": {
    "frontend": {
      "00": "union               1      0      0     ",
      "01": "send_all            0      -      1     # public.test",
      "02": "union_recv          1      0      0     ",
      "03": "union_set           1      0      -1    ",
      "04": "assign              0      1      0     ",
      "05": "free                1      0      0     ",
      "06": "jmp                 8      0      0     ",
      "07": "jmp                 23     0      0     ",
      "08": "bool                1      1      0     ",
      "09": "jntr                17     1      0     ",
      "10": "union               1      0      0     ",
      "11": "send_all            9      -      1     # public.test",
      "12": "union_recv          1      0      0     ",
      "13": "union_set           1      0      -1    ",
      "14": "assign              0      1      0     ",
      "15": "free                1      0      0     ",
      "16": "jmp                 7      0      0     ",
      "17": "union               1      0      0     ",
      "18": "send_all            20     -      1     # public.test",
      "19": "union_recv          1      0      0     ",
      "20": "union_set           1      0      -1    ",
      "21": "assign              0      1      0     ",
      "22": "free                1      0      0     ",
      "23": "close               0      0      0     ",
      "24": "dup                 1      0      0     ",
      "25": "content             1      -      -     ",
      "26": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     ",
      "09": "set                 1      1      0     ",
      "10": "table_open_part     2      20     17    # public.test (primary)",
      "11": "int                 3      -      0     # 5",
      "12": "table_readi32       4      2      0     ",
      "13": "addii               5      3      4     ",
      "14": "push                5      0      0     ",
      "15": "set_add             1      0      0     ",
      "16": "table_next          2      11     0     ",
      "17": "free                2      0      0     ",
      "18": "result              1      0      0     ",
      "19": "ret                 0      0      0     ",
      "20": "set                 1      1      0     ",
      "21": "table_open_part     2      40     28    # public.test (primary)",
      "22": "int                 3      -      0     # 10",
      "23": "table_readi32       4      2      0     ",
      "24": "addii               5      3      4     ",
      "25": "push                5      0      0     ",
      "26": "set_add             1      0      0     ",
      "27": "table_next          2      22     0     ",
      "28": "free                2      0      0     ",
      "29": "result              1      0      0     ",
      "30": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; select id into x from test; if true then select 5 + id into x from test; else select 10 + id into x from test; end; select x
[6]
explain declare x int; select id into x from test; if false then select 5 + id into x from test; else select 10 + id into x from test; end; select x
[{
  "bytecode": {
    "frontend": {
      "00": "union               1      0      0     ",
      "01": "send_all            0      -      1     # public.test",
      "02": "union_recv          1      0      0     ",
      "03": "union_set           1      0      -1    ",
      "04": "assign              0      1      0     ",
      "05": "free                1      0      0     ",
      "06": "jmp                 8      0      0     ",
      "07": "jmp                 23     0      0     ",
      "08": "bool                1      0      0     ",
      "09": "jntr                17     1      0     ",
      "10": "union               1      0      0     ",
      "11": "send_all            9      -      1     # public.test",
      "12": "union_recv          1      0      0     ",
      "13": "union_set           1      0      -1    ",
      "14": "assign              0      1      0     ",
      "15": "free                1      0      0     ",
      "16": "jmp                 7      0      0     ",
      "17": "union               1      0      0     ",
      "18": "send_all            20     -      1     # public.test",
      "19": "union_recv          1      0      0     ",
      "20": "union_set           1      0      -1    ",
      "21": "assign              0      1      0     ",
      "22": "free                1      0      0     ",
      "23": "close               0      0      0     ",
      "24": "dup                 1      0      0     ",
      "25": "content             1      -      -     ",
      "26": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     ",
      "09": "set                 1      1      0     ",
      "10": "table_open_part     2      20     17    # public.test (primary)",
      "11": "int                 3      -      0     # 5",
      "12": "table_readi32       4      2      0     ",
      "13": "addii               5      3      4     ",
      "14": "push                5      0      0     ",
      "15": "set_add             1      0      0     ",
      "16": "table_next          2      11     0     ",
      "17": "free                2      0      0     ",
      "18": "result              1      0      0     ",
      "19": "ret                 0      0      0     ",
      "20": "set                 1      1      0     ",
      "21": "table_open_part     2      40     28    # public.test (primary)",
      "22": "int                 3      -      0     # 10",
      "23": "table_readi32       4      2      0     ",
      "24": "addii               5      3      4     ",
      "25": "push                5      0      0     ",
      "26": "set_add             1      0      0     ",
      "27": "table_next          2      22     0     ",
      "28": "free                2      0      0     ",
      "29": "result              1      0      0     ",
      "30": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; select id into x from test; if false then select 5 + id into x from test; else select 10 + id into x from test; end; select x
[11]
# test: select from into / for in var
explain declare x int; select id into x from test; for it in x do end
[{
  "bytecode": {
    "frontend": {
      "00": "union               1      0      0     ",
      "01": "send_all            0      -      1     # public.test (last)",
      "02": "union_recv          1      0      0     ",
      "03": "union_set           1      0      -1    ",
      "04": "assign              0      1      0     ",
      "05": "free                1      0      0     ",
      "06": "dup                 1      0      0     ",
      "07": "push                1      0      0     ",
      "08": "set                 1      1      0     ",
      "09": "set_add             1      0      0     ",
      "10": "store_open          2      1      12    ",
      "11": "store_next          2      11     0     ",
      "12": "free                2      0      0     ",
      "13": "free                1      0      0     ",
      "14": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; select id into x from test; for it in x do end
# test: select from into / for do select var
explain declare x int; select id into x from test; for it in ([1,2,3]) do select x; end
[{
  "bytecode": {
    "frontend": {
      "00": "union               1      0      0     ",
      "01": "send_all            0      -      1     # public.test (last)",
      "02": "union_recv          1      0      0     ",
      "03": "union_set           1      0      -1    ",
      "04": "assign              0      1      0     ",
      "05": "free                1      0      0     ",
      "06": "json                1      20     0     ",
      "07": "json_open           2      1      10    ",
      "08": "dup                 3      0      0     ",
      "09": "json_next           2      8      0     ",
      "10": "free                2      0      0     ",
      "11": "free                1      0      0     ",
      "12": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; select id into x from test; for it in ([1,2,3]) do select x; end
# test: select from into / for do var :=
explain declare x int; select id into x from test; for it in ([1,2,3]) do x := it::int; end; select x
[{
  "bytecode": {
    "frontend": {
      "00": "union               1      0      0     ",
      "01": "send_all            0      -      1     # public.test (last)",
      "02": "union_recv          1      0      0     ",
      "03": "union_set           1      0      -1    ",
      "04": "assign              0      1      0     ",
      "05": "free                1      0      0     ",
      "06": "json                1      20     0     ",
      "07": "json_open           2      1      14    ",
      "08": "json_read           3      2      0     ",
      "09": "push                3      0      0     ",
      "10": "call                3      -      1     # public.int()",
      "11": "assign              0      3      0     ",
      "12": "free                3      0      0     ",
      "13": "json_next           2      8      0     ",
      "14": "free                2      0      0     ",
      "15": "free                1      0      0     ",
      "16": "dup                 1      0      0     ",
      "17": "content             1      -      -     ",
      "18": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; select id into x from test; for it in ([1,2,3]) do x := it::int; end; select x
[3]
explain declare x int; declare y int; select id into x from test; for it in ([1,2,3]) do y := x + it::int; end; select x, y
[{
  "bytecode": {
    "frontend": {
      "00": "union               2      0      0     ",
      "01": "send_all            0      -      2     # public.test (last)",
      "02": "union_recv          2      0      0     ",
      "03": "union_set           2      0      -1    ",
      "04": "assign              0      2      0     ",
      "05": "free                2      0      0     ",
      "06": "json                2      20     0     ",
      "07": "json_open           3      2      16    ",
      "08": "dup                 4      0      0     ",
      "09": "json_read           5      3      0     ",
      "10": "push                5      0      0     ",
      "11": "call                5      -      1     # public.int()",
      "12": "addii               6      4      5     ",
      "13": "assign              1      6      0     ",
      "14": "free                6      0      0     ",
      "15": "json_next           3      8      0     ",
      "16": "free                3      0      0     ",
      "17": "free                2      0      0     ",
      "18": "set                 2      2      0     ",
      "19": "dup                 3      0      0     ",
      "20": "push                3      0      0     ",
      "21": "dup                 3      1      0     ",
      "22": "push                3      0      0     ",
      "23": "set_add             2      0      0     ",
      "24": "content             2      -      -     ",
      "25": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 2      1      0     ",
      "01": "table_open_part     3      0      6     # public.test (primary)",
      "02": "table_readi32       4      3      0     ",
      "03": "push                4      0      0     ",
      "04": "set_add             2      0      0     ",
      "05": "table_next          3      2      0     ",
      "06": "free                3      0      0     ",
      "07": "result              2      0      0     ",
      "08": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; declare y int; select id into x from test; for it in ([1,2,3]) do y := x + it::int; end; select x, y
[[1, 4]]
# test: select from into / for / select var
explain declare x int; select id into x from test; for it in ([1,2,3]) do if true then end; end; select x
[{
  "bytecode": {
    "frontend": {
      "00": "union               1      0      0     ",
      "01": "send_all            0      -      1     # public.test (last)",
      "02": "json                2      20     0     ",
      "03": "json_open           3      2      10    ",
      "04": "jmp                 6      0      0     ",
      "05": "jmp                 9      0      0     ",
      "06": "bool                4      1      0     ",
      "07": "jntr                9      4      0     ",
      "08": "jmp                 5      0      0     ",
      "09": "json_next           3      4      0     ",
      "10": "free                3      0      0     ",
      "11": "free                2      0      0     ",
      "12": "union_recv          1      0      0     ",
      "13": "union_set           1      0      -1    ",
      "14": "assign              0      1      0     ",
      "15": "free                1      0      0     ",
      "16": "dup                 1      0      0     ",
      "17": "content             1      -      -     ",
      "18": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; select id into x from test; for it in ([1,2,3]) do if true then end; end; select x
[1]
# test: select from into / for if var
explain declare x int; select id into x from test; for it in ([1,2,3]) do if x then end; end;
[{
  "bytecode": {
    "frontend": {
      "00": "union               1      0      0     ",
      "01": "send_all            0      -      1     # public.test (last)",
      "02": "union_recv          1      0      0     ",
      "03": "union_set           1      0      -1    ",
      "04": "assign              0      1      0     ",
      "05": "free                1      0      0     ",
      "06": "json                1      20     0     ",
      "07": "json_open           2      1      14    ",
      "08": "jmp                 10     0      0     ",
      "09": "jmp                 13     0      0     ",
      "10": "dup                 3      0      0     ",
      "11": "jntr                13     3      0     ",
      "12": "jmp                 9      0      0     ",
      "13": "json_next           2      8      0     ",
      "14": "free                2      0      0     ",
      "15": "free                1      0      0     ",
      "16": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; select id into x from test; for it in ([1,2,3]) do if x then end; end;
# test: select from into / for if then var
explain declare x int; select id into x from test; for it in ([1,2,3]) do if true then select x; end; end;
[{
  "bytecode": {
    "frontend": {
      "00": "union               1      0      0     ",
      "01": "send_all            0      -      1     # public.test (last)",
      "02": "union_recv          1      0      0     ",
      "03": "union_set           1      0      -1    ",
      "04": "assign              0      1      0     ",
      "05": "free                1      0      0     ",
      "06": "json                1      20     0     ",
      "07": "json_open           2      1      15    ",
      "08": "jmp                 10     0      0     ",
      "09": "jmp                 14     0      0     ",
      "10": "bool                3      1      0     ",
      "11": "jntr                14     3      0     ",
      "12": "dup                 3      0      0     ",
      "13": "jmp                 9      0      0     ",
      "14": "json_next           2      8      0     ",
      "15": "free                2      0      0     ",
      "16": "free                1      0      0     ",
      "17": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; select id into x from test; for it in ([1,2,3]) do if true then select x; end; end;
explain declare x int; declare y int; select id into x from test; for it in ([1,2,3]) do if true then y := x + it::int; end; end; select x, y
[{
  "bytecode": {
    "frontend": {
      "00": "union               2      0      0     ",
      "01": "send_all            0      -      2     # public.test (last)",
      "02": "union_recv          2      0      0     ",
      "03": "union_set           2      0      -1    ",
      "04": "assign              0      2      0     ",
      "05": "free                2      0      0     ",
      "06": "json                2      20     0     ",
      "07": "json_open           3      2      21    ",
      "08": "jmp                 10     0      0     ",
      "09": "jmp                 20     0      0     ",
      "10": "bool                4      1      0     ",
      "11": "jntr                20     4      0     ",
      "12": "dup                 4      0      0     ",
      "13": "json_read           5      3      0     ",
      "14": "push                5      0      0     ",
      "15": "call                5      -      1     # public.int()",
      "16": "addii               6      4      5     ",
      "17": "assign              1      6      0     ",
      "18": "free                6      0      0     ",
      "19": "jmp                 9      0      0     ",
      "20": "json_next           3      8      0     ",
      "21": "free                3      0      0     ",
      "22": "free                2      0      0     ",
      "23": "set                 2      2      0     ",
      "24": "dup                 3      0      0     ",
      "25": "push                3      0      0     ",
      "26": "dup                 3      1      0     ",
      "27": "push                3      0      0     ",
      "28": "set_add             2      0      0     ",
      "29": "content             2      -      -     ",
      "30": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 2      1      0     ",
      "01": "table_open_part     3      0      6     # public.test (primary)",
      "02": "table_readi32       4      3      0     ",
      "03": "push                4      0      0     ",
      "04": "set_add             2      0      0     ",
      "05": "table_next          3      2      0     ",
      "06": "free                3      0      0     ",
      "07": "result              2      0      0     ",
      "08": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; declare y int; select id into x from test; for it in ([1,2,3]) do if true then y := x + it::int; end; end; select x, y
[[1, 4]]
explain declare x int := 0; for it in ([1,2,3]) do if true then x := x + it::int; end; end; select x
[{
  "bytecode": {
    "frontend": {
      "00": "int                 1      -      0     # 0",
      "01": "assign              0      1      0     ",
      "02": "free                1      0      0     ",
      "03": "json                1      0      0     ",
      "04": "json_open           2      1      18    ",
      "05": "jmp                 7      0      0     ",
      "06": "jmp                 17     0      0     ",
      "07": "bool                3      1      0     ",
      "08": "jntr                17     3      0     ",
      "09": "dup                 3      0      0     ",
      "10": "json_read           4      2      0     ",
      "11": "push                4      0      0     ",
      "12": "call                4      -      1     # public.int()",
      "13": "addii               5      3      4     ",
      "14": "assign              0      5      0     ",
      "15": "free                5      0      0     ",
      "16": "jmp                 6      0      0     ",
      "17": "json_next           2      5      0     ",
      "18": "free                2      0      0     ",
      "19": "free                1      0      0     ",
      "20": "dup                 1      0      0     ",
      "21": "content             1      -      -     ",
      "22": "ret                 0      0      0     "
    }
  },
  "access": []
}]
declare x int := 0; for it in ([1,2,3]) do if true then x := x + it::int; end; end; select x
[6]
explain declare x int := 0; for it in ([1,2,3]) do x := x + it::int; end; select x
[{
  "bytecode": {
    "frontend": {
      "00": "int                 1      -      0     # 0",
      "01": "assign              0      1      0     ",
      "02": "free                1      0      0     ",
      "03": "json                1      0      0     ",
      "04": "json_open           2      1      13    ",
      "05": "dup                 3      0      0     ",
      "06": "json_read           4      2      0     ",
      "07": "push                4      0      0     ",
      "08": "call                4      -      1     # public.int()",
      "09": "addii               5      3      4     ",
      "10": "assign              0      5      0     ",
      "11": "free                5      0      0     ",
      "12": "json_next           2      5      0     ",
      "13": "free                2      0      0     ",
      "14": "free                1      0      0     ",
      "15": "dup                 1      0      0     ",
      "16": "content             1      -      -     ",
      "17": "ret                 0      0      0     "
    }
  },
  "access": []
}]
declare x int := 0; for it in ([1,2,3]) do x := x + it::int; end; select x
[6]
# test: select from into / for if if then var
explain declare x int; declare y int; select id into x from test; for it in ([1,2,3]) do if true then if true then y := x + it::int; end; end; end; select x, y
[{
  "bytecode": {
    "frontend": {
      "00": "union               2      0      0     ",
      "01": "send_all            0      -      2     # public.test (last)",
      "02": "union_recv          2      0      0     ",
      "03": "union_set           2      0      -1    ",
      "04": "assign              0      2      0     ",
      "05": "free                2      0      0     ",
      "06": "json                2      20     0     ",
      "07": "json_open           3      2      26    ",
      "08": "jmp                 10     0      0     ",
      "09": "jmp                 25     0      0     ",
      "10": "bool                4      1      0     ",
      "11": "jntr                25     4      0     ",
      "12": "jmp                 14     0      0     ",
      "13": "jmp                 24     0      0     ",
      "14": "bool                4      1      0     ",
      "15": "jntr                24     4      0     ",
      "16": "dup                 4      0      0     ",
      "17": "json_read           5      3      0     ",
      "18": "push                5      0      0     ",
      "19": "call                5      -      1     # public.int()",
      "20": "addii               6      4      5     ",
      "21": "assign              1      6      0     ",
      "22": "free                6      0      0     ",
      "23": "jmp                 13     0      0     ",
      "24": "jmp                 9      0      0     ",
      "25": "json_next           3      8      0     ",
      "26": "free                3      0      0     ",
      "27": "free                2      0      0     ",
      "28": "set                 2      2      0     ",
      "29": "dup                 3      0      0     ",
      "30": "push                3      0      0     ",
      "31": "dup                 3      1      0     ",
      "32": "push                3      0      0     ",
      "33": "set_add             2      0      0     ",
      "34": "content             2      -      -     ",
      "35": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 2      1      0     ",
      "01": "table_open_part     3      0      6     # public.test (primary)",
      "02": "table_readi32       4      3      0     ",
      "03": "push                4      0      0     ",
      "04": "set_add             2      0      0     ",
      "05": "table_next          3      2      0     ",
      "06": "free                3      0      0     ",
      "07": "result              2      0      0     ",
      "08": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare x int; declare y int; select id into x from test; for it in ([1,2,3]) do if true then if true then y := x + it::int; end; end; end; select x, y
[[1, 4]]
drop table test
disconnect S0
close E0
