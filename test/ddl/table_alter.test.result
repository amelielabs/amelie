open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3485 }]
connect E0 S0 localhost:3485
# test: alter table statement parsing
alter
{"msg": "ALTER <USER|SCHEMA|TABLE|INDEX|VIEW> expected"}
alter table
{"msg": "ALTER TABLE <name> expected"}
alter table 123
{"msg": "ALTER TABLE <name> expected"}
alter table if
{"msg": "IF <EXISTS> expected"}
alter table if ex
{"msg": "IF <EXISTS> expected"}
alter table if exists
{"msg": "ALTER TABLE <name> expected"}
alter table if exists 123
{"msg": "ALTER TABLE <name> expected"}
# test: alter table if exists
alter table test rename test2
{"msg": "table 'test': not exists"}
alter table if exists test rename test2
# test: alter table no command
create table test (id int primary key)
alter table test
{"msg": "ALTER TABLE <RENAME | ADD | DROP | SET> expected"}
# test: rename
alter table test rename
{"msg": "ALTER TABLE RENAME <name> expected"}
alter table test rename to
{"msg": "ALTER TABLE RENAME <name> expected"}
alter table test rename asf junk
{"msg": "unexpected token at the end of statement"}
alter table test rename to abc
select *.schema, *.name from system.tables()
{"msg": "'*': no targets defined"}
# test: rename table exists
create table test (id int primary key)
alter table abc rename to test
{"msg": "table 'test': already exists"}
drop table test
# test: rename conflicting view exists
create view test as select 1
alter table abc rename to test
{"msg": "view <test> with the same name exists"}
drop view test
# test: rename schema not exists
alter table abc rename to test.test
{"msg": "schema 'test': not exists"}
# test: rename schema system
alter table abc rename to system.test
{"msg": "system schema <system> cannot be used to create objects"}
# test: rename schema
alter table abc rename to public.test
select *.schema, *.name from system.tables()
{"msg": "'*': no targets defined"}
create schema test
alter table public.test rename to test.test
select *.schema, *.name from system.tables()
{"msg": "'*': no targets defined"}
drop table test.test
# test: set serial
create table test (id int primary key serial, data int default 0)
{"msg": "SERIAL column <id> must be int64"}
insert into test () values ()
{"msg": "<public.test> table or view not found"}
insert into test () values ()
