open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3485 }]
connect E0 S0 127.0.0.1:3485
# test: for parsing
for
{"msg": "for ⟵ name expected"}
for 1
{"msg": "for ❰1❱ ⟵ name expected"}
for it
{"msg": "for it ⟵ IN expected"}
for it 1
{"msg": "for it ❰1❱ ⟵ IN expected"}
for it in
{"msg": "for it in ⟵ target name expected"}
for it in 1
{"msg": "for it in ❰1❱ ⟵ target name expected"}
for it in ;
{"msg": "for it in ❰;❱ ⟵ target name expected"}
for it in [1,2,3]
{"msg": "for it in ❰[❱ ⟵ target name expected"}
for it in ([1,2,3]
{"msg": "for it in ([1,2,3] ⟵ ) expected"}
for it in (select [1,2,3]
{"msg": "for it in (select [1,2,3] ⟵ ) expected"}
for it in (select [1,2,3])
{"msg": "for it in (select [1,2,3]) ⟵ DO expected"}
for it in (select [1,2,3]) do
{"msg": "for it in (select [1,2,3]) do ⟵ END expected"}
# test: for
explain for it in (select [1,2,3]) do end
[{
  "bytecode": {
    "frontend": {
      "00": "json                0      0      0     ",
      "01": "ref                 1      0      0     ",
      "02": "json_open           2      1      4     ",
      "03": "json_next           2      3      0     ",
      "04": "free                2      0      0     ",
      "05": "free                1      0      0     ",
      "06": "ret                 0      0      0     "
    }
  },
  "access": []
}]
for it in (select [1,2,3]) do end
declare n int := 0; for it in (select [1,2,3]) do n := n + 1; end; select n
[3]
# test: for if
declare n int := 0; for it in (select [1,2,3,4] as it) do if it::int % 2 = 0 then n := n + 1; end; end; select n
[2]
# test: for for
declare n int := 0; for i in (select [1,2,3]) do for j in (select [1,2,3]) do n := n + 1; end; end; select n
[9]
explain declare n int := 0; for i in (select [1,2,3] as i) do for j in (select [1,2,3] as j) do n := n + i.i::int + j.j::int; end; end; select n
[{
  "bytecode": {
    "frontend": {
      "00": "int                 1      -      0     # 0",
      "01": "assign              0      1      0     ",
      "02": "json                1      0      0     ",
      "03": "ref                 2      1      0     ",
      "04": "json_open           3      2      22    ",
      "05": "json                4      5      0     ",
      "06": "ref                 5      4      0     ",
      "07": "json_open           6      5      19    ",
      "08": "ref                 7      0      0     ",
      "09": "json_read           8      3      0     ",
      "10": "push                8      0      0     ",
      "11": "call                8      -      1     # public.int()",
      "12": "json_read           9      6      0     ",
      "13": "push                9      0      0     ",
      "14": "call                9      -      1     # public.int()",
      "15": "addii               10     8      9     ",
      "16": "addii               8      7      10    ",
      "17": "assign              0      8      0     ",
      "18": "json_next           6      8      0     ",
      "19": "free                6      0      0     ",
      "20": "free                5      0      0     ",
      "21": "json_next           3      5      0     ",
      "22": "free                3      0      0     ",
      "23": "free                2      0      0     ",
      "24": "ref                 2      0      0     ",
      "25": "content             2      -      -     ",
      "26": "ret                 0      0      0     "
    }
  },
  "access": []
}]
declare n int := 0; for i in (select [1,2,3] as i) do for j in (select [1,2,3] as j) do n := n + i.i::int + j.j::int; end; end; select n
[36]
# test: for for for
declare n int := 0; for i in (select [1,2,3]) do for j in (select [1,2,3]) do for k in (select [1,2,3]) do n := n + 1; end; end; end; select n
[27]
declare n int := 0; for i in (select [1,2,3] as i) do for j in (select [1,2,3] as j) do for k in (select [1,2,3] as k) do n := n + i.i::int + j.j::int + k.k::int; end; end; end; select n
[162]
# test: for in select
create table test (id int primary key)
insert into test values (1), (2), (3)
explain declare n int := 0; for i in (select * from test) do n := n + 1; end; select n
[{
  "bytecode": {
    "frontend": {
      "00": "int                 1      -      0     # 0",
      "01": "assign              0      1      0     ",
      "02": "union               1      0      0     ",
      "03": "send_all            0      -      1     # public.test",
      "04": "union_recv          1      0      0     ",
      "05": "union_set           1      0      -1    ",
      "06": "ref                 2      1      0     ",
      "07": "store_open          3      2      13    ",
      "08": "ref                 4      0      0     ",
      "09": "int                 5      -      0     # 1",
      "10": "addii               6      4      5     ",
      "11": "assign              0      6      0     ",
      "12": "store_next          3      8      0     ",
      "13": "free                3      0      0     ",
      "14": "free                2      0      0     ",
      "15": "ref                 2      0      0     ",
      "16": "content             2      -      -     ",
      "17": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare n int := 0; for i in (select * from test) do n := n + 1; end; select n
[3]
declare n int := 0; for i in (select * from test) do n := n + i.id; end; select n
[6]
drop table test
# test: for in select for int select
create table test (id int primary key)
insert into test values (1), (2), (3)
explain declare n int; n := 0; for i in (select * from test) do  for j in (select * from test) do n := n + 1; end; end; select n
[{
  "bytecode": {
    "frontend": {
      "00": "int                 1      -      0     # 0",
      "01": "assign              0      1      0     ",
      "02": "union               1      0      0     ",
      "03": "send_all            0      -      1     # public.test",
      "04": "union_recv          1      0      0     ",
      "05": "union_set           1      0      -1    ",
      "06": "ref                 2      1      0     ",
      "07": "store_open          3      2      22    ",
      "08": "union               4      0      0     ",
      "09": "send_all            9      -      4     # public.test",
      "10": "union_recv          4      0      0     ",
      "11": "union_set           4      0      -1    ",
      "12": "ref                 5      4      0     ",
      "13": "store_open          6      5      19    ",
      "14": "ref                 7      0      0     ",
      "15": "int                 8      -      0     # 1",
      "16": "addii               9      7      8     ",
      "17": "assign              0      9      0     ",
      "18": "store_next          6      14     0     ",
      "19": "free                6      0      0     ",
      "20": "free                5      0      0     ",
      "21": "store_next          3      8      0     ",
      "22": "free                3      0      0     ",
      "23": "free                2      0      0     ",
      "24": "ref                 2      0      0     ",
      "25": "content             2      -      -     ",
      "26": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     ",
      "09": "set                 4      1      0     ",
      "10": "table_open_part     5      20     15    # public.test (primary)",
      "11": "table_readi32       6      5      0     ",
      "12": "push                6      0      0     ",
      "13": "set_add             4      0      0     ",
      "14": "table_next          5      11     0     ",
      "15": "free                5      0      0     ",
      "16": "result              4      0      0     ",
      "17": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare n int := 0; for i in (select * from test) do for j in (select * from test) do n := n + 1; end; end; select n
[9]
declare n int := 0; for i in (select * from test) do for j in (select * from test) do n := n + i.id + j.id; end; end; select n
[36]
drop table test
# test: for (select from (select from))
create table test (id int primary key)
insert into test values (1), (2), (3)
explain declare n int := 0; for i in (select * from (select * from test) x) do n := n + 1; end; select n
[{
  "bytecode": {
    "frontend": {
      "00": "int                 1      -      0     # 0",
      "01": "assign              0      1      0     ",
      "02": "union               1      0      0     ",
      "03": "send_all            0      -      1     # public.test",
      "04": "union_recv          1      0      0     ",
      "05": "union_set           1      0      -1    ",
      "06": "set                 2      1      0     ",
      "07": "ref                 3      1      0     ",
      "08": "store_open          4      3      13    ",
      "09": "store_read          5      4      0     ",
      "10": "push                5      0      0     ",
      "11": "set_add             2      0      0     ",
      "12": "store_next          4      9      0     ",
      "13": "free                4      0      0     ",
      "14": "free                3      0      0     ",
      "15": "ref                 3      2      0     ",
      "16": "store_open          4      3      22    ",
      "17": "ref                 5      0      0     ",
      "18": "int                 6      -      0     # 1",
      "19": "addii               7      5      6     ",
      "20": "assign              0      7      0     ",
      "21": "store_next          4      17     0     ",
      "22": "free                4      0      0     ",
      "23": "free                3      0      0     ",
      "24": "ref                 3      0      0     ",
      "25": "content             3      -      -     ",
      "26": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set                 1      1      0     ",
      "01": "table_open_part     2      0      6     # public.test (primary)",
      "02": "table_readi32       3      2      0     ",
      "03": "push                3      0      0     ",
      "04": "set_add             1      0      0     ",
      "05": "table_next          2      2      0     ",
      "06": "free                2      0      0     ",
      "07": "result              1      0      0     ",
      "08": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare n int := 0; for i in (select * from (select * from test) x) do n := n + 1; end; select n
[3]
drop table test
# test: for table
create table test (id int primary key)
insert into test values (1), (2), (3)
for i in test do end
{"msg": "for i in test ❰do❱ ⟵ tables are not supported here"}
drop table test
# test: for var
declare list json := []; declare x json := [1,2,3]; for it in x do list := list::append(it); end; select list
[[1, 2, 3]]
declare list json := []; declare x json := [1,2,3]; for it in (x) do list := list::append(it); end; select list
[[1, 2, 3]]
declare list json := []; declare x json := [1,2,3]; for it in (select x as it) do list := list::append(it); end; select list
[[1, 2, 3]]
declare x int := 77; declare last int; for it in x do last := it; end; select last
[77]
declare x int := 77; declare last int; for it in (x) do last := it; end; select last
[77]
declare x int := 77; declare last int; for it in (select x as it) do last := it; end; select last
[77]
# test: for var (table)
create table test (id int primary key)
insert into test values (1), (2), (3)
# test: select from var (table)
declare x table (a int, b int); x := select id, id * 10 from test; for it in x do end
declare list json := []; declare x table (a int, b int); x := select id, id * 10 from test; for it in x do list := list::append(it.a)::append(it.b); end; select list
[[1, 10, 2, 20, 3, 30]]
drop table test
# test: for .. select
create table test (id int primary key)
insert into test values (1), (2), (3)
explain declare total int; declare n int; total := 0; for i in (select [1,2,3]) do n := select count(id) from test; total := total + n; end; select total;
[{
  "bytecode": {
    "frontend": {
      "00": "int                 2      -      0     # 0",
      "01": "assign              0      2      0     ",
      "02": "json                2      0      0     ",
      "03": "ref                 3      2      0     ",
      "04": "json_open           4      3      24    ",
      "05": "union               5      0      0     ",
      "06": "send_all            0      -      5     # public.test",
      "07": "union_recv          5      0      0     ",
      "08": "union_set           5      1      -1    ",
      "09": "union_set_aggs      5      26     0     ",
      "10": "set                 6      1      0     ",
      "11": "store_open          7      5      16    ",
      "12": "count               8      7      0     ",
      "13": "push                8      0      0     ",
      "14": "set_add             6      0      0     ",
      "15": "store_next          7      12     0     ",
      "16": "free                7      0      0     ",
      "17": "free                5      0      0     ",
      "18": "assign              1      6      0     ",
      "19": "ref                 5      0      0     ",
      "20": "ref                 6      1      0     ",
      "21": "addii               7      5      6     ",
      "22": "assign              0      7      0     ",
      "23": "json_next           4      5      0     ",
      "24": "free                4      0      0     ",
      "25": "free                3      0      0     ",
      "26": "close               0      0      0     ",
      "27": "ref                 3      0      0     ",
      "28": "content             3      -      -     ",
      "29": "ret                 0      0      0     "
    },
    "backend": {
      "00": "set_ordered         5      1      1     ",
      "01": "table_open_part     6      6      9     # public.test (primary)",
      "02": "bool                7      1      0     ",
      "03": "push                7      0      0     ",
      "04": "set_get             7      5      0     ",
      "05": "table_readi32       8      6      0     ",
      "06": "push                8      0      0     ",
      "07": "set_agg             5      7      26    ",
      "08": "table_next          6      2      0     ",
      "09": "free                6      0      0     ",
      "10": "bool                6      1      0     ",
      "11": "push                6      0      0     ",
      "12": "set_get             6      5      0     ",
      "13": "null                7      0      0     ",
      "14": "push                7      0      0     ",
      "15": "set_agg             5      6      26    ",
      "16": "set_sort            5      0      0     ",
      "17": "result              5      0      0     ",
      "18": "ret                 0      0      0     "
    }
  },
  "access": [["public.test", "ro"]]
}]
declare total int; declare n int; total := 0; for i in (select [1,2,3]) do n := select count(id) from test; total := total + n; end; select total;
[9]
drop table test
disconnect S0
close E0
