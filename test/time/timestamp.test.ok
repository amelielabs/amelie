open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3485 }]
connect E0 S0 localhost:3485
# test: timestamp parsing
select '2'::timestamp
{"msg": "malformed timestamp string"}
select '2a'::timestamp
{"msg": "malformed timestamp string"}
select 'a'::timestamp
{"msg": "malformed timestamp string"}
select '_a'::timestamp
{"msg": "malformed timestamp string"}
select '_'::timestamp
{"msg": "malformed timestamp string"}
select '-'::timestamp
{"msg": "malformed timestamp string"}
select '--'::timestamp
{"msg": "malformed timestamp string"}
select '-- ::'::timestamp
{"msg": "malformed timestamp string"}
select '1969-0-0'::timestamp
{"msg": "malformed timestamp string"}
select '1969-0-0 0:0:0'::timestamp
{"msg": "malformed timestamp string"}
select '1970-0-0 00:00:00'::timestamp
{"msg": "malformed timestamp string"}
select '1970-00-00 00:00:00'::timestamp
{"msg": "malformed timestamp string"}
select timestamp '1970-00-00 00:00:00'
{"msg": "malformed timestamp string"}
select timestamp('1970-00-00 00:00:00')
{"msg": "malformed timestamp string"}
# test: epoch
select '1970-01-01 00:00:00'::timestamp
["1970-01-01 00:00:00+00"]
select timestamp '1970-01-01 00:00:00'
["1970-01-01 00:00:00+00"]
select timestamp('1970-01-01 00:00:00')
["1970-01-01 00:00:00+00"]
# test: day overflow
select '1970-01-33 00:00:00'::timestamp
{"msg": "malformed timestamp string"}
# test: month overflow
select '1970-13-01 00:00:00'::timestamp
{"msg": "malformed timestamp string"}
# test: second overflow
select '1970-01-01 00:00:70'::timestamp
["1970-01-01 00:01:10+00"]
# test: minute overflow
select '1970-01-01 00:70:00'::timestamp
["1970-01-01 01:10:00+00"]
# test: hour overflow
select '1970-01-01 28:00:00'::timestamp
["1970-01-02 04:00:00+00"]
# test: 24hour
select '1970-01-01 24:00:00'::timestamp
["1970-01-02 00:00:00+00"]
# test: ms
select '1970-01-01 00:00:00.'::timestamp
{"msg": "malformed timestamp string"}
select '1970-01-01 00:00:00.0'::timestamp
["1970-01-01 00:00:00+00"]
select '1970-01-01 00:00:00.00'::timestamp
["1970-01-01 00:00:00+00"]
select '1970-01-01 00:00:00.000'::timestamp
["1970-01-01 00:00:00+00"]
select '1970-01-01 00:00:00.001'::timestamp
["1970-01-01 00:00:00.001+00"]
select '1970-01-01 00:00:00.001'::timestamp()
["1970-01-01 00:00:00.001+00"]
select timestamp '1970-01-01 00:00:00.001'
["1970-01-01 00:00:00.001+00"]
select timestamp('1970-01-01 00:00:00.001')
["1970-01-01 00:00:00.001+00"]
# test: us
select '1970-01-01 00:00:00.0010'::timestamp
["1970-01-01 00:00:00.001+00"]
select '1970-01-01 00:00:00.00100'::timestamp
["1970-01-01 00:00:00.001+00"]
select '1970-01-01 00:00:00.000001'::timestamp
["1970-01-01 00:00:00.000001+00"]
select '1970-01-01 00:00:00.000000'::timestamp
["1970-01-01 00:00:00+00"]
select '1970-01-01 00:00:00.999999'::timestamp
["1970-01-01 00:00:00.999999+00"]
select timestamp '1970-01-01 00:00:00.999999'
["1970-01-01 00:00:00.999999+00"]
select timestamp('1970-01-01 00:00:00.999999')
["1970-01-01 00:00:00.999999+00"]
select timestamp('1970-01-01 00:00:00.999999', 123)
{"msg": "timestamp(): expected string for argument 1, but got int"}
# test: precision
select '1970-01-01 00:00:00.1'::timestamp
["1970-01-01 00:00:00.100+00"]
select '1970-01-01 00:00:00.10'::timestamp
["1970-01-01 00:00:00.100+00"]
select '1970-01-01 00:00:00.100'::timestamp
["1970-01-01 00:00:00.100+00"]
select '1970-01-01 00:00:00.01'::timestamp
["1970-01-01 00:00:00.010+00"]
select '1970-01-01 00:00:00.010'::timestamp
["1970-01-01 00:00:00.010+00"]
select '1970-01-01 00:00:00.001'::timestamp
["1970-01-01 00:00:00.001+00"]
select '1970-01-01 00:00:00.0010'::timestamp
["1970-01-01 00:00:00.001+00"]
select '1970-01-01 00:00:00.00100'::timestamp
["1970-01-01 00:00:00.001+00"]
select '1970-01-01 00:00:00.001000'::timestamp
["1970-01-01 00:00:00.001+00"]
select '1970-01-01 00:00:00.0001'::timestamp
["1970-01-01 00:00:00.000100+00"]
select '1970-01-01 00:00:00.00010'::timestamp
["1970-01-01 00:00:00.000100+00"]
select '1970-01-01 00:00:00.000100'::timestamp
["1970-01-01 00:00:00.000100+00"]
select '1970-01-01 00:00:00.00001'::timestamp
["1970-01-01 00:00:00.000010+00"]
select '1970-01-01 00:00:00.000010'::timestamp
["1970-01-01 00:00:00.000010+00"]
select '1970-01-01 00:00:00.000001'::timestamp
["1970-01-01 00:00:00.000001+00"]
select '1970-01-01 00:00:00.0000001'::timestamp
{"msg": "malformed timestamp string"}
# test: zulu
select '1970-01-01 00:00:00.999999Z'::timestamp
["1970-01-01 00:00:00.999999+00"]
select '1970-01-01 00:00:00.999999Zjunk'::timestamp
{"msg": "malformed timestamp string"}
select timestamp '1970-01-01 00:00:00.999999Zjunk'
{"msg": "malformed timestamp string"}
# test: timezone (hh)
select '1970-01-01 00:00:00.999999+'::timestamp
{"msg": "malformed timestamp string"}
select '1970-01-01 00:00:00.999999+0'::timestamp
{"msg": "malformed timestamp string"}
select '1970-01-01 00:00:00.999999+00'::timestamp
["1970-01-01 00:00:00.999999+00"]
select '1970-01-01 00:00:00.999999-00'::timestamp
["1970-01-01 00:00:00.999999+00"]
select '1970-01-01 00:00:00.999999-000'::timestamp
{"msg": "malformed timestamp string"}
# test: timezone (hhmm)
select '1970-01-01 00:00:00.999999+0000'::timestamp
["1970-01-01 00:00:00.999999+00"]
select '1970-01-01 00:00:00.999999-0000'::timestamp
["1970-01-01 00:00:00.999999+00"]
select '1970-01-01 00:00:00.999999+0030'::timestamp
{"msg": "timestamp overflow"}
select '1970-01-01 00:00:00.999999+1030'::timestamp
{"msg": "timestamp overflow"}
select '1970-01-01 00:00:00.999999+9930'::timestamp
{"msg": "malformed timestamp string"}
# test: timezone (hh:mm)
select '1970-01-01 00:00:00.999999+00:00'::timestamp
["1970-01-01 00:00:00.999999+00"]
select '1970-01-01 00:00:00.999999-00:00'::timestamp
["1970-01-01 00:00:00.999999+00"]
select '1970-01-01 00:00:00.999999+00:30'::timestamp
{"msg": "timestamp overflow"}
select '1970-01-01 00:00:00.999999+10:30'::timestamp
{"msg": "timestamp overflow"}
select '1970-01-01 00:00:00.999999+99:30'::timestamp
{"msg": "malformed timestamp string"}
# test: timezone (ignore)
select '1970-01-01 00:00:00.999999+00'::timestamp
["1970-01-01 00:00:00.999999+00"]
select '1970-01-01 00:00:00.999999+01'::timestamp
{"msg": "timestamp overflow"}
select '1970-01-01 00:00:00.999999+02'::timestamp
{"msg": "timestamp overflow"}
select '1970-01-01 00:00:00.999999+03'::timestamp
{"msg": "timestamp overflow"}
# test: convertion (string)
select '1970-01-01 01:12:59.909090'::timestamp
["1970-01-01 01:12:59.909090+00"]
select '1970-01-01 01:12:59.909090'::timestamp::string
["1970-01-01 01:12:59.909090+00"]
select '1970-01-01 01:12:59.909090'::timestamp::string::timestamp
["1970-01-01 01:12:59.909090+00"]
select '1970-01-01 01:12:59.909090'::timestamp::string::timestamp::string
["1970-01-01 01:12:59.909090+00"]
select timestamp '1970-01-01 01:12:59.909090'::string::timestamp::string
["1970-01-01 01:12:59.909090+00"]
select timestamp('1970-01-01 01:12:59.909090')::string::timestamp::string
["1970-01-01 01:12:59.909090+00"]
# test: convertion (document)
select ['1970-01-01 01:12:59.909090'::timestamp]
["1970-01-01 01:12:59.909090+00"]
select ['1970-01-01 01:12:59.909090'::timestamp::string]
["1970-01-01 01:12:59.909090+00"]
select ['1970-01-01 01:12:59.909090'::timestamp::string::timestamp]
["1970-01-01 01:12:59.909090+00"]
select ['1970-01-01 01:12:59.909090'::timestamp::string::timestamp::string]
["1970-01-01 01:12:59.909090+00"]
# test: add
select '1970-01-01 01:12:59.909090'::timestamp + 1
{"msg": "bad + expression types"}
select '1970-01-01 01:12:59.909090'::timestamp + '1 hour'
{"msg": "bad + expression types"}
select '1970-01-01 00:00:00.000000'::timestamp + '1 hour'::interval
["1970-01-01 01:00:00+00"]
select '1970-01-01 00:00:00.000000'::timestamp + '1 year'::interval
["1971-01-01 00:00:00+00"]
select '1971-01-01 00:00:00.000000'::timestamp + '1 year'::interval
["1972-01-01 00:00:00+00"]
select '1 year'::interval + '1 year'::interval
["2 years"]
select '1970-01-01 00:00:00.000000'::timestamp + '1 year'::interval + '1 year'::interval
["1972-01-01 00:00:00+00"]
# test: sub
select '1970-01-01 01:12:59.909090'::timestamp + 1
{"msg": "bad + expression types"}
select '1970-01-01 01:12:59.909090'::timestamp - '1 hour'
{"msg": "bad - expression types"}
select '1970-01-01 00:00:00.000000'::timestamp - '1 hour'::interval
{"msg": "timestamp overflow"}
select '1973-01-01 00:00:00.000000'::timestamp - '1 year'::interval
["1972-01-01 00:00:00+00"]
select '1 year'::interval - '1 year'::interval
[""]
select '1980-01-01 00:00:00.000000'::timestamp - '1 year'::interval - '1 year'::interval
["1980-01-01 00:00:00+00"]
select '1980-01-01 00:00:00.000000'::timestamp - '-1 year'::interval - '-1 year'::interval
["1980-01-01 00:00:00+00"]
# test: eq
select '1970-01-01 01:12:59.909090'::timestamp = '1970-01-01 01:12:59.909090'::timestamp
[true]
select '1970-01-01 01:12:59.909090'::timestamp = '1970-01-01 01:12:59.909099'::timestamp
[false]
# test: lte
select '1970-01-01 01:12:59.909090'::timestamp <= '1970-01-01 01:12:59.909090'::timestamp
[true]
select '1970-01-01 01:12:58'::timestamp <= '1970-01-01 01:12:59.909090'::timestamp
[true]
select '1970-01-01 01:13:00'::timestamp <= '1970-01-01 01:12:59'::timestamp
[false]
select '1970-01-01 01:12:59.909090'::timestamp <= '1970-01-01 01:12:59.909099'::timestamp
[true]
# test: lt
select '1970-01-01 01:12:59.909090'::timestamp < '1970-01-01 01:12:59.909090'::timestamp
[false]
select '1970-01-01 01:12:58'::timestamp < '1970-01-01 01:12:59.909090'::timestamp
[true]
select '1970-01-01 01:13:00'::timestamp < '1970-01-01 01:12:59'::timestamp
[false]
select '1970-01-01 01:12:59.909090'::timestamp < '1970-01-01 01:12:59.909099'::timestamp
[true]
# test: gte
select '1970-01-01 01:12:59.909090'::timestamp >= '1970-01-01 01:12:59.909090'::timestamp
[true]
select '1970-01-01 01:12:58'::timestamp >= '1970-01-01 01:12:59.909090'::timestamp
[false]
select '1970-01-01 01:13:00'::timestamp >= '1970-01-01 01:12:59'::timestamp
[true]
select '1970-01-01 01:12:59.909090'::timestamp >= '1970-01-01 01:12:59.909099'::timestamp
[false]
# test: gt
select '1970-01-01 01:12:59.909090'::timestamp > '1970-01-01 01:12:59.909090'::timestamp
[false]
select '1970-01-01 01:12:58'::timestamp > '1970-01-01 01:12:59.909090'::timestamp
[false]
select '1970-01-01 01:13:00'::timestamp > '1970-01-01 01:12:59'::timestamp
[true]
select '1970-01-01 01:12:59.909090'::timestamp > '1970-01-01 01:12:59.909099'::timestamp
[false]
# test: current_timestamp
select current_timestamp::int > 0
[true]
# test: between
select timestamp '1970-01-01 01:12:59.909090' between timestamp '1970-01-01 01:12:59' and timestamp '1970-01-02 00:00:01'
[true]
select timestamp '1970-01-01 01:12:59.909090' not between timestamp '1970-01-01 01:12:59' and timestamp '1970-01-02 00:00:01'
[false]
# test: timestamp column
create table test (id int primary key, ts timestamp)
insert into test values (0, "1970-01-01 01:12:59.909090"::timestamp)
{"msg": "expected ')'"}
insert into test values (0, timestamp "1970-01-01 01:12:59.909090")
insert into test values (1, timestamp "1970-01-01 01:13:00")
insert into test values (2, timestamp "1970-01-01 01:13:01")
insert into test values (3, timestamp '1970-01-01 01:13:01')
select * from test
[[0, "1970-01-01 01:12:59.909090+00"], [1, "1970-01-01 01:13:00+00"], [2, "1970-01-01 01:13:01+00"], [3, "1970-01-01 01:13:01+00"]]
select * from test where ts > "1970-01-01 01:12:59.909090"::timestamp;
[[1, "1970-01-01 01:13:00+00"], [2, "1970-01-01 01:13:01+00"], [3, "1970-01-01 01:13:01+00"]]
explain select * from test where ts > "1970-01-01 01:12:59.909090"::timestamp;
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 14     0      0     ",
      "05": "cursor_idx          1      0      1     ",
      "06": "string              2      20     0     # 1970-01-01 01:12:59.909090",
      "07": "push                2      0      0     ",
      "08": "call                2      -      1     # public.timestamp()",
      "09": "gt                  3      1      2     ",
      "10": "jntr                13     3      0     ",
      "11": "cursor_read         1      0      0     ",
      "12": "set_add             0      1      0     ",
      "13": "cursor_next         0      5      0     ",
      "14": "cursor_close        0      0      0     ",
      "15": "result              0      0      0     ",
      "16": "ret                 0      0      0     "
    }
  }
}]
select * from test where ts > timestamp "1970-01-01 01:12:59.909090"
[[1, "1970-01-01 01:13:00+00"], [2, "1970-01-01 01:13:01+00"], [3, "1970-01-01 01:13:01+00"]]
explain select * from test where ts > timestamp "1970-01-01 01:12:59.909090"
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "int_min             1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 12     0      0     ",
      "05": "cursor_idx          1      0      1     ",
      "06": "timestamp           2      -      0     # 4379909090",
      "07": "gt                  3      1      2     ",
      "08": "jntr                11     3      0     ",
      "09": "cursor_read         1      0      0     ",
      "10": "set_add             0      1      0     ",
      "11": "cursor_next         0      5      0     ",
      "12": "cursor_close        0      0      0     ",
      "13": "result              0      0      0     ",
      "14": "ret                 0      0      0     "
    }
  }
}]
select * from test where ts = "1970-01-01 01:13:01"::timestamp;
[[2, "1970-01-01 01:13:01+00"], [3, "1970-01-01 01:13:01+00"]]
# test: timestamp current_timestamp column
insert into test values (4, current_timestamp)
select ts::int > 0 from test where id = 4
[true]
drop table test
# test: timestamp column (auto cast)
create table test (id int primary key, ts timestamp)
insert into test values (0, "1970-01-01 01:12:59.909090")
select * from test
[[0, "1970-01-01 01:12:59.909090+00"]]
drop table test
# test: timestamp column (key)
create table test (id timestamp primary key)
insert into test values (timestamp "1970-01-01 00:00:01.000001")
insert into test values (timestamp "1970-01-01 00:00:01.000002")
insert into test values (timestamp "1970-01-01 00:00:01.000003")
insert into test values (timestamp "1970-01-01 00:00:02.000000")
insert into test values (timestamp "1970-01-01 00:00:03.000000")
insert into test values (timestamp "1970-01-01 00:00:04.000000")
explain select * from test
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "timestamp_min       1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 8      0      0     ",
      "05": "cursor_read         1      0      0     ",
      "06": "set_add             0      1      0     ",
      "07": "cursor_next         0      5      0     ",
      "08": "cursor_close        0      0      0     ",
      "09": "result              0      0      0     ",
      "10": "ret                 0      0      0     "
    }
  }
}]
select * from test
[["1970-01-01 00:00:01.000001+00"], ["1970-01-01 00:00:01.000002+00"], ["1970-01-01 00:00:01.000003+00"], ["1970-01-01 00:00:02+00"], ["1970-01-01 00:00:03+00"], ["1970-01-01 00:00:04+00"]]
select * from test order by id
[["1970-01-01 00:00:01.000001+00"], ["1970-01-01 00:00:01.000002+00"], ["1970-01-01 00:00:01.000003+00"], ["1970-01-01 00:00:02+00"], ["1970-01-01 00:00:03+00"], ["1970-01-01 00:00:04+00"]]
select * from test where id > timestamp '1970-01-01 00:00:01.000002'
[["1970-01-01 00:00:01.000003+00"], ["1970-01-01 00:00:02+00"], ["1970-01-01 00:00:03+00"], ["1970-01-01 00:00:04+00"]]
explain select * from test where id > timestamp '1970-01-01 00:00:01.000002'
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "timestamp           1      -      0     # 1000002",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 12     0      0     ",
      "05": "cursor_idx          1      0      0     ",
      "06": "timestamp           2      -      0     # 1000002",
      "07": "gt                  3      1      2     ",
      "08": "jntr                11     3      0     ",
      "09": "cursor_read         1      0      0     ",
      "10": "set_add             0      1      0     ",
      "11": "cursor_next         0      5      0     ",
      "12": "cursor_close        0      0      0     ",
      "13": "result              0      0      0     ",
      "14": "ret                 0      0      0     "
    }
  }
}]
select * from test where id >= timestamp '1970-01-01 00:00:01.000002'
[["1970-01-01 00:00:01.000002+00"], ["1970-01-01 00:00:01.000003+00"], ["1970-01-01 00:00:02+00"], ["1970-01-01 00:00:03+00"], ["1970-01-01 00:00:04+00"]]
explain select * from test where id >= timestamp '1970-01-01 00:00:01.000002'
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "timestamp           1      -      0     # 1000002",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 12     0      0     ",
      "05": "cursor_idx          1      0      0     ",
      "06": "timestamp           2      -      0     # 1000002",
      "07": "gte                 3      1      2     ",
      "08": "jntr                11     3      0     ",
      "09": "cursor_read         1      0      0     ",
      "10": "set_add             0      1      0     ",
      "11": "cursor_next         0      5      0     ",
      "12": "cursor_close        0      0      0     ",
      "13": "result              0      0      0     ",
      "14": "ret                 0      0      0     "
    }
  }
}]
select * from test where id < timestamp '1970-01-01 00:00:01.000003'
[["1970-01-01 00:00:01.000001+00"], ["1970-01-01 00:00:01.000002+00"]]
explain select * from test where id < timestamp '1970-01-01 00:00:01.000003'
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "timestamp_min       1      0      0     ",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 16     0      0     ",
      "05": "cursor_idx          1      0      0     ",
      "06": "timestamp           2      -      0     # 1000003",
      "07": "lt                  3      1      2     ",
      "08": "jntr                4      3      0     ",
      "09": "cursor_idx          1      0      0     ",
      "10": "timestamp           2      -      0     # 1000003",
      "11": "lt                  3      1      2     ",
      "12": "jntr                15     3      0     ",
      "13": "cursor_read         1      0      0     ",
      "14": "set_add             0      1      0     ",
      "15": "cursor_next         0      5      0     ",
      "16": "cursor_close        0      0      0     ",
      "17": "result              0      0      0     ",
      "18": "ret                 0      0      0     "
    }
  }
}]
select * from test where id = timestamp '1970-01-01 00:00:01.000003'
[["1970-01-01 00:00:01.000003+00"]]
explain select * from test where id = timestamp '1970-01-01 00:00:01.000003'
[{
  "bytecode": {
    "coordinator": {
      "00": "send_hash           0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "timestamp           1      -      0     # 1000003",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary, lookup)",
      "04": "jmp                 12     0      0     ",
      "05": "cursor_idx          1      0      0     ",
      "06": "timestamp           2      -      0     # 1000003",
      "07": "equ                 3      1      2     ",
      "08": "jntr                4      3      0     ",
      "09": "cursor_read         1      0      0     ",
      "10": "set_add             0      1      0     ",
      "11": "jmp                 4      0      0     ",
      "12": "cursor_close        0      0      0     ",
      "13": "result              0      0      0     ",
      "14": "ret                 0      0      0     "
    }
  }
}]
drop table test
# test: timestamp column (secondary index)
create table test (id timestamp primary key)
insert into test values (timestamp "1970-01-01 00:00:01.000001")
insert into test values (timestamp "1970-01-01 00:00:01.000002")
insert into test values (timestamp "1970-01-01 00:00:01.000003")
insert into test values (timestamp "1970-01-01 00:00:02.000000")
insert into test values (timestamp "1970-01-01 00:00:03.000000")
insert into test values (timestamp "1970-01-01 00:00:04.000000")
create index i on test (id) with (type = 'hash')
select * from test use index (i)
[["1970-01-01 00:00:01.000001+00"], ["1970-01-01 00:00:03+00"], ["1970-01-01 00:00:02+00"], ["1970-01-01 00:00:01.000002+00"], ["1970-01-01 00:00:04+00"], ["1970-01-01 00:00:01.000003+00"]]
select * from test where id > timestamp '1970-01-01 00:00:01.000003'
[["1970-01-01 00:00:02+00"], ["1970-01-01 00:00:03+00"], ["1970-01-01 00:00:04+00"]]
explain select * from test where id > timestamp '1970-01-01 00:00:01.000003'
[{
  "bytecode": {
    "coordinator": {
      "00": "send_all            0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "timestamp           1      -      0     # 1000003",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (primary)",
      "04": "jmp                 12     0      0     ",
      "05": "cursor_idx          1      0      0     ",
      "06": "timestamp           2      -      0     # 1000003",
      "07": "gt                  3      1      2     ",
      "08": "jntr                11     3      0     ",
      "09": "cursor_read         1      0      0     ",
      "10": "set_add             0      1      0     ",
      "11": "cursor_next         0      5      0     ",
      "12": "cursor_close        0      0      0     ",
      "13": "result              0      0      0     ",
      "14": "ret                 0      0      0     "
    }
  }
}]
select count(*) from test where id > timestamp '1970-01-01 00:00:01.000003'
[3]
select * from test where id = timestamp '1970-01-01 00:00:01.000003'
[["1970-01-01 00:00:01.000003+00"]]
explain select * from test where id = timestamp '1970-01-01 00:00:01.000003'
[{
  "bytecode": {
    "coordinator": {
      "00": "send_hash           0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "timestamp           1      -      0     # 1000003",
      "02": "push                1      0      0     ",
      "03": "cursor_open         0      0      5     # public.test (i, lookup)",
      "04": "jmp                 12     0      0     ",
      "05": "cursor_idx          1      0      0     ",
      "06": "timestamp           2      -      0     # 1000003",
      "07": "equ                 3      1      2     ",
      "08": "jntr                4      3      0     ",
      "09": "cursor_read         1      0      0     ",
      "10": "set_add             0      1      0     ",
      "11": "cursor_next         0      5      0     ",
      "12": "cursor_close        0      0      0     ",
      "13": "result              0      0      0     ",
      "14": "ret                 0      0      0     "
    }
  }
}]
select count(*) from test where id = timestamp '1970-01-01 00:00:01.000003'
[1]
drop table test
disconnect S0
close E0
