open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3480 }], "backends": 0
connect E0 S0 localhost:3480
# test: bootstrap (no nodes)
show nodes
[]
# test: ddl (without nodes)
create table test (id int primary key)
{"code": 1, "msg": "system has no nodes"}
create shared table test (id int primary key)
{"code": 1, "msg": "system has no nodes"}
select * from test
{"code": 1, "msg": "<test> table or view is not found"}
select * from [1,2,3]
[1, 2, 3]
# test: create node statement parsing
create compute
{"code": 1, "msg": "CREATE COMPUTE <NODE> expected"}
create node 1
{"code": 1, "msg": "unexpected token at the end of statement"}
create node for
{"code": 1, "msg": "unexpected token at the end of statement"}
create node for 1
{"code": 1, "msg": "unexpected token at the end of statement"}
# test: create node id
create node ""
{"code": 1, "msg": "failed to parse uuid"}
create compute node "00000000-0000-0000-0000-000000000000"
[]
show nodes
[{
  "id": "00000000-0000-0000-0000-000000000000"
}]
# test: create node already exists
create node "00000000-0000-0000-0000-000000000000"
{"code": 1, "msg": "node '00000000-0000-0000-0000-000000000000': already exists"}
# test: create node if not exists
create node if "00000000-0000-0000-0000-000000000000"
{"code": 1, "msg": "IF <NOT> EXISTS expected"}
create node if
{"code": 1, "msg": "IF <NOT> EXISTS expected"}
create node if not
{"code": 1, "msg": "IF NOT <EXISTS> expected"}
create node if not exists
{"code": 1, "msg": "CREATE NODE IF NOT EXISTS <ID> expected"}
create node if not exists "00000000-0000-0000-0000-00000000000Z"
{"code": 1, "msg": "failed to parse uuid"}
create node if not exists "  00000000-0000-0000-0000-00000000000  "
{"code": 1, "msg": "failed to parse uuid"}
create node if not exists "00000000-0000-0000-0000-000000000000"
[]
show nodes
[{
  "id": "00000000-0000-0000-0000-000000000000"
}]
# test: ddl/dml (with one node)
create table test1 (id int primary key)
[]
create shared table test2 (id int primary key)
[]
show tables
[{
  "schema": "public",
  "name": "test1",
  "shared": false,
  "columns": [{
    "name": "id",
    "type": "int",
    "constraint": {
      "not_null": true,
      "generated": 0,
      "modulo": 9223372036854775807,
      "default": null
    }
  }],
  "indexes": [{
    "name": "primary",
    "type": 2,
    "unique": true,
    "primary": true,
    "keys": [{
      "ref": 0,
      "type": "int",
      "path": ""
    }]
  }],
  "partitions": [{
    "id": 1,
    "node": "00000000-0000-0000-0000-000000000000",
    "min": 0,
    "max": 8096
  }]
}, {
  "schema": "public",
  "name": "test2",
  "shared": true,
  "columns": [{
    "name": "id",
    "type": "int",
    "constraint": {
      "not_null": true,
      "generated": 0,
      "modulo": 9223372036854775807,
      "default": null
    }
  }],
  "indexes": [{
    "name": "primary",
    "type": 2,
    "unique": true,
    "primary": true,
    "keys": [{
      "ref": 0,
      "type": "int",
      "path": ""
    }]
  }],
  "partitions": [{
    "id": 2,
    "node": "00000000-0000-0000-0000-000000000000",
    "min": 0,
    "max": 8096
  }]
}]
insert into test1 values (1), (2), (3); insert into test2 4,5,6
[]
select * from test1
[[1], [2], [3]]
select * from test2
[[4], [5], [6]]
# test: restart
disconnect S0
close E0
open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3480 }], "backends": 0
connect E0 S0 localhost:3480
show nodes
[{
  "id": "00000000-0000-0000-0000-000000000000"
}]
select * from test1
[[1], [2], [3]]
select * from test2
[[4], [5], [6]]
# test: drop node statement parsing
drop node
{"code": 1, "msg": "DROP NODE <id> expected"}
drop node 1
{"code": 1, "msg": "DROP NODE <id> expected"}
drop node ""
{"code": 1, "msg": "node '': not exists"}
# test: drop node if exists
drop node "00000000-0000-0000-0000-000000000001"
{"code": 1, "msg": "node '00000000-0000-0000-0000-000000000001': not exists"}
drop node if exists "00000000-0000-0000-0000-000000000001"
[]
show nodes
[{
  "id": "00000000-0000-0000-0000-000000000000"
}]
# test: drop node with dependency
drop node "00000000-0000-0000-0000-000000000000"
{"code": 1, "msg": "node '00000000-0000-0000-0000-000000000000': has dependencies"}
# test: drop node without dependency
create compute node "00000000-0000-0000-0000-000000000001"
[]
create node "00000000-0000-0000-0000-000000000002"
[]
show nodes
[{
  "id": "00000000-0000-0000-0000-000000000000"
}, {
  "id": "00000000-0000-0000-0000-000000000001"
}, {
  "id": "00000000-0000-0000-0000-000000000002"
}]
drop node "00000000-0000-0000-0000-000000000001"
[]
show nodes
[{
  "id": "00000000-0000-0000-0000-000000000000"
}, {
  "id": "00000000-0000-0000-0000-000000000002"
}]
drop node "00000000-0000-0000-0000-000000000001"
{"code": 1, "msg": "node '00000000-0000-0000-0000-000000000001': not exists"}
drop node if exists "00000000-0000-0000-0000-000000000001"
[]
# test: ddl (two nodes partitioning)
create table test3 (id int primary key)
[]
show tables
[{
  "schema": "public",
  "name": "test1",
  "shared": false,
  "columns": [{
    "name": "id",
    "type": "int",
    "constraint": {
      "not_null": true,
      "generated": 0,
      "modulo": 9223372036854775807,
      "default": null
    }
  }],
  "indexes": [{
    "name": "primary",
    "type": 2,
    "unique": true,
    "primary": true,
    "keys": [{
      "ref": 0,
      "type": "int",
      "path": ""
    }]
  }],
  "partitions": [{
    "id": 1,
    "node": "00000000-0000-0000-0000-000000000000",
    "min": 0,
    "max": 8096
  }]
}, {
  "schema": "public",
  "name": "test2",
  "shared": true,
  "columns": [{
    "name": "id",
    "type": "int",
    "constraint": {
      "not_null": true,
      "generated": 0,
      "modulo": 9223372036854775807,
      "default": null
    }
  }],
  "indexes": [{
    "name": "primary",
    "type": 2,
    "unique": true,
    "primary": true,
    "keys": [{
      "ref": 0,
      "type": "int",
      "path": ""
    }]
  }],
  "partitions": [{
    "id": 2,
    "node": "00000000-0000-0000-0000-000000000000",
    "min": 0,
    "max": 8096
  }]
}, {
  "schema": "public",
  "name": "test3",
  "shared": false,
  "columns": [{
    "name": "id",
    "type": "int",
    "constraint": {
      "not_null": true,
      "generated": 0,
      "modulo": 9223372036854775807,
      "default": null
    }
  }],
  "indexes": [{
    "name": "primary",
    "type": 2,
    "unique": true,
    "primary": true,
    "keys": [{
      "ref": 0,
      "type": "int",
      "path": ""
    }]
  }],
  "partitions": [{
    "id": 3,
    "node": "00000000-0000-0000-0000-000000000000",
    "min": 0,
    "max": 4048
  }, {
    "id": 4,
    "node": "00000000-0000-0000-0000-000000000002",
    "min": 4048,
    "max": 8096
  }]
}]
# test: drop node (after table drop)
drop node "00000000-0000-0000-0000-000000000002"
{"code": 1, "msg": "node '00000000-0000-0000-0000-000000000002': has dependencies"}
drop table test3
[]
drop node "00000000-0000-0000-0000-000000000002"
[]
show nodes
[{
  "id": "00000000-0000-0000-0000-000000000000"
}]
# test: create table/create node/select
create table test4(id int primary key)
[]
insert into test4 values (1), (2), (3)
[]
create node "00000000-0000-0000-0000-000000000003"
[]
create node "00000000-0000-0000-0000-000000000004"
[]
select * from test4
[[1], [2], [3]]
drop table test4
[]
# test: create table/create node/add column
show nodes
[{
  "id": "00000000-0000-0000-0000-000000000000"
}, {
  "id": "00000000-0000-0000-0000-000000000003"
}, {
  "id": "00000000-0000-0000-0000-000000000004"
}]
create table test(id int primary key)
[]
show tables
[{
  "schema": "public",
  "name": "test1",
  "shared": false,
  "columns": [{
    "name": "id",
    "type": "int",
    "constraint": {
      "not_null": true,
      "generated": 0,
      "modulo": 9223372036854775807,
      "default": null
    }
  }],
  "indexes": [{
    "name": "primary",
    "type": 2,
    "unique": true,
    "primary": true,
    "keys": [{
      "ref": 0,
      "type": "int",
      "path": ""
    }]
  }],
  "partitions": [{
    "id": 1,
    "node": "00000000-0000-0000-0000-000000000000",
    "min": 0,
    "max": 8096
  }]
}, {
  "schema": "public",
  "name": "test2",
  "shared": true,
  "columns": [{
    "name": "id",
    "type": "int",
    "constraint": {
      "not_null": true,
      "generated": 0,
      "modulo": 9223372036854775807,
      "default": null
    }
  }],
  "indexes": [{
    "name": "primary",
    "type": 2,
    "unique": true,
    "primary": true,
    "keys": [{
      "ref": 0,
      "type": "int",
      "path": ""
    }]
  }],
  "partitions": [{
    "id": 2,
    "node": "00000000-0000-0000-0000-000000000000",
    "min": 0,
    "max": 8096
  }]
}, {
  "schema": "public",
  "name": "test",
  "shared": false,
  "columns": [{
    "name": "id",
    "type": "int",
    "constraint": {
      "not_null": true,
      "generated": 0,
      "modulo": 9223372036854775807,
      "default": null
    }
  }],
  "indexes": [{
    "name": "primary",
    "type": 2,
    "unique": true,
    "primary": true,
    "keys": [{
      "ref": 0,
      "type": "int",
      "path": ""
    }]
  }],
  "partitions": [{
    "id": 6,
    "node": "00000000-0000-0000-0000-000000000000",
    "min": 0,
    "max": 2698
  }, {
    "id": 7,
    "node": "00000000-0000-0000-0000-000000000003",
    "min": 2698,
    "max": 5396
  }, {
    "id": 8,
    "node": "00000000-0000-0000-0000-000000000004",
    "min": 5396,
    "max": 8096
  }]
}]
insert into test values (1), (2), (3)
[]
create node "00000000-0000-0000-0000-000000000005"
[]
create node "00000000-0000-0000-0000-000000000006"
[]
show nodes
[{
  "id": "00000000-0000-0000-0000-000000000000"
}, {
  "id": "00000000-0000-0000-0000-000000000003"
}, {
  "id": "00000000-0000-0000-0000-000000000004"
}, {
  "id": "00000000-0000-0000-0000-000000000005"
}, {
  "id": "00000000-0000-0000-0000-000000000006"
}]
alter table test add column data int
[]
show tables
[{
  "schema": "public",
  "name": "test1",
  "shared": false,
  "columns": [{
    "name": "id",
    "type": "int",
    "constraint": {
      "not_null": true,
      "generated": 0,
      "modulo": 9223372036854775807,
      "default": null
    }
  }],
  "indexes": [{
    "name": "primary",
    "type": 2,
    "unique": true,
    "primary": true,
    "keys": [{
      "ref": 0,
      "type": "int",
      "path": ""
    }]
  }],
  "partitions": [{
    "id": 1,
    "node": "00000000-0000-0000-0000-000000000000",
    "min": 0,
    "max": 8096
  }]
}, {
  "schema": "public",
  "name": "test2",
  "shared": true,
  "columns": [{
    "name": "id",
    "type": "int",
    "constraint": {
      "not_null": true,
      "generated": 0,
      "modulo": 9223372036854775807,
      "default": null
    }
  }],
  "indexes": [{
    "name": "primary",
    "type": 2,
    "unique": true,
    "primary": true,
    "keys": [{
      "ref": 0,
      "type": "int",
      "path": ""
    }]
  }],
  "partitions": [{
    "id": 2,
    "node": "00000000-0000-0000-0000-000000000000",
    "min": 0,
    "max": 8096
  }]
}, {
  "schema": "public",
  "name": "test",
  "shared": false,
  "columns": [{
    "name": "id",
    "type": "int",
    "constraint": {
      "not_null": true,
      "generated": 0,
      "modulo": 9223372036854775807,
      "default": null
    }
  }, {
    "name": "data",
    "type": "int",
    "constraint": {
      "not_null": false,
      "generated": 0,
      "modulo": 9223372036854775807,
      "default": null
    }
  }],
  "indexes": [{
    "name": "primary",
    "type": 2,
    "unique": true,
    "primary": true,
    "keys": [{
      "ref": 0,
      "type": "int",
      "path": ""
    }]
  }],
  "partitions": [{
    "id": 6,
    "node": "00000000-0000-0000-0000-000000000000",
    "min": 0,
    "max": 2698
  }, {
    "id": 7,
    "node": "00000000-0000-0000-0000-000000000003",
    "min": 2698,
    "max": 5396
  }, {
    "id": 8,
    "node": "00000000-0000-0000-0000-000000000004",
    "min": 5396,
    "max": 8096
  }]
}]
select * from test
[[1, null], [2, null], [3, null]]
drop table test
[]
disconnect S0
close E0
