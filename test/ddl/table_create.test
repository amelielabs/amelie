#

env_open E0
connect E0 S0

# test: create table statement parsing
create
create junk
create unique
create unique table
create table
create table "junk_name"
create table if
create table if not
create table if not exists
create table 1234
create table test(
create table test(0
create table test("123"
create table test(name
create table test(name junk_type
create table test(name int
create table test(name int,
create table test(name int,)
create table if not exists 1234
create table if not exists test(
create table if not exists test(0
create table if not exists test("123"
create table if not exists test(name
create table if not exists test(name junk_type
create table if not exists test(name int
create table test(name int) junk
create table test()

# test: column int/integer
create table test(id int primary key, id2 integer)
select def from mn_tables() where name = "test"
drop table test

# test: column bool/boolean
create table test(id int primary key, a bool, b boolean)
select def from mn_tables() where name = "test"
drop table test

# test: column string/text
create table test(id int primary key, a string, b text)
select def from mn_tables() where name = "test"
drop table test

# test: column real
create table test(id int primary key, a real)
select def from mn_tables() where name = "test"
drop table test

# test: column map/object
create table test(id int primary key, a map, b object)
select def from mn_tables() where name = "test"
drop table test

# test: column array
create table test(id int primary key, a array)
select def from mn_tables() where name = "test"
drop table test

# test: column redefined
create table test(id int, id int)

# test: primary key is not defined
create table test(id int)

# test: primary key clause parsing
create table test(primary)
create table test(primary key(
create table test(primary key()
create table test(primary key())
create table test(primary key(abc))
create table test(id int, primary key())
create table test(id int, primary key(id, ))
create table test(primary key(id), id int)

# test: primary key is not found
create table test(id int, primary key(idd))

# test: primary key redefined
create table test(id int, primary key(id, id))
create table test(id int primary key, primary key(id))
create table if not exists test(id int primary key, primary key(id))
select def.key from mn_tables() where name = "test"
drop table test

# test: primary key asc/desc
create table test(id int, id2 int, primary key(id asc))
select def.key from mn_tables() where name = "test"
drop table test

create table test(id int, primary key(id desc))
select def.key from mn_tables() where name = "test"
drop table test

# test: primary key ensure valid type
create table test(id map primary key)
create table test(id map, primary key(id))

# test: primary key ensure valid nested key type
create table test(data map, primary key(data.id map))
create table test(data map, primary key(data.id integer))
select def.key from mn_tables() where name = "test"
drop table test

## test: table already exists
create table test (id int primary key)
create table test (id int primary key)

# test: table create if not exists
create table test (id int primary key)
create table if not exists test (id int primary key)
select name from mn_tables() where name = "test"
drop table test
select name from mn_tables() where name = "test"

# test: schema default
create table test (id int primary key)
select *.schema from mn_tables() where name = "test"
drop table test

# test: schema default explicit
create table public.test (id int primary key)
select *.schema from mn_tables() where name = "test"
drop table public.test

# test: schema non-exists
create table test.test (id int primary key)
select *.schema from mn_tables() where name = "test"

# test: schema set
create table test (id int primary key)
create schema test
create table test.test (id int primary key)
select *.schema || "." || *.name from mn_tables() where name = "test"
select name from mn_tables() where *.schema = "test" and name = "test"
drop table test
drop table test.test
drop schema test

## test: with
#create table test (id int primary key) with
#create table test (id int primary key) with (
#create table test (id int primary key) with (,
#create table test (id int primary key) with (abc
#create table test (id int primary key) with (abc = 10)
#create table test (id int primary key) with (abc = "")
#create table test (id int primary key) with (id = 10)
#create table test (id int primary key) with (id = "uuid") junk
#create table test (id int primary key) with (id = "uuid")
#drop table test

disconnect S0
env_close E0
