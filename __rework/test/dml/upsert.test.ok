open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3485 }]
connect E0 S0 localhost:3485
# test: on conflict parsing
create table test (id int primary key, data int)
insert into test values(1, 0) 123
{"msg": "unexpected token at the end of statement"}
insert into test values(1, 0) ON
{"msg": "INSERT VALUES ON <CONFLICT> expected"}
insert into test values(1, 0) ON 123
{"msg": "INSERT VALUES ON <CONFLICT> expected"}
insert into test values(1, 0) on conflict
{"msg": "INSERT VALUES ON CONFLICT <DO> expected"}
insert into test values(1, 0) on conflict 123
{"msg": "INSERT VALUES ON CONFLICT <DO> expected"}
insert into test values(1, 0) on conflict do
{"msg": "INSERT VALUES ON CONFLICT DO <NOTHING | UPDATE | AGGREGATE> expected"}
insert into test values(1, 0) on conflict do 123
{"msg": "INSERT VALUES ON CONFLICT DO <NOTHING | UPDATE | AGGREGATE> expected"}
insert into test values(1, 0) on conflict do update
{"msg": "UPDATE <SET> expected"}
insert into test values(1, 0) on conflict do update set
{"msg": "UPDATE name SET <path> expected"}
insert into test values(1, 0) on conflict do update set 123
{"msg": "UPDATE name SET <path> expected"}
insert into test values(1, 0) on conflict do update set path
{"msg": "UPDATE name SET path <=> expected"}
insert into test values(1, 0) on conflict do update set path =
{"msg": "bad expression"}
drop table test
# test: on conflict do nothing
create table test (id int primary key, data int)
explain insert into test values(1, 0) on conflict do nothing
[{
  "bytecode": {
    "coordinator": {
      "00": "send                0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "null                0      0      0     ",
      "03": "cte_set             0      0      0     ",
      "04": "ret                 0      0      0     "
    },
    "node": {
      "00": "cursor_prepare      0      -      0     # public.test",
      "01": "jmp                 2      0      0     ",
      "02": "upsert              0      2      -1    ",
      "03": "cursor_close        0      0      0     ",
      "04": "ret                 0      0      0     "
    }
  }
}]
insert into test values(1, 0) on conflict do nothing
insert into test values(1, 0) on conflict do nothing
insert into test values(1, 0) on conflict do nothing
explain insert into test values(1, 0), (2, 0), (1, 0) on conflict do nothing
[{
  "bytecode": {
    "coordinator": {
      "00": "send                0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "null                0      0      0     ",
      "03": "cte_set             0      0      0     ",
      "04": "ret                 0      0      0     "
    },
    "node": {
      "00": "cursor_prepare      0      -      0     # public.test",
      "01": "jmp                 2      0      0     ",
      "02": "upsert              0      2      -1    ",
      "03": "cursor_close        0      0      0     ",
      "04": "ret                 0      0      0     "
    }
  }
}]
insert into test values(1, 0), (2, 0), (1, 0) on conflict do nothing
select * from test
[[1, 0], [2, 0]]
drop table test
# test: on conflict do aggregate (without agg columns)
create table test (id int primary key, data int)
explain insert into test values(1, 0) on conflict do nothing
[{
  "bytecode": {
    "coordinator": {
      "00": "send                0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "null                0      0      0     ",
      "03": "cte_set             0      0      0     ",
      "04": "ret                 0      0      0     "
    },
    "node": {
      "00": "cursor_prepare      0      -      0     # public.test",
      "01": "jmp                 2      0      0     ",
      "02": "upsert              0      2      -1    ",
      "03": "cursor_close        0      0      0     ",
      "04": "ret                 0      0      0     "
    }
  }
}]
explain insert into test values(1, 0) on conflict do aggregate
[{
  "bytecode": {
    "coordinator": {
      "00": "send                0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "null                0      0      0     ",
      "03": "cte_set             0      0      0     ",
      "04": "ret                 0      0      0     "
    },
    "node": {
      "00": "cursor_prepare      0      -      0     # public.test",
      "01": "jmp                 2      0      0     ",
      "02": "upsert              0      2      -1    ",
      "03": "cursor_close        0      0      0     ",
      "04": "ret                 0      0      0     "
    }
  }
}]
insert into test values(1, 0) on conflict do aggregate
insert into test values(1, 0) on conflict do aggregate
select * from test
[[1, 0]]
drop table test
# test: upsert insert
create table test (id int primary key, data int)
explain insert into test values(1, 0) on conflict do update set data = data + 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send                0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "null                0      0      0     ",
      "03": "cte_set             0      0      0     ",
      "04": "ret                 0      0      0     "
    },
    "node": {
      "00": "cursor_prepare      0      -      0     # public.test",
      "01": "jmp                 13     0      0     ",
      "02": "cursor_read         0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "null                0      0      0     ",
      "05": "push                0      0      0     ",
      "06": "cursor_idx          0      0      1     ",
      "07": "int                 1      -      0     # 1",
      "08": "add                 2      0      1     ",
      "09": "push                2      0      0     ",
      "10": "assign              0      3      1     ",
      "11": "push                0      0      0     ",
      "12": "update              0      0      0     ",
      "13": "upsert              0      2      -1    ",
      "14": "cursor_close        0      0      0     ",
      "15": "ret                 0      0      0     "
    }
  }
}]
insert into test values(1, 0) on conflict do update set data = data + 1
select * from test
[[1, 0]]
drop table test
# test: upsert
create table test (id int primary key, data int)
insert into test values(1, 0) on conflict do update set data = data + 1
select * from test
[[1, 0]]
insert into test values(1, 0) on conflict do update set data = data + 1
select * from test
[[1, 1]]
insert into test values(1, 0) on conflict do update set data = data + 1
select * from test
[[1, 2]]
drop table test
# test: upsert batch
create table test (id int primary key, data int)
explain insert into test values (1, 0), (1, 0), (1, 0) on conflict do update set data = data + 1
[{
  "bytecode": {
    "coordinator": {
      "00": "send                0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "null                0      0      0     ",
      "03": "cte_set             0      0      0     ",
      "04": "ret                 0      0      0     "
    },
    "node": {
      "00": "cursor_prepare      0      -      0     # public.test",
      "01": "jmp                 13     0      0     ",
      "02": "cursor_read         0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "null                0      0      0     ",
      "05": "push                0      0      0     ",
      "06": "cursor_idx          0      0      1     ",
      "07": "int                 1      -      0     # 1",
      "08": "add                 2      0      1     ",
      "09": "push                2      0      0     ",
      "10": "assign              0      3      1     ",
      "11": "push                0      0      0     ",
      "12": "update              0      0      0     ",
      "13": "upsert              0      2      -1    ",
      "14": "cursor_close        0      0      0     ",
      "15": "ret                 0      0      0     "
    }
  }
}]
insert into test values (1, 0), (1, 0), (1, 0) on conflict do update set data = data + 1
insert into test values (1, 0), (1, 0), (1, 0) on conflict do update set data = data + 1
insert into test values (1, 0), (1, 0), (1, 0) on conflict do update set data = data + 1
select * from test
[[1, 8]]
drop table test
# test: upsert where
create table test (id int primary key, data int)
insert into test values (1, 0) on conflict do update set data = data + 1
insert into test values (1, 0) on conflict do update set data = data + 1
insert into test values (1, 0) on conflict do update set data = data + 1
select * from test
[[1, 2]]
explain insert into test values (1, 0) on conflict do update set data = data + 1 where true
[{
  "bytecode": {
    "coordinator": {
      "00": "send                0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "null                0      0      0     ",
      "03": "cte_set             0      0      0     ",
      "04": "ret                 0      0      0     "
    },
    "node": {
      "00": "cursor_prepare      0      -      0     # public.test",
      "01": "jmp                 15     0      0     ",
      "02": "bool                0      1      0     ",
      "03": "jntr                15     0      0     ",
      "04": "cursor_read         0      0      0     ",
      "05": "push                0      0      0     ",
      "06": "null                0      0      0     ",
      "07": "push                0      0      0     ",
      "08": "cursor_idx          0      0      1     ",
      "09": "int                 1      -      0     # 1",
      "10": "add                 2      0      1     ",
      "11": "push                2      0      0     ",
      "12": "assign              0      3      1     ",
      "13": "push                0      0      0     ",
      "14": "update              0      0      0     ",
      "15": "upsert              0      2      -1    ",
      "16": "cursor_close        0      0      0     ",
      "17": "ret                 0      0      0     "
    }
  }
}]
insert into test values (1, 0) on conflict do update set data = data + 1 where true
select * from test
[[1, 3]]
insert into test values (1, 0) on conflict do update set data = data + 1 where data < 3
select * from test
[[1, 3]]
insert into test values (1, 0) on conflict do update set data = data + 1 where data <= 3
select * from test
[[1, 4]]
drop table test
# test: upsert row access
create table test (id int primary key, data int)
insert into test values (1, 0) on conflict do update set data = data + 1
explain insert into test values (1, 123) on conflict do update set data = data + @[1]
[{
  "bytecode": {
    "coordinator": {
      "00": "send                0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "null                0      0      0     ",
      "03": "cte_set             0      0      0     ",
      "04": "ret                 0      0      0     "
    },
    "node": {
      "00": "cursor_prepare      0      -      0     # public.test",
      "01": "jmp                 15     0      0     ",
      "02": "cursor_read         0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "null                0      0      0     ",
      "05": "push                0      0      0     ",
      "06": "cursor_idx          0      0      1     ",
      "07": "ref                 1      0      0     ",
      "08": "int                 2      -      0     # 1",
      "09": "idx                 3      1      2     ",
      "10": "add                 1      0      3     ",
      "11": "push                1      0      0     ",
      "12": "assign              0      3      1     ",
      "13": "push                0      0      0     ",
      "14": "update              0      0      0     ",
      "15": "upsert              0      2      -1    ",
      "16": "cursor_close        0      0      0     ",
      "17": "ret                 0      0      0     "
    }
  }
}]
insert into test values (1, 123) on conflict do update set data = data + @[1]
select * from test
[[1, 123]]
select *[1] from test
[123]
drop table test
# test: upsert row access #2
create table test (id int primary key, data int)
insert into test values (1, 0) on conflict do update set data = data + 1
select @ from test
{"msg": "@: reference is not defined"}
drop table test
# test: upsert error
create table test (id int primary key, data int)
insert into test values (1, 0), (2, 0), (3, null) on conflict do update set data = data + 1
select * from test
[[1, 0], [2, 0], [3, null]]
insert into test values (1, 0), (2, 0), (3, 0) on conflict do update set data = data + 1
{"msg": "bad + expression types"}
select * from test
[[1, 0], [2, 0], [3, null]]
drop table test
# test: upsert generate
create table test (id int primary key serial, data int default 0)
insert into test generate 10 on conflict do update set data = data + 1
select * from test
[[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0], [9, 0]]
alter table test set serial to 0
insert into test generate 10 on conflict do update set data = data + 1
select * from test
[[0, 1], [1, 1], [2, 1], [3, 1], [4, 1], [5, 1], [6, 1], [7, 1], [8, 1], [9, 1]]
drop table test
# test: upsert secondary index
create table test (id int primary key, data int, value int)
create index i on test (data)
insert into test values (0, 2, 0)
insert into test values (1, 1, 0)
insert into test values (2, 0, 0)
select * from test
[[0, 2, 0], [1, 1, 0], [2, 0, 0]]
select * from test use index (i)
[[2, 0, 0], [1, 1, 0], [0, 2, 0]]
insert into test values (0, 2, 0) on conflict do update set value = value + 1
select * from test
[[0, 2, 1], [1, 1, 0], [2, 0, 0]]
select * from test use index (i)
[[2, 0, 0], [1, 1, 0], [0, 2, 1]]
insert into test values (3, 2, 0) on conflict do update set value = 10
select * from test
[[0, 2, 1], [1, 1, 0], [2, 0, 0], [3, 2, 0]]
select * from test use index (i)
[[2, 0, 0], [1, 1, 0], [0, 2, 1], [3, 2, 0]]
drop table test
# test: upsert secondary index (object)
create table test (obj object, primary key (obj.id int))
create index i on test (obj.data int)
insert into test {"id": 0, "data": 2}
insert into test {"id": 1, "data": 1}
insert into test {"id": 2, "data": 0}
insert into test {"id": 2, "data": 0} on conflict do update set obj.value = obj.id
insert into test {"id": 3, "data": 0} on conflict do update set obj.value = obj.id
select * from test
[[{
  "id": 0,
  "data": 2
}], [{
  "id": 1,
  "data": 1
}], [{
  "id": 2,
  "data": 0,
  "value": 2
}], [{
  "id": 3,
  "data": 0
}]]
select * from test use index (i)
[[{
  "id": 2,
  "data": 0,
  "value": 2
}], [{
  "id": 3,
  "data": 0
}], [{
  "id": 1,
  "data": 1
}], [{
  "id": 0,
  "data": 2
}]]
drop table test
# test: upsert returning
create table test (id int primary key, data int)
insert into test values (1, 0)
explain insert into test values(1, 0) on conflict do update set data = data + 1 returning *
[{
  "bytecode": {
    "coordinator": {
      "00": "send                0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "cursor_prepare      0      -      0     # public.test",
      "02": "jmp                 16     0      0     ",
      "03": "cursor_read         1      0      0     ",
      "04": "push                1      0      0     ",
      "05": "null                1      0      0     ",
      "06": "push                1      0      0     ",
      "07": "cursor_idx          1      0      1     ",
      "08": "int                 2      -      0     # 1",
      "09": "add                 3      1      2     ",
      "10": "push                3      0      0     ",
      "11": "assign              1      3      1     ",
      "12": "push                1      0      0     ",
      "13": "update              0      0      0     ",
      "14": "cursor_read         1      0      0     ",
      "15": "set_add             0      1      0     ",
      "16": "upsert              0      3      14    ",
      "17": "cursor_close        0      0      0     ",
      "18": "result              0      0      0     ",
      "19": "ret                 0      0      0     "
    }
  }
}]
insert into test values(1, 0) on conflict do update set data = data + 1 returning *
[[1, 1]]
insert into test values(1, 0) on conflict do update set data = data + 1 returning *
[[1, 2]]
insert into test values(1, 0) on conflict do update set data = data + 1 returning *
[[1, 3]]
select * from test
[[1, 3]]
drop table test
# test: upsert returning (do nothing)
create table test (id int primary key, data int)
insert into test values (1, 0)
explain insert into test values(1, 0) on conflict do nothing returning *
[{
  "bytecode": {
    "coordinator": {
      "00": "send                0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "cursor_prepare      0      -      0     # public.test",
      "02": "jmp                 5      0      0     ",
      "03": "cursor_read         1      0      0     ",
      "04": "set_add             0      1      0     ",
      "05": "upsert              0      3      3     ",
      "06": "cursor_close        0      0      0     ",
      "07": "result              0      0      0     ",
      "08": "ret                 0      0      0     "
    }
  }
}]
insert into test values(1, 0) on conflict do nothing returning *
[[1, 0]]
insert into test values(1, 0) on conflict do nothing returning *
[[1, 0]]
insert into test values(1, 0) on conflict do nothing returning *
[[1, 0]]
select * from test
[[1, 0]]
drop table test
# test: upsert returning (first row)
create table test (id int primary key, data int)
explain insert into test values(1, 0) on conflict do update set data = data + 1 returning *
[{
  "bytecode": {
    "coordinator": {
      "00": "send                0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "cursor_prepare      0      -      0     # public.test",
      "02": "jmp                 16     0      0     ",
      "03": "cursor_read         1      0      0     ",
      "04": "push                1      0      0     ",
      "05": "null                1      0      0     ",
      "06": "push                1      0      0     ",
      "07": "cursor_idx          1      0      1     ",
      "08": "int                 2      -      0     # 1",
      "09": "add                 3      1      2     ",
      "10": "push                3      0      0     ",
      "11": "assign              1      3      1     ",
      "12": "push                1      0      0     ",
      "13": "update              0      0      0     ",
      "14": "cursor_read         1      0      0     ",
      "15": "set_add             0      1      0     ",
      "16": "upsert              0      3      14    ",
      "17": "cursor_close        0      0      0     ",
      "18": "result              0      0      0     ",
      "19": "ret                 0      0      0     "
    }
  }
}]
insert into test values(1, 0) on conflict do update set data = data + 1 returning *
[[1, 0]]
insert into test values(1, 0) on conflict do update set data = data + 1 returning *
[[1, 1]]
insert into test values(1, 0) on conflict do update set data = data + 1 returning *
[[1, 2]]
select * from test
[[1, 2]]
drop table test
# test: upsert returning (do nothing, first row)
create table test (id int primary key, data int)
explain insert into test values(1, 0) on conflict do nothing returning *
[{
  "bytecode": {
    "coordinator": {
      "00": "send                0      0      -     # public.test",
      "01": "recv                0      0      0     ",
      "02": "bool                0      0      0     ",
      "03": "push                0      0      0     ",
      "04": "merge_recv          0      -1     -1    ",
      "05": "cte_set             0      0      0     ",
      "06": "body                0      0      0     ",
      "07": "ret                 0      0      0     "
    },
    "node": {
      "00": "set                 0      0      0     ",
      "01": "cursor_prepare      0      -      0     # public.test",
      "02": "jmp                 5      0      0     ",
      "03": "cursor_read         1      0      0     ",
      "04": "set_add             0      1      0     ",
      "05": "upsert              0      3      3     ",
      "06": "cursor_close        0      0      0     ",
      "07": "result              0      0      0     ",
      "08": "ret                 0      0      0     "
    }
  }
}]
insert into test values(1, 0) on conflict do nothing returning *
[[1, 0]]
insert into test values(1, 0) on conflict do nothing returning *
[[1, 0]]
select * from test
[[1, 0]]
drop table test
disconnect S0
close E0
