open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3485 }];
connect E0 S0 127.0.0.1:3485;
# test: select var
explain begin declare x int; select x; end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "var                 0      0      0     ",
    "02": "ret                 0      0      -     "
  },
  "access": []
}]
begin declare x int; select x; end;
[null]
# test: select var expr
explain begin declare x int := 0; select x; end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "int                 0      -      0     # 0",
    "02": "var_set             0      0      0     ",
    "03": "var                 0      0      0     ",
    "04": "ret                 0      0      -     "
  },
  "access": []
}]
begin declare x int := 0; select x; end;
[0]
explain begin
	declare x int := 0;
	select x; x:= 15;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "int                 0      -      0     # 0",
    "02": "var_set             0      0      0     ",
    "03": "var                 0      0      0     ",
    "04": "int                 1      -      0     # 15",
    "05": "var_set             0      0      1     ",
    "06": "var                 1      0      0     ",
    "07": "ret                 1      0      -     "
  },
  "access": []
}]
begin
	declare x int := 0;
	select x;
	x := 15;
	select x;
end;
[15]
# test: select into expr
explain begin
	declare x int;
	select 123 into x;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "int                 0      -      0     # 123",
    "02": "var_set             0      0      0     ",
    "03": "var                 0      0      0     ",
    "04": "ret                 0      0      -     "
  },
  "access": []
}]
begin
	declare x int;
	select 123 into x;
	select x;
end;
[123]
explain begin
	declare x int;
	select 123 into x;
	select x;
	select 15 into x;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "int                 0      -      0     # 123",
    "02": "var_set             0      0      0     ",
    "03": "var                 0      0      0     ",
    "04": "int                 1      -      0     # 15",
    "05": "var_set             0      0      1     ",
    "06": "var                 1      0      0     ",
    "07": "ret                 1      0      -     "
  },
  "access": []
}]
begin
	declare x int;
	select 123 into x;
	select x;
	select 15 into x;
	select x;
end;
[15]
# test: select from into (no recv)
create table test (id int primary key);
insert into test values (1), (2), (3);
explain begin
	declare x int;
	select id into x from test;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "recv                1      0      -1    ",
    "03": "var_set             0      0      1     ",
    "04": "free                1      0      0     ",
    "05": "ret                 -1     0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	select id into x from test;
end;
# test: select from into / select var
explain begin
	declare x int;
	select id into x from test;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "recv                1      0      -1    ",
    "03": "var_set             0      0      1     ",
    "04": "free                1      0      0     ",
    "05": "var                 0      0      0     ",
    "06": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	select id into x from test;
	select x;
end;
[1]
# test: select from into / select expr / select var
explain begin
	declare x int;
	select id into x from test;
	select 123;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "int                 1      -      0     # 123",
    "03": "recv                2      0      -1    ",
    "04": "var_set             0      0      2     ",
    "05": "free                2      0      0     ",
    "06": "var                 0      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	select id into x from test;
	select 123;
	select x;
end;
[1]
# test: select from into / select from / select var
explain begin
	declare x int;
	select id into x from test;
	select * from test;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "send_all            0      0      20    # public.test (select)",
    "02": "send_all            1      0      64    # public.test (select, closing)",
    "03": "recv                2      0      -1    ",
    "04": "var_set             0      0      2     ",
    "05": "free                2      0      0     ",
    "06": "var                 0      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     ",
    "08": "set                 1      1      0     ",
    "09": "table_open_part     2      44     14    # public.test (primary)",
    "10": "table_readi32       3      2      0     ",
    "11": "push                3      0      0     ",
    "12": "set_add             1      0      0     ",
    "13": "table_next          2      10     0     ",
    "14": "free                2      0      0     ",
    "15": "ret                 1      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	select id into x from test;
	select * from test;
	select x;
end;
[1]
# test: select from into / select expr / select from var
explain begin
	declare x int;
	select id into x from test;
	select 123;
	select * from x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "int                 1      -      0     # 123",
    "03": "recv                2      0      -1    ",
    "04": "var_set             0      0      2     ",
    "05": "free                2      0      0     ",
    "06": "set                 0      1      0     ",
    "07": "var                 2      0      0     ",
    "08": "push                2      0      0     ",
    "09": "set                 2      1      0     ",
    "10": "set_add             2      0      0     ",
    "11": "store_open          3      2      16    ",
    "12": "store_read          4      3      0     ",
    "13": "push                4      0      0     ",
    "14": "set_add             0      0      0     ",
    "15": "store_next          3      12     0     ",
    "16": "free                3      0      0     ",
    "17": "free                2      0      0     ",
    "18": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	select id into x from test;
	select 123;
	select * from x;
end;
[1]
# test: select from into / select from into
explain begin
	declare x int;
	select id into x from test;
	select 123 into x from test;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "send_all            0      0      20    # public.test (select)",
    "02": "recv                1      0      -1    ",
    "03": "var_set             0      0      1     ",
    "04": "free                1      0      0     ",
    "05": "send_all            0      0      64    # public.test (select, closing)",
    "06": "recv                1      0      -1    ",
    "07": "var_set             0      0      1     ",
    "08": "free                1      0      0     ",
    "09": "ret                 -1     0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     ",
    "08": "set                 0      1      0     ",
    "09": "table_open_part     1      44     13    # public.test (primary)",
    "10": "push_int            -      0      0     # 123",
    "11": "set_add             0      0      0     ",
    "12": "table_next          1      10     0     ",
    "13": "free                1      0      0     ",
    "14": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	select id into x from test;
	select 123 into x from test;
end;
# test: select from into / select from into / select var
explain begin
	declare x int;
	select id into x from test;
	select 123 into x from test;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "send_all            0      0      20    # public.test (select)",
    "02": "recv                1      0      -1    ",
    "03": "var_set             0      0      1     ",
    "04": "free                1      0      0     ",
    "05": "send_all            0      0      64    # public.test (select, closing)",
    "06": "recv                1      0      -1    ",
    "07": "var_set             0      0      1     ",
    "08": "free                1      0      0     ",
    "09": "var                 0      0      0     ",
    "10": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     ",
    "08": "set                 0      1      0     ",
    "09": "table_open_part     1      44     13    # public.test (primary)",
    "10": "push_int            -      0      0     # 123",
    "11": "set_add             0      0      0     ",
    "12": "table_next          1      10     0     ",
    "13": "free                1      0      0     ",
    "14": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	select id into x from test;
	select 123 into x from test;
	select x;
end;
[123]
# test: select expr into / select from into
explain begin
	declare x int;
	select 123 into x;
	select id into x from test;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "int                 0      -      0     # 123",
    "02": "var_set             0      0      0     ",
    "03": "send_all            0      0      20    # public.test (select, closing)",
    "04": "recv                1      0      -1    ",
    "05": "var_set             0      0      1     ",
    "06": "free                1      0      0     ",
    "07": "ret                 -1     0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	select 123 into x;
	select id into x from test;
end;
# test: select expr into / select from into / select var
explain begin
	declare x int;
	select 123 into x;
	select id into x from test;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "int                 0      -      0     # 123",
    "02": "var_set             0      0      0     ",
    "03": "send_all            0      0      20    # public.test (select, closing)",
    "04": "recv                1      0      -1    ",
    "05": "var_set             0      0      1     ",
    "06": "free                1      0      0     ",
    "07": "var                 0      0      0     ",
    "08": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	select 123 into x;
	select id into x from test;
	select x;
end;
[1]
# test: select from into / if / select var
explain begin
	declare x int;
	select id into x from test;
	if true then end;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "bool                1      1      0     ",
    "03": "jntr                4      1      0     ",
    "04": "recv                1      0      -1    ",
    "05": "var_set             0      0      1     ",
    "06": "free                1      0      0     ",
    "07": "var                 0      0      0     ",
    "08": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	select id into x from test;
	if true then end;
	select x;
end;
[1]
# test: select from into / if var / select var
explain begin
	declare x int;
	select id into x from test;
	if x then end;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "recv                1      0      -1    ",
    "03": "var_set             0      0      1     ",
    "04": "free                1      0      0     ",
    "05": "var                 0      0      0     ",
    "06": "jntr                7      0      0     ",
    "07": "var                 0      0      0     ",
    "08": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	select id into x from test;
	if x then end;
	select x;
end;
[1]
# test: select from into / if then select var / select var
explain begin
	declare x int;
	select id into x from test;
	if true then
		select x;
	end;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "recv                1      0      -1    ",
    "03": "var_set             0      0      1     ",
    "04": "free                1      0      0     ",
    "05": "bool                0      1      0     ",
    "06": "jntr                8      0      0     ",
    "07": "var                 0      0      0     ",
    "08": "var                 0      0      0     ",
    "09": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	select id into x from test;
	if true then
		select x;
	end;
	select x;
end;
[1]
# test: select from into / if then var := / select var
explain begin
	declare x int;
	select id into x from test;
	if true then
		x := 7;
	end;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "recv                1      0      -1    ",
    "03": "var_set             0      0      1     ",
    "04": "free                1      0      0     ",
    "05": "bool                0      1      0     ",
    "06": "jntr                9      0      0     ",
    "07": "int                 0      -      0     # 7",
    "08": "var_set             0      0      0     ",
    "09": "var                 0      0      0     ",
    "10": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	select id into x from test;
	if true then
		x := 7;
	end;
	select x;
end;
[7]
# test: select from into / if then := var / select var
explain begin
	declare x int;
	declare y int;
	select id into x from test;
	if true then
		y := x;
	end;
	select x, y;
end;
[{
  "main": {
    "00": "push_nulls          2      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "recv                1      0      -1    ",
    "03": "var_set             0      0      1     ",
    "04": "free                1      0      0     ",
    "05": "bool                0      1      0     ",
    "06": "jntr                9      0      0     ",
    "07": "var                 0      0      0     ",
    "08": "var_set             1      0      0     ",
    "09": "set                 0      2      0     ",
    "10": "push_var            0      0      0     ",
    "11": "push_var            1      0      0     ",
    "12": "set_add             0      0      0     ",
    "13": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	declare y int;
	select id into x from test;
	if true then
		y := x;
	end;
	select x, y;
end;
[[1, 1]]
# test: select from into / if .. else select var / select var
explain begin
	declare x int;
	select id into x from test;
	if false then else select x; end;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "recv                1      0      -1    ",
    "03": "var_set             0      0      1     ",
    "04": "free                1      0      0     ",
    "05": "bool                0      0      0     ",
    "06": "jntr                8      0      0     ",
    "07": "jmp                 9      0      0     ",
    "08": "var                 0      0      0     ",
    "09": "var                 0      0      0     ",
    "10": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	select id into x from test;
	if false then else select x; end;
	select x;
end;
[1]
explain begin
	declare x int;
	select id into x from test;
	if false then select 1; else select x; end;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "recv                1      0      -1    ",
    "03": "var_set             0      0      1     ",
    "04": "free                1      0      0     ",
    "05": "bool                0      0      0     ",
    "06": "jntr                9      0      0     ",
    "07": "int                 0      -      0     # 1",
    "08": "jmp                 10     0      0     ",
    "09": "var                 0      0      0     ",
    "10": "var                 0      0      0     ",
    "11": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	select id into x from test;
	if false then select 1; else select x; end;
	select x;
end;
[1]
# test: select from into / if .. else var := / select var
explain begin
	declare x int;
	select id into x from test;
	if false then else x := 7; end;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "recv                1      0      -1    ",
    "03": "var_set             0      0      1     ",
    "04": "free                1      0      0     ",
    "05": "bool                0      0      0     ",
    "06": "jntr                8      0      0     ",
    "07": "jmp                 10     0      0     ",
    "08": "int                 0      -      0     # 7",
    "09": "var_set             0      0      0     ",
    "10": "var                 0      0      0     ",
    "11": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	select id into x from test;
	if false then else x := 7; end;
	select x;
end;
[7]
explain begin
	declare x int;
	select id into x from test;
	if false then select 1; else x := 7; end;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "recv                1      0      -1    ",
    "03": "var_set             0      0      1     ",
    "04": "free                1      0      0     ",
    "05": "bool                0      0      0     ",
    "06": "jntr                9      0      0     ",
    "07": "int                 0      -      0     # 1",
    "08": "jmp                 11     0      0     ",
    "09": "int                 0      -      0     # 7",
    "10": "var_set             0      0      0     ",
    "11": "var                 0      0      0     ",
    "12": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	select id into x from test;
	if false then select 1; else x := 7; end;
	select x;
end;
[7]
# test: select from into / if .. else := var / select var
explain begin
	declare x int;
	declare y int;
	select id into x from test;
	if false then else y := x; end;
	select x, y;
end;
[{
  "main": {
    "00": "push_nulls          2      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "recv                1      0      -1    ",
    "03": "var_set             0      0      1     ",
    "04": "free                1      0      0     ",
    "05": "bool                0      0      0     ",
    "06": "jntr                8      0      0     ",
    "07": "jmp                 10     0      0     ",
    "08": "var                 0      0      0     ",
    "09": "var_set             1      0      0     ",
    "10": "set                 0      2      0     ",
    "11": "push_var            0      0      0     ",
    "12": "push_var            1      0      0     ",
    "13": "set_add             0      0      0     ",
    "14": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	declare y int;
	select id into x from test;
	if false then else y := x; end;
	select x, y;
end;
[[1, 1]]
explain begin
	declare x int;
	declare y int;
	select id into x from test;
	if false then select 1; else y := x; end;
	select x, y;
end;
[{
  "main": {
    "00": "push_nulls          2      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "recv                1      0      -1    ",
    "03": "var_set             0      0      1     ",
    "04": "free                1      0      0     ",
    "05": "bool                0      0      0     ",
    "06": "jntr                9      0      0     ",
    "07": "int                 0      -      0     # 1",
    "08": "jmp                 11     0      0     ",
    "09": "var                 0      0      0     ",
    "10": "var_set             1      0      0     ",
    "11": "set                 0      2      0     ",
    "12": "push_var            0      0      0     ",
    "13": "push_var            1      0      0     ",
    "14": "set_add             0      0      0     ",
    "15": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	declare y int;
	select id into x from test;
	if false then select 1; else y := x; end;
	select x, y;
end;
[[1, 1]]
# test: select from into / if if var / select var
explain begin
	declare x int;
	select id into x from test;
	if true then if x then end; end;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "recv                1      0      -1    ",
    "03": "var_set             0      0      1     ",
    "04": "free                1      0      0     ",
    "05": "bool                0      1      0     ",
    "06": "jntr                9      0      0     ",
    "07": "var                 0      0      0     ",
    "08": "jntr                9      0      0     ",
    "09": "var                 0      0      0     ",
    "10": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	select id into x from test;
	if true then if x then end; end;
	select x;
end;
[1]
# test: select from into / if then if select var / select var
explain begin
	declare x int;
	select id into x from test;
	if true then	
   		if true then
			select x;
		end;
	end;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "recv                1      0      -1    ",
    "03": "var_set             0      0      1     ",
    "04": "free                1      0      0     ",
    "05": "bool                0      1      0     ",
    "06": "jntr                10     0      0     ",
    "07": "bool                0      1      0     ",
    "08": "jntr                10     0      0     ",
    "09": "var                 0      0      0     ",
    "10": "var                 0      0      0     ",
    "11": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	select id into x from test;
	if true then	
   		if true then
			select x;
		end;
	end;
	select x;
end;
[1]
# test: select from into / if then if select into var / select var
explain begin
	declare x int;
	select id into x from test;
	if true then
		if true then
			select 123 into x;
		end;
	end;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "recv                1      0      -1    ",
    "03": "var_set             0      0      1     ",
    "04": "free                1      0      0     ",
    "05": "bool                0      1      0     ",
    "06": "jntr                11     0      0     ",
    "07": "bool                0      1      0     ",
    "08": "jntr                11     0      0     ",
    "09": "int                 0      -      0     # 123",
    "10": "var_set             0      0      0     ",
    "11": "var                 0      0      0     ",
    "12": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	select id into x from test;
	if true then
		if true then
			select 123 into x;
		end;
	end;
	select x;
end;
[123]
explain begin declare x int;
	declare y int;
	select id into x from test;
	if true then
		if true then
			select 123 into y;
			x := x + y;
		end;
	end;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          2      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "recv                1      0      -1    ",
    "03": "var_set             0      0      1     ",
    "04": "free                1      0      0     ",
    "05": "bool                0      1      0     ",
    "06": "jntr                15     0      0     ",
    "07": "bool                0      1      0     ",
    "08": "jntr                15     0      0     ",
    "09": "int                 0      -      0     # 123",
    "10": "var_set             1      0      0     ",
    "11": "var                 0      0      0     ",
    "12": "var                 1      1      0     ",
    "13": "addii               2      0      1     ",
    "14": "var_set             0      0      2     ",
    "15": "var                 0      0      0     ",
    "16": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin declare x int;
	declare y int;
	select id into x from test;
	if true then
		if true then
			select 123 into y;
			x := x + y;
		end;
	end;
	select x;
end;
[124]
# test: if select into var / select var
explain begin
	declare x int;
	if true then
		select * into x from test;
	end;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "bool                0      1      0     ",
    "02": "jntr                7      0      0     ",
    "03": "send_all            0      0      20    # public.test (select)",
    "04": "recv                1      0      -1    ",
    "05": "var_set             0      0      1     ",
    "06": "free                1      0      0     ",
    "07": "close               0      0      0     ",
    "08": "var                 0      0      0     ",
    "09": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	if true then
		select * into x from test;
	end;
	select x;
end;
[1]
# test: if select into var else select into var / select var
explain begin
	declare x int;
	if true then
		select id into x from test;
	else
		select 7 + id into x from test;
	end;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "bool                0      1      0     ",
    "02": "jntr                8      0      0     ",
    "03": "send_all            0      0      20    # public.test (select)",
    "04": "recv                1      0      -1    ",
    "05": "var_set             0      0      1     ",
    "06": "free                1      0      0     ",
    "07": "jmp                 12     0      0     ",
    "08": "send_all            0      0      64    # public.test (select)",
    "09": "recv                1      0      -1    ",
    "10": "var_set             0      0      1     ",
    "11": "free                1      0      0     ",
    "12": "close               0      0      0     ",
    "13": "var                 0      0      0     ",
    "14": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     ",
    "08": "set                 0      1      0     ",
    "09": "table_open_part     1      44     16    # public.test (primary)",
    "10": "int                 2      -      0     # 7",
    "11": "table_readi32       3      1      0     ",
    "12": "addii               4      2      3     ",
    "13": "push                4      0      0     ",
    "14": "set_add             0      0      0     ",
    "15": "table_next          1      10     0     ",
    "16": "free                1      0      0     ",
    "17": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	if true then
		select id into x from test;
	else
		select 7 + id into x from test;
	end;
	select x;
end;
[1]
explain begin
	declare x int;
	if false then
		select id into x from test;
	else
		select 7 + id into x from test;
	end;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "bool                0      0      0     ",
    "02": "jntr                8      0      0     ",
    "03": "send_all            0      0      20    # public.test (select)",
    "04": "recv                1      0      -1    ",
    "05": "var_set             0      0      1     ",
    "06": "free                1      0      0     ",
    "07": "jmp                 12     0      0     ",
    "08": "send_all            0      0      64    # public.test (select)",
    "09": "recv                1      0      -1    ",
    "10": "var_set             0      0      1     ",
    "11": "free                1      0      0     ",
    "12": "close               0      0      0     ",
    "13": "var                 0      0      0     ",
    "14": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     ",
    "08": "set                 0      1      0     ",
    "09": "table_open_part     1      44     16    # public.test (primary)",
    "10": "int                 2      -      0     # 7",
    "11": "table_readi32       3      1      0     ",
    "12": "addii               4      2      3     ",
    "13": "push                4      0      0     ",
    "14": "set_add             0      0      0     ",
    "15": "table_next          1      10     0     ",
    "16": "free                1      0      0     ",
    "17": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	if false then
		select id into x from test;
	else
		select 7 + id into x from test;
	end;
	select x;
end;
[8]
# test: select from into / if select into var else select into var / select var
explain begin
	declare x int;
	select id into x from test;
	if true then
		select 5 + id into x from test;
	else
		select 10 + id into x from test;
	end;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "send_all            0      0      20    # public.test (select)",
    "02": "recv                1      0      -1    ",
    "03": "var_set             0      0      1     ",
    "04": "free                1      0      0     ",
    "05": "bool                0      1      0     ",
    "06": "jntr                12     0      0     ",
    "07": "send_all            0      0      64    # public.test (select)",
    "08": "recv                1      0      -1    ",
    "09": "var_set             0      0      1     ",
    "10": "free                1      0      0     ",
    "11": "jmp                 16     0      0     ",
    "12": "send_all            0      0      108   # public.test (select)",
    "13": "recv                1      0      -1    ",
    "14": "var_set             0      0      1     ",
    "15": "free                1      0      0     ",
    "16": "close               0      0      0     ",
    "17": "var                 0      0      0     ",
    "18": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     ",
    "08": "set                 0      1      0     ",
    "09": "table_open_part     1      44     16    # public.test (primary)",
    "10": "int                 2      -      0     # 5",
    "11": "table_readi32       3      1      0     ",
    "12": "addii               4      2      3     ",
    "13": "push                4      0      0     ",
    "14": "set_add             0      0      0     ",
    "15": "table_next          1      10     0     ",
    "16": "free                1      0      0     ",
    "17": "ret                 0      0      -     ",
    "18": "set                 0      1      0     ",
    "19": "table_open_part     1      88     26    # public.test (primary)",
    "20": "int                 2      -      0     # 10",
    "21": "table_readi32       3      1      0     ",
    "22": "addii               4      2      3     ",
    "23": "push                4      0      0     ",
    "24": "set_add             0      0      0     ",
    "25": "table_next          1      20     0     ",
    "26": "free                1      0      0     ",
    "27": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	select id into x from test;
	if true then
		select 5 + id into x from test;
	else
		select 10 + id into x from test;
	end;
	select x;
end;
[6]
explain begin
	declare x int;
	select id into x from test;
	if false then
		select 5 + id into x from test;
	else
		select 10 + id into x from test;
	end;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "send_all            0      0      20    # public.test (select)",
    "02": "recv                1      0      -1    ",
    "03": "var_set             0      0      1     ",
    "04": "free                1      0      0     ",
    "05": "bool                0      0      0     ",
    "06": "jntr                12     0      0     ",
    "07": "send_all            0      0      64    # public.test (select)",
    "08": "recv                1      0      -1    ",
    "09": "var_set             0      0      1     ",
    "10": "free                1      0      0     ",
    "11": "jmp                 16     0      0     ",
    "12": "send_all            0      0      108   # public.test (select)",
    "13": "recv                1      0      -1    ",
    "14": "var_set             0      0      1     ",
    "15": "free                1      0      0     ",
    "16": "close               0      0      0     ",
    "17": "var                 0      0      0     ",
    "18": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     ",
    "08": "set                 0      1      0     ",
    "09": "table_open_part     1      44     16    # public.test (primary)",
    "10": "int                 2      -      0     # 5",
    "11": "table_readi32       3      1      0     ",
    "12": "addii               4      2      3     ",
    "13": "push                4      0      0     ",
    "14": "set_add             0      0      0     ",
    "15": "table_next          1      10     0     ",
    "16": "free                1      0      0     ",
    "17": "ret                 0      0      -     ",
    "18": "set                 0      1      0     ",
    "19": "table_open_part     1      88     26    # public.test (primary)",
    "20": "int                 2      -      0     # 10",
    "21": "table_readi32       3      1      0     ",
    "22": "addii               4      2      3     ",
    "23": "push                4      0      0     ",
    "24": "set_add             0      0      0     ",
    "25": "table_next          1      20     0     ",
    "26": "free                1      0      0     ",
    "27": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	select id into x from test;
	if false then
		select 5 + id into x from test;
	else
		select 10 + id into x from test;
	end;
	select x;
end;
[11]
# test: select from into / for in var
explain begin
	declare x int;
	select id into x from test;
	for it in x do end;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "recv                1      0      -1    ",
    "03": "var_set             0      0      1     ",
    "04": "free                1      0      0     ",
    "05": "var                 0      0      0     ",
    "06": "push                0      0      0     ",
    "07": "set                 0      1      0     ",
    "08": "set_add             0      0      0     ",
    "09": "store_open          1      0      11    ",
    "10": "store_next          1      10     0     ",
    "11": "free                1      0      0     ",
    "12": "free                0      0      0     ",
    "13": "ret                 -1     0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	select id into x from test;
	for it in x do end;
end;
# test: select from into / for do select var
explain begin
	declare x int;
	select id into x from test;
	for it in ([1,2,3]) do
		select x;
	end;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "recv                1      0      -1    ",
    "03": "var_set             0      0      1     ",
    "04": "free                1      0      0     ",
    "05": "json                0      44     0     ",
    "06": "json_open           1      0      9     ",
    "07": "var                 2      0      0     ",
    "08": "json_next           1      7      0     ",
    "09": "free                0      0      0     ",
    "10": "ret                 -1     0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	select id into x from test;
	for it in ([1,2,3]) do
		select x;
	end;
end;
# test: select from into / for do var :=
explain begin
	declare x int;
	select id into x from test;
	for it in ([1,2,3]) do
		x := it::int;
	end;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "recv                1      0      -1    ",
    "03": "var_set             0      0      1     ",
    "04": "free                1      0      0     ",
    "05": "json                0      44     0     ",
    "06": "json_open           1      0      12    ",
    "07": "json_read           2      1      0     ",
    "08": "push                2      0      0     ",
    "09": "call                2      -      1     # public.int()",
    "10": "var_set             0      0      2     ",
    "11": "json_next           1      7      0     ",
    "12": "free                0      0      0     ",
    "13": "var                 0      0      0     ",
    "14": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	select id into x from test;
	for it in ([1,2,3]) do
		x := it::int;
	end;
	select x;
end;
[3]
explain begin
	declare x int;
	declare y int;
	select id into x from test;
	for it in ([1,2,3]) do
		y := x + it::int;
	end;
	select x, y;
end;
[{
  "main": {
    "00": "push_nulls          2      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "recv                1      0      -1    ",
    "03": "var_set             0      0      1     ",
    "04": "free                1      0      0     ",
    "05": "json                0      44     0     ",
    "06": "json_open           1      0      14    ",
    "07": "var                 2      0      0     ",
    "08": "json_read           3      1      0     ",
    "09": "push                3      0      0     ",
    "10": "call                3      -      1     # public.int()",
    "11": "addii               4      2      3     ",
    "12": "var_set             1      0      4     ",
    "13": "json_next           1      7      0     ",
    "14": "free                0      0      0     ",
    "15": "set                 0      2      0     ",
    "16": "push_var            0      0      0     ",
    "17": "push_var            1      0      0     ",
    "18": "set_add             0      0      0     ",
    "19": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	declare y int;
	select id into x from test;
	for it in ([1,2,3]) do
		y := x + it::int;
	end;
	select x, y;
end;
[[1, 4]]
# test: select from into / for / select var
explain begin
	declare x int;
	select id into x from test;
	for it in ([1,2,3]) do
		if true then end;
	end;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "json                1      44     0     ",
    "03": "json_open           2      1      7     ",
    "04": "bool                3      1      0     ",
    "05": "jntr                6      3      0     ",
    "06": "json_next           2      4      0     ",
    "07": "free                1      0      0     ",
    "08": "recv                1      0      -1    ",
    "09": "var_set             0      0      1     ",
    "10": "free                1      0      0     ",
    "11": "var                 0      0      0     ",
    "12": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	select id into x from test;
	for it in ([1,2,3]) do
		if true then end;
	end;
	select x;
end;
[1]
# test: select from into / for if var
explain begin
	declare x int;
	select id into x from test;
	for it in ([1,2,3]) do
		if x then end;
	end;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "recv                1      0      -1    ",
    "03": "var_set             0      0      1     ",
    "04": "free                1      0      0     ",
    "05": "json                0      44     0     ",
    "06": "json_open           1      0      10    ",
    "07": "var                 2      0      0     ",
    "08": "jntr                9      2      0     ",
    "09": "json_next           1      7      0     ",
    "10": "free                0      0      0     ",
    "11": "ret                 -1     0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	select id into x from test;
	for it in ([1,2,3]) do
		if x then end;
	end;
end;
# test: select from into / for if then var
explain begin
	declare x int;
	select id into x from test;
	for it in ([1,2,3]) do
		if true then select x; end;
	end;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "recv                1      0      -1    ",
    "03": "var_set             0      0      1     ",
    "04": "free                1      0      0     ",
    "05": "json                0      44     0     ",
    "06": "json_open           1      0      11    ",
    "07": "bool                2      1      0     ",
    "08": "jntr                10     2      0     ",
    "09": "var                 2      0      0     ",
    "10": "json_next           1      7      0     ",
    "11": "free                0      0      0     ",
    "12": "ret                 -1     0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	select id into x from test;
	for it in ([1,2,3]) do
		if true then select x; end;
	end;
end;
explain begin
	declare x int;
	declare y int;
	select id into x from test;
	for it in ([1,2,3]) do
		if true then
			y := x + it::int;
		end;
	end;
	select x, y;
end;
[{
  "main": {
    "00": "push_nulls          2      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "recv                1      0      -1    ",
    "03": "var_set             0      0      1     ",
    "04": "free                1      0      0     ",
    "05": "json                0      44     0     ",
    "06": "json_open           1      0      16    ",
    "07": "bool                2      1      0     ",
    "08": "jntr                15     2      0     ",
    "09": "var                 2      0      0     ",
    "10": "json_read           3      1      0     ",
    "11": "push                3      0      0     ",
    "12": "call                3      -      1     # public.int()",
    "13": "addii               4      2      3     ",
    "14": "var_set             1      0      4     ",
    "15": "json_next           1      7      0     ",
    "16": "free                0      0      0     ",
    "17": "set                 0      2      0     ",
    "18": "push_var            0      0      0     ",
    "19": "push_var            1      0      0     ",
    "20": "set_add             0      0      0     ",
    "21": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	declare y int;
	select id into x from test;
	for it in ([1,2,3]) do
		if true then
			y := x + it::int;
		end;
	end;
	select x, y;
end;
[[1, 4]]
explain begin
	declare x int := 0;
	for it in ([1,2,3]) do
		if true then
			x := x + it::int;
		end;
	end;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "int                 0      -      0     # 0",
    "02": "var_set             0      0      0     ",
    "03": "json                0      0      0     ",
    "04": "json_open           1      0      14    ",
    "05": "bool                2      1      0     ",
    "06": "jntr                13     2      0     ",
    "07": "var                 2      0      0     ",
    "08": "json_read           3      1      0     ",
    "09": "push                3      0      0     ",
    "10": "call                3      -      1     # public.int()",
    "11": "addii               4      2      3     ",
    "12": "var_set             0      0      4     ",
    "13": "json_next           1      5      0     ",
    "14": "free                0      0      0     ",
    "15": "var                 0      0      0     ",
    "16": "ret                 0      0      -     "
  },
  "access": []
}]
begin
	declare x int := 0;
	for it in ([1,2,3]) do
		if true then
			x := x + it::int;
		end;
	end;
	select x;
end;
[6]
explain begin
	declare x int := 0;
	for it in ([1,2,3]) do
		x := x + it::int;
	end;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "int                 0      -      0     # 0",
    "02": "var_set             0      0      0     ",
    "03": "json                0      0      0     ",
    "04": "json_open           1      0      12    ",
    "05": "var                 2      0      0     ",
    "06": "json_read           3      1      0     ",
    "07": "push                3      0      0     ",
    "08": "call                3      -      1     # public.int()",
    "09": "addii               4      2      3     ",
    "10": "var_set             0      0      4     ",
    "11": "json_next           1      5      0     ",
    "12": "free                0      0      0     ",
    "13": "var                 0      0      0     ",
    "14": "ret                 0      0      -     "
  },
  "access": []
}]
begin
	declare x int := 0;
	for it in ([1,2,3]) do
		x := x + it::int;
	end;
	select x;
end;
[6]
# test: select from into / for if if then var
explain begin
	declare x int;
	declare y int;
	select id into x from test;
	for it in ([1,2,3]) do
		if true then
			if true then
				y := x + it::int;
			end;
		end;
	end;
	select x, y;
end;
[{
  "main": {
    "00": "push_nulls          2      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "recv                1      0      -1    ",
    "03": "var_set             0      0      1     ",
    "04": "free                1      0      0     ",
    "05": "json                0      44     0     ",
    "06": "json_open           1      0      18    ",
    "07": "bool                2      1      0     ",
    "08": "jntr                17     2      0     ",
    "09": "bool                2      1      0     ",
    "10": "jntr                17     2      0     ",
    "11": "var                 2      0      0     ",
    "12": "json_read           3      1      0     ",
    "13": "push                3      0      0     ",
    "14": "call                3      -      1     # public.int()",
    "15": "addii               4      2      3     ",
    "16": "var_set             1      0      4     ",
    "17": "json_next           1      7      0     ",
    "18": "free                0      0      0     ",
    "19": "set                 0      2      0     ",
    "20": "push_var            0      0      0     ",
    "21": "push_var            1      0      0     ",
    "22": "set_add             0      0      0     ",
    "23": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	declare y int;
	select id into x from test;
	for it in ([1,2,3]) do
		if true then
			if true then
				y := x + it::int;
			end;
		end;
	end;
	select x, y;
end;
[[1, 4]]
# test: select from into / while var do var
explain begin
	declare x int;
	select id into x from test;
	while x do
		x := x - 1;
	end;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "recv                1      0      -1    ",
    "03": "var_set             0      0      1     ",
    "04": "free                1      0      0     ",
    "05": "var                 0      0      0     ",
    "06": "jntr                12     0      0     ",
    "07": "var                 0      0      0     ",
    "08": "int                 1      -      0     # 1",
    "09": "subii               2      0      1     ",
    "10": "var_set             0      0      2     ",
    "11": "jmp                 5      0      0     ",
    "12": "ret                 -1     0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	select id into x from test;
	while x do
		x := x - 1;
	end;
end;
# test: select from into / while do var :=
explain begin
	declare x int;
	declare y int;
	select id into x from test;
	while x do
		y := x + 1;
		x := x - 1;
	end;
	select x, y;
end;
[{
  "main": {
    "00": "push_nulls          2      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "recv                1      0      -1    ",
    "03": "var_set             0      0      1     ",
    "04": "free                1      0      0     ",
    "05": "var                 0      0      0     ",
    "06": "jntr                16     0      0     ",
    "07": "var                 0      0      0     ",
    "08": "int                 1      -      0     # 1",
    "09": "addii               2      0      1     ",
    "10": "var_set             1      0      2     ",
    "11": "var                 0      0      0     ",
    "12": "int                 1      -      0     # 1",
    "13": "subii               2      0      1     ",
    "14": "var_set             0      0      2     ",
    "15": "jmp                 5      0      0     ",
    "16": "set                 0      2      0     ",
    "17": "push_var            0      0      0     ",
    "18": "push_var            1      0      0     ",
    "19": "set_add             0      0      0     ",
    "20": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	declare y int;
	select id into x from test;
	while x do
		y := x + 1;
		x := x - 1;
	end;
	select x, y;
end;
[[0, 2]]
# test: while / insert
explain begin
	declare x int := 4;
	while x < 8 do
		insert into test values (x);
		x := x + 1;
	end;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "int                 0      -      0     # 4",
    "02": "var_set             0      0      0     ",
    "03": "var                 0      0      0     ",
    "04": "int                 1      -      0     # 8",
    "05": "ltii                2      0      1     ",
    "06": "jntr                15     2      0     ",
    "07": "push_var            0      0      1     ",
    "08": "set_ptr             1      -      0     ",
    "09": "send_shard          0      1      1     # public.test (insert)",
    "10": "var                 0      0      0     ",
    "11": "int                 1      -      0     # 1",
    "12": "addii               2      0      1     ",
    "13": "var_set             0      0      2     ",
    "14": "jmp                 3      0      0     ",
    "15": "close               0      0      0     ",
    "16": "ret                 -1     0      -     "
  },
  "pushdown": {
    "00": "insert              -      0      0     # public.test",
    "01": "ret                 -1     0      -     "
  },
  "access": [["public.test", "rw"]]
}]
begin
	declare x int := 4;
	while x < 8 do
		insert into test values (x);
		x := x + 1;
	end;
end;
explain begin
	declare x int := 8;
	while x < 10 do
		insert into test values (x);
		x := x + 1;
	end;
	select * from test;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "int                 0      -      0     # 8",
    "02": "var_set             0      0      0     ",
    "03": "var                 0      0      0     ",
    "04": "int                 1      -      0     # 10",
    "05": "ltii                2      0      1     ",
    "06": "jntr                15     2      0     ",
    "07": "push_var            0      0      1     ",
    "08": "set_ptr             1      -      0     ",
    "09": "send_shard          0      1      1     # public.test (insert)",
    "10": "var                 0      0      0     ",
    "11": "int                 1      -      0     # 1",
    "12": "addii               2      0      1     ",
    "13": "var_set             0      0      2     ",
    "14": "jmp                 3      0      0     ",
    "15": "send_all            0      0      44    # public.test (select, closing)",
    "16": "recv                1      0      -1    ",
    "17": "ret                 1      0      -     "
  },
  "pushdown": {
    "00": "insert              -      0      0     # public.test",
    "01": "ret                 -1     0      -     ",
    "02": "set                 0      1      0     ",
    "03": "table_open_part     1      24     8     # public.test (primary)",
    "04": "table_readi32       2      1      0     ",
    "05": "push                2      0      0     ",
    "06": "set_add             0      0      0     ",
    "07": "table_next          1      4      0     ",
    "08": "free                1      0      0     ",
    "09": "ret                 0      0      -     "
  },
  "access": [["public.test", "rw"]]
}]
begin
	declare x int := 8;
	while x < 10 do
		insert into test values (x);
		x := x + 1;
	end;
	select * from test;
end;
[1, 2, 3, 4, 5, 6, 7, 8, 9]
# test: select from into / while break
explain begin
	declare x int;
	select id into x from test;
	while true do
		break;
	end;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "bool                1      1      0     ",
    "03": "jntr                6      1      0     ",
    "04": "jmp                 6      0      0     ",
    "05": "jmp                 2      0      0     ",
    "06": "recv                1      0      -1    ",
    "07": "var_set             0      0      1     ",
    "08": "free                1      0      0     ",
    "09": "var                 0      0      0     ",
    "10": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	select id into x from test;
	while true do
		break;
	end;
	select x;
end;
[1]
# test: select from into / while if break
explain begin
	declare x int;
	select id into x from test;
	while true do
		if true then
			break;
		end;
	end;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "bool                1      1      0     ",
    "03": "jntr                8      1      0     ",
    "04": "bool                1      1      0     ",
    "05": "jntr                7      1      0     ",
    "06": "jmp                 8      0      0     ",
    "07": "jmp                 2      0      0     ",
    "08": "recv                1      0      -1    ",
    "09": "var_set             0      0      1     ",
    "10": "free                1      0      0     ",
    "11": "var                 0      0      0     ",
    "12": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	select id into x from test;
	while true do
		if true then
			break;
		end;
	end;
	select x;
end;
[1]
# test: while select from into / break
explain begin
	declare x int;
	while true do
		select id into x from test;
		break;
		x := null;
	end;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "bool                0      1      0     ",
    "02": "jntr                11     0      0     ",
    "03": "send_all            0      0      20    # public.test (select)",
    "04": "recv                1      0      -1    ",
    "05": "var_set             0      0      1     ",
    "06": "free                1      0      0     ",
    "07": "jmp                 11     0      0     ",
    "08": "null                0      0      0     ",
    "09": "var_set             0      0      0     ",
    "10": "jmp                 1      0      0     ",
    "11": "close               0      0      0     ",
    "12": "var                 0      0      0     ",
    "13": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	while true do
		select id into x from test;
		break;
		x := null;
	end;
	select x;
end;
[1]
# test: while select from into / if break
explain begin
	declare x int;
	while true do
		select id into x from test;
		if true then
			break;
		end;
		x := null;
	end;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "bool                0      1      0     ",
    "02": "jntr                13     0      0     ",
    "03": "send_all            0      0      20    # public.test (select)",
    "04": "recv                1      0      -1    ",
    "05": "var_set             0      0      1     ",
    "06": "free                1      0      0     ",
    "07": "bool                0      1      0     ",
    "08": "jntr                10     0      0     ",
    "09": "jmp                 13     0      0     ",
    "10": "null                0      0      0     ",
    "11": "var_set             0      0      0     ",
    "12": "jmp                 1      0      0     ",
    "13": "close               0      0      0     ",
    "14": "var                 0      0      0     ",
    "15": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	while true do
		select id into x from test;
		if true then
			break;
		end;
		x := null;
	end;
	select x;
end;
[1]
# test: while select from into / if if break
explain begin
	declare x int;
	while true do
		select id into x from test;
		if true then
			if true then
				break;
			end;
		end;
		x := null;
	end;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "bool                0      1      0     ",
    "02": "jntr                15     0      0     ",
    "03": "send_all            0      0      20    # public.test (select)",
    "04": "recv                1      0      -1    ",
    "05": "var_set             0      0      1     ",
    "06": "free                1      0      0     ",
    "07": "bool                0      1      0     ",
    "08": "jntr                12     0      0     ",
    "09": "bool                0      1      0     ",
    "10": "jntr                12     0      0     ",
    "11": "jmp                 15     0      0     ",
    "12": "null                0      0      0     ",
    "13": "var_set             0      0      0     ",
    "14": "jmp                 1      0      0     ",
    "15": "close               0      0      0     ",
    "16": "var                 0      0      0     ",
    "17": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	while true do
		select id into x from test;
		if true then
			if true then
				break;
			end;
		end;
		x := null;
	end;
	select x;
end;
[1]
# test: while select from into / if if continue
explain begin
	declare i int := 0;
	declare x int;

	while true do
		if i = 3 then
			break;
		end;
		i := i + 1;
		select id into x from test;
		if true then
			if true then
				continue;
			end;
		end;
		x := null;
	end;
	select i, x;
end;
[{
  "main": {
    "00": "push_nulls          2      0      0     ",
    "01": "int                 0      -      0     # 0",
    "02": "var_set             0      0      0     ",
    "03": "bool                0      1      0     ",
    "04": "jntr                26     0      0     ",
    "05": "var                 0      0      0     ",
    "06": "int                 1      -      0     # 3",
    "07": "equii               2      0      1     ",
    "08": "jntr                10     2      0     ",
    "09": "jmp                 26     0      0     ",
    "10": "var                 0      0      0     ",
    "11": "int                 1      -      0     # 1",
    "12": "addii               2      0      1     ",
    "13": "var_set             0      0      2     ",
    "14": "send_all            0      0      20    # public.test (select)",
    "15": "recv                1      0      -1    ",
    "16": "var_set             1      0      1     ",
    "17": "free                1      0      0     ",
    "18": "bool                0      1      0     ",
    "19": "jntr                23     0      0     ",
    "20": "bool                0      1      0     ",
    "21": "jntr                23     0      0     ",
    "22": "jmp                 3      0      0     ",
    "23": "null                0      0      0     ",
    "24": "var_set             1      0      0     ",
    "25": "jmp                 3      0      0     ",
    "26": "close               0      0      0     ",
    "27": "set                 0      2      0     ",
    "28": "push_var            0      0      0     ",
    "29": "push_var            1      0      0     ",
    "30": "set_add             0      0      0     ",
    "31": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare i int := 0;
	declare x int;

	while true do
		if i = 3 then
			break;
		end;
		i := i + 1;
		select id into x from test;
		if true then
			if true then
				continue;
			end;
		end;
		x := null;
	end;
	select i, x;
end;
[[3, 1]]
# test: select from into / for break
explain begin
	declare x int;
	select id into x from test;
	for i in ([]) do
		break;
	end;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "json                1      44     0     ",
    "03": "json_open           2      1      6     ",
    "04": "jmp                 6      0      0     ",
    "05": "json_next           2      4      0     ",
    "06": "free                1      0      0     ",
    "07": "recv                1      0      -1    ",
    "08": "var_set             0      0      1     ",
    "09": "free                1      0      0     ",
    "10": "var                 0      0      0     ",
    "11": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	select id into x from test;
	for i in ([]) do
		break;
	end;
	select x;
end;
[1]
# test: select from into / for if break
explain begin
	declare x int;
	select id into x from test;
	for i in ([]) do
		if true then
			break;
		end;
	end;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "send_all            0      0      20    # public.test (select, closing)",
    "02": "json                1      44     0     ",
    "03": "json_open           2      1      8     ",
    "04": "bool                3      1      0     ",
    "05": "jntr                7      3      0     ",
    "06": "jmp                 8      0      0     ",
    "07": "json_next           2      4      0     ",
    "08": "free                1      0      0     ",
    "09": "recv                1      0      -1    ",
    "10": "var_set             0      0      1     ",
    "11": "free                1      0      0     ",
    "12": "var                 0      0      0     ",
    "13": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 0      1      0     ",
    "01": "table_open_part     1      0      6     # public.test (primary)",
    "02": "table_readi32       2      1      0     ",
    "03": "push                2      0      0     ",
    "04": "set_add             0      0      0     ",
    "05": "table_next          1      2      0     ",
    "06": "free                1      0      0     ",
    "07": "ret                 0      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	select id into x from test;
	for i in ([]) do
		if true then
			break;
		end;
	end;
	select x;
end;
[1]
# test: for select from into / break
explain begin
	declare x int;
	for i in ([1]) do
		select id into x from test;
		break;
	end;
	select x;
end;
[{
  "main": {
    "00": "push_nulls          1      0      0     ",
    "01": "json                0      0      0     ",
    "02": "json_open           1      0      9     ",
    "03": "send_all            2      0      23    # public.test (select)",
    "04": "recv                3      2      -1    ",
    "05": "var_set             0      0      3     ",
    "06": "free                3      0      0     ",
    "07": "jmp                 9      0      0     ",
    "08": "json_next           1      3      0     ",
    "09": "free                0      0      0     ",
    "10": "close               0      0      0     ",
    "11": "var                 0      0      0     ",
    "12": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 2      1      0     ",
    "01": "table_open_part     3      3      6     # public.test (primary)",
    "02": "table_readi32       4      3      0     ",
    "03": "push                4      0      0     ",
    "04": "set_add             2      0      0     ",
    "05": "table_next          3      2      0     ",
    "06": "free                3      0      0     ",
    "07": "ret                 2      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare x int;
	for i in ([1]) do
		select id into x from test;
		break;
	end;
	select x;
end;
[1]
# test: for select from into / if break
explain begin
	declare p int;
	declare x int;
	for i in ([1]) do
		select id into x from test;
		if true then
			break;
		end;
		p := 123;
	end;
	select x, p;
end;
[{
  "main": {
    "00": "push_nulls          2      0      0     ",
    "01": "json                0      0      0     ",
    "02": "json_open           1      0      13    ",
    "03": "send_all            2      0      23    # public.test (select)",
    "04": "recv                3      2      -1    ",
    "05": "var_set             1      0      3     ",
    "06": "free                3      0      0     ",
    "07": "bool                2      1      0     ",
    "08": "jntr                10     2      0     ",
    "09": "jmp                 13     0      0     ",
    "10": "int                 2      -      0     # 123",
    "11": "var_set             0      0      2     ",
    "12": "json_next           1      3      0     ",
    "13": "free                0      0      0     ",
    "14": "close               0      0      0     ",
    "15": "set                 0      2      0     ",
    "16": "push_var            1      0      0     ",
    "17": "push_var            0      0      0     ",
    "18": "set_add             0      0      0     ",
    "19": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 2      1      0     ",
    "01": "table_open_part     3      3      6     # public.test (primary)",
    "02": "table_readi32       4      3      0     ",
    "03": "push                4      0      0     ",
    "04": "set_add             2      0      0     ",
    "05": "table_next          3      2      0     ",
    "06": "free                3      0      0     ",
    "07": "ret                 2      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare p int;
	declare x int;
	for i in ([1]) do
		select id into x from test;
		if true then
			break;
		end;
		p := 123;
	end;
	select x, p;
end;
[[1, null]]
# test: for select from into / if continue
explain begin
	declare p int;
	declare x int;
	for i in ([1, 2]) do
		select id into x from test;
		if true then
			continue;
		end;
		p := 123;
	end;
	select x, p;
end;
[{
  "main": {
    "00": "push_nulls          2      0      0     ",
    "01": "json                0      0      0     ",
    "02": "json_open           1      0      13    ",
    "03": "send_all            2      0      24    # public.test (select)",
    "04": "recv                3      2      -1    ",
    "05": "var_set             1      0      3     ",
    "06": "free                3      0      0     ",
    "07": "bool                2      1      0     ",
    "08": "jntr                10     2      0     ",
    "09": "jmp                 12     0      0     ",
    "10": "int                 2      -      0     # 123",
    "11": "var_set             0      0      2     ",
    "12": "json_next           1      3      0     ",
    "13": "free                0      0      0     ",
    "14": "close               0      0      0     ",
    "15": "set                 0      2      0     ",
    "16": "push_var            1      0      0     ",
    "17": "push_var            0      0      0     ",
    "18": "set_add             0      0      0     ",
    "19": "ret                 0      0      -     "
  },
  "pushdown": {
    "00": "set                 2      1      0     ",
    "01": "table_open_part     3      4      6     # public.test (primary)",
    "02": "table_readi32       4      3      0     ",
    "03": "push                4      0      0     ",
    "04": "set_add             2      0      0     ",
    "05": "table_next          3      2      0     ",
    "06": "free                3      0      0     ",
    "07": "ret                 2      0      -     "
  },
  "access": [["public.test", "ro"]]
}]
begin
	declare p int;
	declare x int;
	for i in ([1, 2]) do
		select id into x from test;
		if true then
			continue;
		end;
		p := 123;
	end;
	select x, p;
end;
[[1, null]]
drop table test;
disconnect S0;
close E0;
