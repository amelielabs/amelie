open E0 "uuid": "00000000-0000-0000-0000-000000000000", "listen": [{ "host": "127.0.0.1", "port": 3485 }];
connect E0 S0 127.0.0.1:3485;
# test: case expr
select case;
{"msg": "select case❰;❱ ⟵ bad expression"}
select case 1;
{"msg": "select case 1❰;❱ ⟵ WHEN, ELSE or END expected"}
select case 1 then;
{"msg": "select case 1 ❰then❱ ⟵ WHEN, ELSE or END expected"}
select case 1 then 1;
{"msg": "select case 1 ❰then❱ ⟵ WHEN, ELSE or END expected"}
select case 1 when 1 then 1;
{"msg": "select case 1 when 1 then 1❰;❱ ⟵ WHEN, ELSE or END expected"}
select case 1 when 1 then 1 end;
[1]
select (case 1 when 1 then 1 end)::type;
["int"]
explain select case 1 when 1 then 1 end;
[{
  "main": {
    "00": "jmp                 2      0      0     ",
    "01": "jmp                 11     0      0     ",
    "02": "int                 1      -      0     # 1",
    "03": "int                 2      -      0     # 1",
    "04": "equii               3      1      2     ",
    "05": "jntr                9      3      0     ",
    "06": "int                 1      -      0     # 1",
    "07": "mov                 0      1      0     ",
    "08": "jmp                 1      0      0     ",
    "09": "null                1      0      0     ",
    "10": "mov                 0      1      0     ",
    "11": "nop                 0      0      0     ",
    "12": "ret                 0      0      -     "
  },
  "access": []
}]
select case 0 when 1 then 1 when 2 then 2 end;
[null]
select (case 0 when 1 then 1 when 2 then 2 end)::type;
["null"]
explain select case 0 when 1 then 1 when 2 then 2 end;
[{
  "main": {
    "00": "jmp                 2      0      0     ",
    "01": "jmp                 18     0      0     ",
    "02": "int                 1      -      0     # 0",
    "03": "int                 2      -      0     # 1",
    "04": "equii               3      1      2     ",
    "05": "jntr                9      3      0     ",
    "06": "int                 1      -      0     # 1",
    "07": "mov                 0      1      0     ",
    "08": "jmp                 1      0      0     ",
    "09": "int                 1      -      0     # 0",
    "10": "int                 2      -      0     # 2",
    "11": "equii               3      1      2     ",
    "12": "jntr                16     3      0     ",
    "13": "int                 1      -      0     # 2",
    "14": "mov                 0      1      0     ",
    "15": "jmp                 1      0      0     ",
    "16": "null                1      0      0     ",
    "17": "mov                 0      1      0     ",
    "18": "nop                 0      0      0     ",
    "19": "ret                 0      0      -     "
  },
  "access": []
}]
select case 0 when 1 then 1 when 2 then 2 else 'else' end;
{"msg": "select case 0 when 1 then 1 when 2 then 2 else ❰'else'❱ ⟵ CASE expression type mismatch"}
select (case 0 when 1 then 1 when 2 then 2 else 'else' end)::type;
{"msg": "select (case 0 when 1 then 1 when 2 then 2 else ❰'else'❱ ⟵ CASE expression type mismatch"}
explain select case 0 when 1 then 1 when 2 then 2 else 'else' end;
{"msg": "explain select case 0 when 1 then 1 when 2 then 2 else ❰'else'❱ ⟵ CASE expression type mismatch"}
select case [1,2,3] when [1,0] then 1 when [1,2,3] then 2 end;
[2]
select case [1,2,3] when [1,0] then 1 when [1,2,3,4] then 2 end;
[null]
select case [1,2,3] when [1,0] then 1 when [1,2,3,4] then 2 else 3 end;
[3]
select case [1,2,3] when [1,0] then 1 when [1,2,3,4] then 2 else 3 else 4 end;
{"msg": "select case [1,2,3] when [1,0] then 1 when [1,2,3,4] then 2 else 3 ❰else❱ ⟵ ELSE is redefined"}
select case [1,2,3] when [1,0] then 1 when [1,2,3,4] then 2 else 3 else 4 when null then null end;
{"msg": "select case [1,2,3] when [1,0] then 1 when [1,2,3,4] then 2 else 3 ❰else❱ ⟵ ELSE is redefined"}
select case null when [1,0] then 1 when [1,2,3,4] then 2 else 3 else 4 when null then null end;
{"msg": "select case null when [1,0] then 1 when [1,2,3,4] then 2 else 3 ❰else❱ ⟵ ELSE is redefined"}
select case null when [1,0] then 1 when [1,2,3,4] then 2 else 3 when null then null end;
[3]
explain select case null when [1,0] then 1 when [1,2,3,4] then 2 else 3 when null then null end;
[{
  "main": {
    "00": "jmp                 2      0      0     ",
    "01": "jmp                 25     0      0     ",
    "02": "null                1      0      0     ",
    "03": "json                2      0      0     ",
    "04": "nullop              3      1      2     ",
    "05": "jntr                9      3      0     ",
    "06": "int                 1      -      0     # 1",
    "07": "mov                 0      1      0     ",
    "08": "jmp                 1      0      0     ",
    "09": "null                1      0      0     ",
    "10": "json                2      4      0     ",
    "11": "nullop              3      1      2     ",
    "12": "jntr                16     3      0     ",
    "13": "int                 1      -      0     # 2",
    "14": "mov                 0      1      0     ",
    "15": "jmp                 1      0      0     ",
    "16": "null                1      0      0     ",
    "17": "null                2      0      0     ",
    "18": "nullop              3      1      2     ",
    "19": "jntr                23     3      0     ",
    "20": "null                1      0      0     ",
    "21": "mov                 0      1      0     ",
    "22": "jmp                 1      0      0     ",
    "23": "int                 1      -      0     # 3",
    "24": "mov                 0      1      0     ",
    "25": "nop                 0      0      0     ",
    "26": "ret                 0      0      -     "
  },
  "access": []
}]
select case end;
{"msg": "select case ❰end❱ ⟵ WHEN or ELSE expected"}
select case else end;
{"msg": "select case else ❰end❱ ⟵ bad expression"}
select case else 1 end;
[1]
select case null when 1 then 1 when null then 2 else 3 end;
[3]
# test: case
select case;
{"msg": "select case❰;❱ ⟵ bad expression"}
select case when 1;
{"msg": "select case when 1❰;❱ ⟵ THEN expected"}
select case when 1 then 1;
{"msg": "select case when 1 then 1❰;❱ ⟵ WHEN, ELSE or END expected"}
select case when 1 then 1 end;
[1]
explain select case when 1 then 1 end;
[{
  "main": {
    "00": "jmp                 2      0      0     ",
    "01": "jmp                 9      0      0     ",
    "02": "int                 1      -      0     # 1",
    "03": "jntr                7      1      0     ",
    "04": "int                 2      -      0     # 1",
    "05": "mov                 0      2      0     ",
    "06": "jmp                 1      0      0     ",
    "07": "null                1      0      0     ",
    "08": "mov                 0      1      0     ",
    "09": "nop                 0      0      0     ",
    "10": "ret                 0      0      -     "
  },
  "access": []
}]
select case else;
{"msg": "select case else❰;❱ ⟵ bad expression"}
select case else end;
{"msg": "select case else ❰end❱ ⟵ bad expression"}
select case else 1 end;
[1]
select case when 1=1 then 1 end;
[1]
select case when 1=0 then 1 when 1=3 when 1=1 then 'yes' end;
{"msg": "select case when 1=0 then 1 when 1=3 ❰when❱ ⟵ THEN expected"}
select case when 1=0 then 1 when 1=3 when 1=1 then 2 end;
{"msg": "select case when 1=0 then 1 when 1=3 ❰when❱ ⟵ THEN expected"}
select case when 1=0 then 1 when 1=3 then 2 when 1=1 then 3 end;
[3]
select case when 1=0 then 1 when 1=3 then 2 else null end;
[null]
select case when 1=0 then 1 when 1=3 then 2 else 3 end;
[3]
select case when 1=0 then 1 when 1=3 then 2 end;
[null]
select case when [1,2,3] = [1,2,3] then true end;
[true]
select case when 1=0 then 1 when null then 2 else 3 end;
[3]
disconnect S0;
close E0;
